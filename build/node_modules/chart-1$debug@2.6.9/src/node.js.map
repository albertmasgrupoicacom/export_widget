{"version":3,"sources":["node.js"],"names":["tty","require","util","exports","module","init","log","formatArgs","save","load","useColors","colors","inspectOpts","Object","keys","process","env","filter","key","test","reduce","obj","prop","substring","toLowerCase","replace","_","k","toUpperCase","val","Number","fd","parseInt","DEBUG_FD","deprecate","stream","stdout","stderr","createWritableStdioStream","Boolean","isatty","formatters","o","v","inspect","split","map","str","trim","join","O","args","name","namespace","c","color","prefix","push","humanize","diff","Date","toUTCString","write","format","apply","arguments","namespaces","DEBUG","tty_wrap","binding","guessHandleType","WriteStream","_type","_handle","unref","fs","SyncWriteStream","autoClose","net","Socket","readable","writable","read","Error","_isStdio","debug","i","length","enable"],"mappings":"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","file":"node.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n"]}