{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","makePredicate","words","split","str","indexOf","reservedWords","strict","strictBind","isKeyword","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","defaultOptions","sourceType","sourceFilename","undefined","startLine","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","plugins","strictMode","getOptions","opts","options","key","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","label","conf","arguments","keyword","rightAssociative","binop","updateContext","KeywordTokenType","_TokenType","name","BinopTokenType","_TokenType2","prec","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceBarL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","arrow","template","ellipsis","backQuote","dollarBraceL","at","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","keywords","keys","forEach","lineBreak","lineBreakG","source","isNewLine","nonASCIIwhitespace","TokContext","token","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","state","context","exprAllowed","out","pop","curContext","prevType","_let","_const","_var","input","slice","end","push","braceIsBlock","statementParens","_if","_for","_with","_while","_function","Position","line","col","column","SourceLocation","start","getLineInfo","offset","cur","lastIndex","match","exec","index","State","init","potentialArrowAt","inMethod","inFunction","inGenerator","inAsync","inPropertyName","inType","inClassProperty","noAnonFunctionType","labels","decorators","tokens","comments","trailingComments","leadingComments","commentStack","lineStart","curLine","type","startLoc","endLoc","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","containsEsc","containsOctal","octalPosition","invalidTemplateEscapePosition","exportedIdentifiers","clone","skipArrays","val","Array","isArray","Token","loc","codePointToString","Tokenizer","next","isLookahead","nextToken","eat","isKeyword$$1","word","lookahead","old","curr","setStrict","lastIndexOf","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","charCodeAt","pushComment","block","text","comment","addComment","skipBlockComment","raise","skipLineComment","startSkip","ch","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo","width","readToken_pipe_amp","hasPlugin","readToken_caret","readToken_plus_min","readToken_lt_gt","size","inModule","unexpected","readToken_eq_excl","readRadixNumber","readString","escaped","inClass","charAt","content","mods","readWord1","validFlags","pattern","flags","readInt","radix","len","total","e","Infinity","startsWithDot","octal","isFloat","parseFloat","parseInt","readCodePoint","throwOnInvalid","codePos","readHexChar","quote","chunkStart","readEscapedChar","containsInvalid","inTemplate","_code","octalStr","substr","n","first","escStart","esc","parent","_return","_else","update","frozenDeprecatedWildcardPluginList","Parser","_Tokenizer","_this","loadPlugins","filename","isReservedWord","extend","f","loadAllPlugins","_this2","pluginNames","filter","plugin","pluginList","pluginMap","unshift","_iterator","_isArray","_i","_ref","done","parse","file","startNode","program","parseTopLevel","pp","addExtra","node","extra","isRelational","op","expectRelational","isContextual","eatContextual","expectContextual","message","canInsertSemicolon","isLineTerminator","semicolon","expect","messageOrType","pp$1","parseBlockBody","finishNode","loopLabel","kind","switchLabel","stmtToDirective","stmt","expr","expression","directiveLiteral","startNodeAt","directive","raw","finishNodeAt","parseStatement","declaration","topLevel","parseDecorators","starttype","_break","_continue","parseBreakContinueStatement","_debugger","parseDebuggerStatement","_do","parseDoStatement","parseForStatement","parseFunctionStatement","_class","parseClass","parseIfStatement","parseReturnStatement","_switch","parseSwitchStatement","_throw","parseThrowStatement","_try","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","_export","_import","parseImport","parseExport","parseFunction","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","takeDecorators","allowExport","decorator","parseDecorator","parseMaybeAssign","isBreak","parseIdentifier","lab","body","parseParenExpression","forAwait","parseFor","_init","varKind","parseVar","_in","declarations","parseForIn","refShorthandDefaultPos","description","toAssignable","checkLVal","consequent","alternate","argument","discriminant","cases","sawDefault","_case","_default","isCase","empty","handler","_catch","clause","param","parseBindingAtom","guardedHandlers","finalizer","_finally","object","_label","statementStart","allowDirectives","isValidDirective","parenthesized","directives","parsedNonDirective","oldStrict","left","right","isFor","decl","parseVarHead","id","isStatement","allowExpressionBody","isAsync","optionalId","oldInMethod","initFunction","async","generator","_yield","parseBindingIdentifier","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","parseClassBody","isClassProperty","isClassMethod","isNonstaticConstructor","method","computed","static","hadConstructorCall","hadConstructor","classBody","parseClassMethod","parseClassProperty","parsePropertyName","isSimple","_key","isGenerator","checkGetterSetterParamCount","parseMethod","_extends","parseExprSubscripts","specifier","exported","specifiers","parseExportSpecifiersMaybe","parseExportFrom","isExportDefaultSpecifier","_specifier","_specifier2","needsSemi","checkExport","shouldParseExportDeclaration","parseExportDeclaration","parseExportSpecifiers","concat","parseExprAtom","checkNames","isDefault","checkDuplicateExports","_iterator2","_isArray2","_i2","_ref2","_iterator3","_isArray3","_i3","_ref3","checkDeclaration","isClass","_iterator4","properties","_isArray4","_i4","_ref4","prop","_iterator5","elements","_isArray5","_i5","_ref5","elem","raiseDuplicateExportError","nodes","needsFrom","local","__clone","parseImportSpecifiers","startPos","parseImportSpecifierDefault","parseImportSpecifier","imported","checkReservedWord","pp$2","isBinding","contextDescription","arg","toAssignableList","operator","exprList","last","elt","toReferencedList","parseSpread","parseRest","shouldAllowYieldIdentifier","parseObj","close","allowEmpty","elts","parseAssignableListItemTypes","parseMaybeDefault","checkClashes","pp$3","checkPropClash","propHash","proto","getExpression","noIn","expressions","afterLeftParse","refNeedsArrowPos","_left","parseYield","failOnShorthandAssign","parseMaybeConditional","errorMsg","parseExprOps","parseConditional","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","parenthesizedArgument","argType","_node","parseSubscripts","base","noCalls","callee","parseNoCallExpr","_node2","property","_node3","possibleAsync","_node4","parseCallExpressionArguments","shouldParseAsyncArrow","parseAsyncArrowFromCallExpression","_node5","tag","quasi","parseTemplate","possibleAsyncArrow","innerParenStart","parseExprListItem","parseArrowExpression","canBeArrow","_super","allowAwait","allowYield","parseAwait","_node6","oldInFunction","oldLabels","parseLiteral","_null","_true","_false","parseParenAndDistinguishExpression","parseExprList","parseFunctionExpression","_new","parseNew","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parseArrow","parenStart","metaProp","parseTemplateElement","isTagged","replace","cooked","tail","curElt","quasis","isPattern","firstRestLocation","position","shorthand","asyncId","parseObjPropValue","isGetterOrSetterMethod","paramCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","isStrictBody","isExpression","allowExpression","oldInAsync","oldInFunc","oldInGen","isStrict","nameHash","liberal","identifierName","checkKeywords","delegate","pp$4","commentKeys","Node","node2","processComment","pp$5","err","SyntaxError","stack","pp$6","firstChild","lastChild","j","lastInStack","lastComment","commentPreviousNode","splice","lastArg","innerComments","pp$7","estreeParseRegExpLiteral","regex","estreeParseLiteral","directiveToStmt","isSimpleProperty","estreePlugin","inner","_len","args","apply","_len2","_key2","reverse","typeParameters","_len3","_key3","_len4","_key4","funcNode","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","primitiveTypes","pp$8","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","_flowParseTypeAndPred","returnType","typeAnnotation","flowParseDeclare","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","default","flowParseTypeAnnotatableIdentifier","bodyNode","_bodyNode","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","extends","mixins","flowParseInterfaceExtends","flowParseObjectType","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","flowParseRestrictedIdentifier","declare","supertype","impltype","flowParseTypeParameter","variance","flowParseVariance","ident","bound","jsxTagStart","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","flowObjectTypeSemicolon","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeMethod","optional","flowParseObjectTypeCallProperty","valueNode","allowStatic","allowExact","allowSpread","nodeStart","propertyKey","callProperties","indexers","endDelim","exact","variancePos","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","reinterpretTypeAsFunctionTypeParam","ret","flowIdentToTypeAnnotation","isGroupedType","oldNoAnonFunctionType","flowParsePostfixType","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","flowParseTypeAndPredicateAnnotation","_flowParseTypeAndPred2","typeCastToParameter","flowPlugin","typeCastNode","exportKind","declarationNode","_declarationNode","_declarationNode2","_exprListItem","container","superTypeParameters","implemented","implements","importKind","firstIdentLoc","firstIdent","specifierTypeKind","as_ident","jsxError","arrowExpression","fromCodePoint","stringFromCharCode","floor","Math","codeUnits","highSurrogate","lowSurrogate","result","codePoint","Number","isFinite","RangeError","fromCodePoint$1","XHTMLEntities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagEnd","pp$9","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","count","entity","jsxReadWord","getQualifiedJSXName","namespace","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","jsxParseElement","jsxPlugin","refShortHandDefaultPos","estree","flow","jsx","parser","tokTypes"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* eslint max-len: 0 */\n\n// This is a trick taken from Esprima. It turns out that, on\n// non-Chrome browsers, to check whether a string is in a set, a\n// predicate containing a big ugly `switch` statement is faster than\n// a regular expression, and on Chrome the two are about on par.\n// This function uses `eval` (non-lexical) to produce such a\n// predicate from a space-separated string of words.\n//\n// It starts by sorting the words by length.\n\nfunction makePredicate(words) {\n  words = words.split(\" \");\n  return function (str) {\n    return words.indexOf(str) >= 0;\n  };\n}\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  6: makePredicate(\"enum await\"),\n  strict: makePredicate(\"implements interface let package private protected public static yield\"),\n  strictBind: makePredicate(\"eval arguments\")\n};\n\n// And the keywords\n\nvar isKeyword = makePredicate(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super\");\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA900-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `bin/generate-identifier-regex.js`.\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 264, 8, 2, 36, 18, 0, 50, 29, 881, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 65, 0, 32, 6124, 20, 754, 9486, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541];\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 87, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 838, 7, 2, 7, 17, 9, 57, 21, 2, 13, 19882, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\n// A second optional argument can be given to further configure\nvar defaultOptions = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n  for (var key in defaultOptions) {\n    options[key] = opts && key in opts ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar beforeExpr = true;\nvar startsExpr = true;\nvar isLoop = true;\nvar isAssign = true;\nvar prefix = true;\nvar postfix = true;\n\nvar TokenType = function TokenType(label) {\n  var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  classCallCheck(this, TokenType);\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.rightAssociative = !!conf.rightAssociative;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nvar KeywordTokenType = function (_TokenType) {\n  inherits(KeywordTokenType, _TokenType);\n\n  function KeywordTokenType(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, KeywordTokenType);\n\n    options.keyword = name;\n\n    return possibleConstructorReturn(this, _TokenType.call(this, name, options));\n  }\n\n  return KeywordTokenType;\n}(TokenType);\n\nvar BinopTokenType = function (_TokenType2) {\n  inherits(BinopTokenType, _TokenType2);\n\n  function BinopTokenType(name, prec) {\n    classCallCheck(this, BinopTokenType);\n    return possibleConstructorReturn(this, _TokenType2.call(this, name, { beforeExpr: beforeExpr, binop: prec }));\n  }\n\n  return BinopTokenType;\n}(TokenType);\n\nvar types = {\n  num: new TokenType(\"num\", { startsExpr: startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr: startsExpr }),\n  string: new TokenType(\"string\", { startsExpr: startsExpr }),\n  name: new TokenType(\"name\", { startsExpr: startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr: beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr: beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr: beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr: beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr: beforeExpr }),\n  arrow: new TokenType(\"=>\", { beforeExpr: beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr: beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr: startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  at: new TokenType(\"@\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr: beforeExpr, isAssign: isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr: beforeExpr, isAssign: isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix: prefix, postfix: postfix, startsExpr: startsExpr }),\n  prefix: new TokenType(\"prefix\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  logicalOR: new BinopTokenType(\"||\", 1),\n  logicalAND: new BinopTokenType(\"&&\", 2),\n  bitwiseOR: new BinopTokenType(\"|\", 3),\n  bitwiseXOR: new BinopTokenType(\"^\", 4),\n  bitwiseAND: new BinopTokenType(\"&\", 5),\n  equality: new BinopTokenType(\"==/!=\", 6),\n  relational: new BinopTokenType(\"</>\", 7),\n  bitShift: new BinopTokenType(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr: beforeExpr, binop: 9, prefix: prefix, startsExpr: startsExpr }),\n  modulo: new BinopTokenType(\"%\", 10),\n  star: new BinopTokenType(\"*\", 10),\n  slash: new BinopTokenType(\"/\", 10),\n  exponent: new TokenType(\"**\", { beforeExpr: beforeExpr, binop: 11, rightAssociative: true })\n};\n\nvar keywords = {\n  \"break\": new KeywordTokenType(\"break\"),\n  \"case\": new KeywordTokenType(\"case\", { beforeExpr: beforeExpr }),\n  \"catch\": new KeywordTokenType(\"catch\"),\n  \"continue\": new KeywordTokenType(\"continue\"),\n  \"debugger\": new KeywordTokenType(\"debugger\"),\n  \"default\": new KeywordTokenType(\"default\", { beforeExpr: beforeExpr }),\n  \"do\": new KeywordTokenType(\"do\", { isLoop: isLoop, beforeExpr: beforeExpr }),\n  \"else\": new KeywordTokenType(\"else\", { beforeExpr: beforeExpr }),\n  \"finally\": new KeywordTokenType(\"finally\"),\n  \"for\": new KeywordTokenType(\"for\", { isLoop: isLoop }),\n  \"function\": new KeywordTokenType(\"function\", { startsExpr: startsExpr }),\n  \"if\": new KeywordTokenType(\"if\"),\n  \"return\": new KeywordTokenType(\"return\", { beforeExpr: beforeExpr }),\n  \"switch\": new KeywordTokenType(\"switch\"),\n  \"throw\": new KeywordTokenType(\"throw\", { beforeExpr: beforeExpr }),\n  \"try\": new KeywordTokenType(\"try\"),\n  \"var\": new KeywordTokenType(\"var\"),\n  \"let\": new KeywordTokenType(\"let\"),\n  \"const\": new KeywordTokenType(\"const\"),\n  \"while\": new KeywordTokenType(\"while\", { isLoop: isLoop }),\n  \"with\": new KeywordTokenType(\"with\"),\n  \"new\": new KeywordTokenType(\"new\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  \"this\": new KeywordTokenType(\"this\", { startsExpr: startsExpr }),\n  \"super\": new KeywordTokenType(\"super\", { startsExpr: startsExpr }),\n  \"class\": new KeywordTokenType(\"class\"),\n  \"extends\": new KeywordTokenType(\"extends\", { beforeExpr: beforeExpr }),\n  \"export\": new KeywordTokenType(\"export\"),\n  \"import\": new KeywordTokenType(\"import\", { startsExpr: startsExpr }),\n  \"yield\": new KeywordTokenType(\"yield\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  \"null\": new KeywordTokenType(\"null\", { startsExpr: startsExpr }),\n  \"true\": new KeywordTokenType(\"true\", { startsExpr: startsExpr }),\n  \"false\": new KeywordTokenType(\"false\", { startsExpr: startsExpr }),\n  \"in\": new KeywordTokenType(\"in\", { beforeExpr: beforeExpr, binop: 7 }),\n  \"instanceof\": new KeywordTokenType(\"instanceof\", { beforeExpr: beforeExpr, binop: 7 }),\n  \"typeof\": new KeywordTokenType(\"typeof\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  \"void\": new KeywordTokenType(\"void\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  \"delete\": new KeywordTokenType(\"delete\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr })\n};\n\n// Map keyword names to token types.\nObject.keys(keywords).forEach(function (name) {\n  types[\"_\" + name] = keywords[name];\n});\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  classCallCheck(this, TokContext);\n\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n};\n\nvar types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  templateQuasi: new TokContext(\"${\", true),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, function (p) {\n    return p.readTmplToken();\n  }),\n  functionExpression: new TokContext(\"function\", true)\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  var out = this.state.context.pop();\n  if (out === types$1.braceStatement && this.curContext() === types$1.functionExpression) {\n    this.state.context.pop();\n    this.state.exprAllowed = false;\n  } else if (out === types$1.templateQuasi) {\n    this.state.exprAllowed = true;\n  } else {\n    this.state.exprAllowed = !out.isExpr;\n  }\n};\n\ntypes.name.updateContext = function (prevType) {\n  this.state.exprAllowed = false;\n\n  if (prevType === types._let || prevType === types._const || prevType === types._var) {\n    if (lineBreak.test(this.input.slice(this.state.end))) {\n      this.state.exprAllowed = true;\n    }\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = function () {\n  if (this.curContext() !== types$1.braceStatement) {\n    this.state.context.push(types$1.functionExpression);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  classCallCheck(this, Position);\n\n  this.line = line;\n  this.column = col;\n};\n\nvar SourceLocation = function SourceLocation(start, end) {\n  classCallCheck(this, SourceLocation);\n\n  this.start = start;\n  this.end = end;\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n}\n\nvar State = function () {\n  function State() {\n    classCallCheck(this, State);\n  }\n\n  State.prototype.init = function init(options, input) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.input = input;\n\n    this.potentialArrowAt = -1;\n\n    this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inPropertyName = this.inType = this.inClassProperty = this.noAnonFunctionType = false;\n\n    this.labels = [];\n\n    this.decorators = [];\n\n    this.tokens = [];\n\n    this.comments = [];\n\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n\n    this.pos = this.lineStart = 0;\n    this.curLine = options.startLine;\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n\n    this.containsEsc = this.containsOctal = false;\n    this.octalPosition = null;\n\n    this.invalidTemplateEscapePosition = null;\n\n    this.exportedIdentifiers = [];\n\n    return this;\n  };\n\n  // TODO\n\n\n  // TODO\n\n\n  // Used to signify the start of a potential arrow function\n\n\n  // Flags to track whether we are in a function, a generator.\n\n\n  // Labels in scope.\n\n\n  // Leading decorators.\n\n\n  // Token store.\n\n\n  // Comment store.\n\n\n  // Comment attachment store\n\n\n  // The current position of the tokenizer in the input.\n\n\n  // Properties of the current token:\n  // Its type\n\n\n  // For tokens that include more information than their type, the value\n\n\n  // Its start and end offset\n\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n\n\n  // Position information for the previous token\n\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n\n  // TODO\n\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n\n\n  State.prototype.curPosition = function curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  };\n\n  State.prototype.clone = function clone(skipArrays) {\n    var state = new State();\n    for (var key in this) {\n      var val = this[key];\n\n      if ((!skipArrays || key === \"context\") && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n    return state;\n  };\n\n  return State;\n}();\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(state) {\n  classCallCheck(this, Token);\n\n  this.type = state.type;\n  this.value = state.value;\n  this.start = state.start;\n  this.end = state.end;\n  this.loc = new SourceLocation(state.startLoc, state.endLoc);\n};\n\n// ## Tokenizer\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  } else {\n    return String.fromCharCode((code - 0x10000 >> 10) + 0xD800, (code - 0x10000 & 1023) + 0xDC00);\n  }\n}\n\nvar Tokenizer = function () {\n  function Tokenizer(options, input) {\n    classCallCheck(this, Tokenizer);\n\n    this.state = new State();\n    this.state.init(options, input);\n  }\n\n  // Move to the next token\n\n  Tokenizer.prototype.next = function next() {\n    if (!this.isLookahead) {\n      this.state.tokens.push(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  };\n\n  // TODO\n\n  Tokenizer.prototype.eat = function eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // TODO\n\n  Tokenizer.prototype.match = function match(type) {\n    return this.state.type === type;\n  };\n\n  // TODO\n\n  Tokenizer.prototype.isKeyword = function isKeyword$$1(word) {\n    return isKeyword(word);\n  };\n\n  // TODO\n\n  Tokenizer.prototype.lookahead = function lookahead() {\n    var old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    var curr = this.state.clone(true);\n    this.state = old;\n    return curr;\n  };\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  Tokenizer.prototype.setStrict = function setStrict(strict) {\n    this.state.strict = strict;\n    if (!this.match(types.num) && !this.match(types.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart = this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  };\n\n  Tokenizer.prototype.curContext = function curContext() {\n    return this.state.context[this.state.context.length - 1];\n  };\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  Tokenizer.prototype.nextToken = function nextToken() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) this.skipSpace();\n\n    this.state.containsOctal = false;\n    this.state.octalPosition = null;\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.input.length) return this.finishToken(types.eof);\n\n    if (curContext.override) {\n      return curContext.override(this);\n    } else {\n      return this.readToken(this.fullCharCodeAtPos());\n    }\n  };\n\n  Tokenizer.prototype.readToken = function readToken(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code) || code === 92 /* '\\' */) {\n        return this.readWord();\n      } else {\n      return this.getTokenFromCode(code);\n    }\n  };\n\n  Tokenizer.prototype.fullCharCodeAtPos = function fullCharCodeAtPos() {\n    var code = this.input.charCodeAt(this.state.pos);\n    if (code <= 0xd7ff || code >= 0xe000) return code;\n\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    return (code << 10) + next - 0x35fdc00;\n  };\n\n  Tokenizer.prototype.pushComment = function pushComment(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n\n    if (!this.isLookahead) {\n      this.state.tokens.push(comment);\n      this.state.comments.push(comment);\n      this.addComment(comment);\n    }\n  };\n\n  Tokenizer.prototype.skipBlockComment = function skipBlockComment() {\n    var startLoc = this.state.curPosition();\n    var start = this.state.pos;\n    var end = this.input.indexOf(\"*/\", this.state.pos += 2);\n    if (end === -1) this.raise(this.state.pos - 2, \"Unterminated comment\");\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    var match = void 0;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  };\n\n  Tokenizer.prototype.skipLineComment = function skipLineComment(startSkip) {\n    var start = this.state.pos;\n    var startLoc = this.state.curPosition();\n    var ch = this.input.charCodeAt(this.state.pos += startSkip);\n    while (this.state.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n      ++this.state.pos;\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  Tokenizer.prototype.skipSpace = function skipSpace() {\n    loop: while (this.state.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:case 160:\n          // ' '\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:case 8232:case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          // '/'\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              // '*'\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  Tokenizer.prototype.finishToken = function finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    var prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n\n\n  Tokenizer.prototype.readToken_dot = function readToken_dot() {\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      return this.readNumber(true);\n    }\n\n    var next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 46 && next2 === 46) {\n      // 46 = dot '.'\n      this.state.pos += 3;\n      return this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      return this.finishToken(types.dot);\n    }\n  };\n\n  Tokenizer.prototype.readToken_slash = function readToken_slash() {\n    // '/'\n    if (this.state.exprAllowed) {\n      ++this.state.pos;\n      return this.readRegexp();\n    }\n\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.slash, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_mult_modulo = function readToken_mult_modulo(code) {\n    // '%*'\n    var type = code === 42 ? types.star : types.modulo;\n    var width = 1;\n    var next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 42) {\n      // '*'\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61) {\n      width++;\n      type = types.assign;\n    }\n\n    return this.finishOp(type, width);\n  };\n\n  Tokenizer.prototype.readToken_pipe_amp = function readToken_pipe_amp(code) {\n    // '|&'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n    if (next === 61) return this.finishOp(types.assign, 2);\n    if (code === 124 && next === 125 && this.hasPlugin(\"flow\")) return this.finishOp(types.braceBarR, 2);\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  };\n\n  Tokenizer.prototype.readToken_caret = function readToken_caret() {\n    // '^'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.bitwiseXOR, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_plus_min = function readToken_plus_min(code) {\n    // '+-'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && this.input.charCodeAt(this.state.pos + 2) === 62 && lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken();\n      }\n      return this.finishOp(types.incDec, 2);\n    }\n\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.plusMin, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_lt_gt = function readToken_lt_gt(code) {\n    // '<>'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    var size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === 61) return this.finishOp(types.assign, size + 1);\n      return this.finishOp(types.bitShift, size);\n    }\n\n    if (next === 33 && code === 60 && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      if (this.inModule) this.unexpected();\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken();\n    }\n\n    if (next === 61) {\n      // <= | >=\n      size = 2;\n    }\n\n    return this.finishOp(types.relational, size);\n  };\n\n  Tokenizer.prototype.readToken_eq_excl = function readToken_eq_excl(code) {\n    // '=!'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) return this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n    if (code === 61 && next === 62) {\n      // '=>'\n      this.state.pos += 2;\n      return this.finishToken(types.arrow);\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n  };\n\n  Tokenizer.prototype.getTokenFromCode = function getTokenFromCode(code) {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n      case 46:\n        // '.'\n        return this.readToken_dot();\n\n      // Punctuation tokens.\n      case 40:\n        ++this.state.pos;return this.finishToken(types.parenL);\n      case 41:\n        ++this.state.pos;return this.finishToken(types.parenR);\n      case 59:\n        ++this.state.pos;return this.finishToken(types.semi);\n      case 44:\n        ++this.state.pos;return this.finishToken(types.comma);\n      case 91:\n        ++this.state.pos;return this.finishToken(types.bracketL);\n      case 93:\n        ++this.state.pos;return this.finishToken(types.bracketR);\n\n      case 123:\n        if (this.hasPlugin(\"flow\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          return this.finishOp(types.braceBarL, 2);\n        } else {\n          ++this.state.pos;\n          return this.finishToken(types.braceL);\n        }\n\n      case 125:\n        ++this.state.pos;return this.finishToken(types.braceR);\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          return this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          return this.finishToken(types.colon);\n        }\n\n      case 63:\n        ++this.state.pos;return this.finishToken(types.question);\n      case 64:\n        ++this.state.pos;return this.finishToken(types.at);\n\n      case 96:\n        // '`'\n        ++this.state.pos;\n        return this.finishToken(types.backQuote);\n\n      case 48:\n        // '0'\n        var next = this.input.charCodeAt(this.state.pos + 1);\n        if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number\n        if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number\n        if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float.\n      case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:\n        // 1-9\n        return this.readNumber(false);\n\n      // Quotes produce strings.\n      case 34:case 39:\n        // '\"', \"'\"\n        return this.readString(code);\n\n      // Operators are parsed inline in tiny state machines. '=' (61) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case 47:\n        // '/'\n        return this.readToken_slash();\n\n      case 37:case 42:\n        // '%*'\n        return this.readToken_mult_modulo(code);\n\n      case 124:case 38:\n        // '|&'\n        return this.readToken_pipe_amp(code);\n\n      case 94:\n        // '^'\n        return this.readToken_caret();\n\n      case 43:case 45:\n        // '+-'\n        return this.readToken_plus_min(code);\n\n      case 60:case 62:\n        // '<>'\n        return this.readToken_lt_gt(code);\n\n      case 61:case 33:\n        // '=!'\n        return this.readToken_eq_excl(code);\n\n      case 126:\n        // '~'\n        return this.finishOp(types.prefix, 1);\n    }\n\n    this.raise(this.state.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  Tokenizer.prototype.finishOp = function finishOp(type, size) {\n    var str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    return this.finishToken(type, str);\n  };\n\n  Tokenizer.prototype.readRegexp = function readRegexp() {\n    var start = this.state.pos;\n    var escaped = void 0,\n        inClass = void 0;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\");\n      var ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        this.raise(start, \"Unterminated regular expression\");\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    var content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n    // here (don't ask).\n    var mods = this.readWord1();\n    if (mods) {\n      var validFlags = /^[gmsiyu]*$/;\n      if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\");\n    }\n    return this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  Tokenizer.prototype.readInt = function readInt(radix, len) {\n    var start = this.state.pos;\n    var total = 0;\n\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.state.pos);\n      var val = void 0;\n      if (code >= 97) {\n        val = code - 97 + 10; // a\n      } else if (code >= 65) {\n        val = code - 65 + 10; // A\n      } else if (code >= 48 && code <= 57) {\n        val = code - 48; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) break;\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (this.state.pos === start || len != null && this.state.pos - start !== len) return null;\n\n    return total;\n  };\n\n  Tokenizer.prototype.readRadixNumber = function readRadixNumber(radix) {\n    this.state.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) this.raise(this.state.start + 2, \"Expected number in radix \" + radix);\n    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, \"Identifier directly after number\");\n    return this.finishToken(types.num, val);\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  Tokenizer.prototype.readNumber = function readNumber(startsWithDot) {\n    var start = this.state.pos;\n    var octal = this.input.charCodeAt(start) === 48; // '0'\n    var isFloat = false;\n\n    if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\");\n    if (octal && this.state.pos == start + 1) octal = false; // number === 0\n\n    var next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !octal) {\n      // '.'\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !octal) {\n      // 'eE'\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) ++this.state.pos; // '+-'\n      if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n      isFloat = true;\n    }\n\n    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, \"Identifier directly after number\");\n\n    var str = this.input.slice(start, this.state.pos);\n    var val = void 0;\n    if (isFloat) {\n      val = parseFloat(str);\n    } else if (!octal || str.length === 1) {\n      val = parseInt(str, 10);\n    } else if (this.state.strict) {\n      this.raise(start, \"Invalid number\");\n    } else if (/[89]/.test(str)) {\n      val = parseInt(str, 10);\n    } else {\n      val = parseInt(str, 8);\n    }\n    return this.finishToken(types.num, val);\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  Tokenizer.prototype.readCodePoint = function readCodePoint(throwOnInvalid) {\n    var ch = this.input.charCodeAt(this.state.pos);\n    var code = void 0;\n\n    if (ch === 123) {\n      // '{'\n      var codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, throwOnInvalid);\n      ++this.state.pos;\n      if (code === null) {\n        --this.state.invalidTemplateEscapePosition; // to point to the '\\'' instead of the 'u'\n      } else if (code > 0x10FFFF) {\n        if (throwOnInvalid) {\n          this.raise(codePos, \"Code point out of bounds\");\n        } else {\n          this.state.invalidTemplateEscapePosition = codePos - 2;\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, throwOnInvalid);\n    }\n    return code;\n  };\n\n  Tokenizer.prototype.readString = function readString(quote) {\n    var out = \"\",\n        chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(this.state.start, \"Unterminated string constant\");\n      var ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 92) {\n        // '\\'\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else {\n        if (isNewLine(ch)) this.raise(this.state.start, \"Unterminated string constant\");\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  };\n\n  // Reads template string tokens.\n\n  Tokenizer.prototype.readTmplToken = function readTmplToken() {\n    var out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(this.state.start, \"Unterminated template\");\n      var ch = this.input.charCodeAt(this.state.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        // '`', '${'\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            return this.finishToken(types.dollarBraceL);\n          } else {\n            ++this.state.pos;\n            return this.finishToken(types.backQuote);\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        return this.finishToken(types.template, containsInvalid ? null : out);\n      }\n      if (ch === 92) {\n        // '\\'\n        out += this.input.slice(chunkStart, this.state.pos);\n        var escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos;\n          case 10:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  };\n\n  // Used to read escaped characters\n\n  Tokenizer.prototype.readEscapedChar = function readEscapedChar(inTemplate) {\n    var throwOnInvalid = !inTemplate;\n    var ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case 110:\n        return \"\\n\"; // 'n' -> '\\n'\n      case 114:\n        return \"\\r\"; // 'r' -> '\\r'\n      case 120:\n        {\n          // 'x'\n          var code = this.readHexChar(2, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n      case 117:\n        {\n          // 'u'\n          var _code = this.readCodePoint(throwOnInvalid);\n          return _code === null ? null : codePointToString(_code);\n        }\n      case 116:\n        return \"\\t\"; // 't' -> '\\t'\n      case 98:\n        return \"\\b\"; // 'b' -> '\\b'\n      case 118:\n        return \"\\x0B\"; // 'v' -> '\\u000b'\n      case 102:\n        return \"\\f\"; // 'f' -> '\\f'\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos; // '\\r\\n'\n      case 10:\n        // ' \\n'\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n        return \"\";\n      default:\n        if (ch >= 48 && ch <= 55) {\n          var codePos = this.state.pos - 1;\n          var octalStr = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0];\n          var octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          if (octal > 0) {\n            if (inTemplate) {\n              this.state.invalidTemplateEscapePosition = codePos;\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, \"Octal literal in strict mode\");\n            } else if (!this.state.containsOctal) {\n              // These properties are only used to throw an error for an octal which occurs\n              // in a directive which occurs prior to a \"use strict\" directive.\n              this.state.containsOctal = true;\n              this.state.octalPosition = codePos;\n            }\n          }\n          this.state.pos += octalStr.length - 1;\n          return String.fromCharCode(octal);\n        }\n        return String.fromCharCode(ch);\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  Tokenizer.prototype.readHexChar = function readHexChar(len, throwOnInvalid) {\n    var codePos = this.state.pos;\n    var n = this.readInt(16, len);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, \"Bad character escape sequence\");\n      } else {\n        this.state.pos = codePos - 1;\n        this.state.invalidTemplateEscapePosition = codePos - 1;\n      }\n    }\n    return n;\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  Tokenizer.prototype.readWord1 = function readWord1() {\n    this.state.containsEsc = false;\n    var word = \"\",\n        first = true,\n        chunkStart = this.state.pos;\n    while (this.state.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        // \"\\\"\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        var escStart = this.state.pos;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          // \"u\"\n          this.raise(this.state.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        }\n\n        ++this.state.pos;\n        var esc = this.readCodePoint(true);\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, true)) {\n          this.raise(escStart, \"Invalid Unicode escape\");\n        }\n\n        word += codePointToString(esc);\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  Tokenizer.prototype.readWord = function readWord() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (!this.state.containsEsc && this.isKeyword(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word);\n  };\n\n  Tokenizer.prototype.braceIsBlock = function braceIsBlock(prevType) {\n    if (prevType === types.colon) {\n      var parent = this.curContext();\n      if (parent === types$1.braceStatement || parent === types$1.braceExpression) {\n        return !parent.isExpr;\n      }\n    }\n\n    if (prevType === types._return) {\n      return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return this.curContext() === types$1.braceStatement;\n    }\n\n    return !this.state.exprAllowed;\n  };\n\n  Tokenizer.prototype.updateContext = function updateContext(prevType) {\n    var type = this.state.type;\n    var update = void 0;\n\n    if (type.keyword && prevType === types.dot) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  };\n\n  return Tokenizer;\n}();\n\nvar plugins = {};\nvar frozenDeprecatedWildcardPluginList = [\"jsx\", \"doExpressions\", \"objectRestSpread\", \"decorators\", \"classProperties\", \"exportExtensions\", \"asyncGenerators\", \"functionBind\", \"functionSent\", \"dynamicImport\", \"flow\"];\n\nvar Parser = function (_Tokenizer) {\n  inherits(Parser, _Tokenizer);\n\n  function Parser(options, input) {\n    classCallCheck(this, Parser);\n\n    options = getOptions(options);\n\n    var _this = possibleConstructorReturn(this, _Tokenizer.call(this, options, input));\n\n    _this.options = options;\n    _this.inModule = _this.options.sourceType === \"module\";\n    _this.input = input;\n    _this.plugins = _this.loadPlugins(_this.options.plugins);\n    _this.filename = options.sourceFilename;\n\n    // If enabled, skip leading hashbang line.\n    if (_this.state.pos === 0 && _this.input[0] === \"#\" && _this.input[1] === \"!\") {\n      _this.skipLineComment(2);\n    }\n    return _this;\n  }\n\n  Parser.prototype.isReservedWord = function isReservedWord(word) {\n    if (word === \"await\") {\n      return this.inModule;\n    } else {\n      return reservedWords[6](word);\n    }\n  };\n\n  Parser.prototype.hasPlugin = function hasPlugin(name) {\n    if (this.plugins[\"*\"] && frozenDeprecatedWildcardPluginList.indexOf(name) > -1) {\n      return true;\n    }\n\n    return !!this.plugins[name];\n  };\n\n  Parser.prototype.extend = function extend(name, f) {\n    this[name] = f(this[name]);\n  };\n\n  Parser.prototype.loadAllPlugins = function loadAllPlugins() {\n    var _this2 = this;\n\n    // ensure flow plugin loads last, also ensure estree is not loaded with *\n    var pluginNames = Object.keys(plugins).filter(function (name) {\n      return name !== \"flow\" && name !== \"estree\";\n    });\n    pluginNames.push(\"flow\");\n\n    pluginNames.forEach(function (name) {\n      var plugin = plugins[name];\n      if (plugin) plugin(_this2);\n    });\n  };\n\n  Parser.prototype.loadPlugins = function loadPlugins(pluginList) {\n    // TODO: Deprecate \"*\" option in next major version of Babylon\n    if (pluginList.indexOf(\"*\") >= 0) {\n      this.loadAllPlugins();\n\n      return { \"*\": true };\n    }\n\n    var pluginMap = {};\n\n    if (pluginList.indexOf(\"flow\") >= 0) {\n      // ensure flow plugin loads last\n      pluginList = pluginList.filter(function (plugin) {\n        return plugin !== \"flow\";\n      });\n      pluginList.push(\"flow\");\n    }\n\n    if (pluginList.indexOf(\"estree\") >= 0) {\n      // ensure estree plugin loads first\n      pluginList = pluginList.filter(function (plugin) {\n        return plugin !== \"estree\";\n      });\n      pluginList.unshift(\"estree\");\n    }\n\n    for (var _iterator = pluginList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var name = _ref;\n\n      if (!pluginMap[name]) {\n        pluginMap[name] = true;\n\n        var plugin = plugins[name];\n        if (plugin) plugin(this);\n      }\n    }\n\n    return pluginMap;\n  };\n\n  Parser.prototype.parse = function parse() {\n    var file = this.startNode();\n    var program = this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(file, program);\n  };\n\n  return Parser;\n}(Tokenizer);\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\n// TODO\n\npp.addExtra = function (node, key, val) {\n  if (!node) return;\n\n  var extra = node.extra = node.extra || {};\n  extra[key] = val;\n};\n\n// TODO\n\npp.isRelational = function (op) {\n  return this.match(types.relational) && this.state.value === op;\n};\n\n// TODO\n\npp.expectRelational = function (op) {\n  if (this.isRelational(op)) {\n    this.next();\n  } else {\n    this.unexpected(null, types.relational);\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function (name) {\n  return this.match(types.name) && this.state.value === name;\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function (name) {\n  return this.state.value === name && this.eat(types.name);\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function (name, message) {\n  if (!this.eatContextual(name)) this.unexpected(null, message);\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function () {\n  return this.match(types.eof) || this.match(types.braceR) || lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n};\n\n// TODO\n\npp.isLineTerminator = function () {\n  return this.eat(types.semi) || this.canInsertSemicolon();\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function () {\n  if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error at given pos.\n\npp.expect = function (type, pos) {\n  return this.eat(type) || this.unexpected(pos, type);\n};\n\n// Raise an unexpected token error. Can take the expected token type\n// instead of a message string.\n\npp.unexpected = function (pos) {\n  var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Unexpected token\";\n\n  if (messageOrType && (typeof messageOrType === \"undefined\" ? \"undefined\" : _typeof(messageOrType)) === \"object\" && messageOrType.label) {\n    messageOrType = \"Unexpected token, expected \" + messageOrType.label;\n  }\n  this.raise(pos != null ? pos : this.state.start, messageOrType);\n};\n\n/* eslint max-len: 0 */\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function (file, program) {\n  program.sourceType = this.options.sourceType;\n\n  this.parseBlockBody(program, true, true, types.eof);\n\n  file.program = this.finishNode(program, \"Program\");\n  file.comments = this.state.comments;\n  file.tokens = this.state.tokens;\n\n  return this.finishNode(file, \"File\");\n};\n\nvar loopLabel = { kind: \"loop\" };\nvar switchLabel = { kind: \"switch\" };\n\n// TODO\n\npp$1.stmtToDirective = function (stmt) {\n  var expr = stmt.expression;\n\n  var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n  var directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n  var raw = this.input.slice(expr.start, expr.end);\n  var val = directiveLiteral.value = raw.slice(1, -1); // remove quotes\n\n  this.addExtra(directiveLiteral, \"raw\", raw);\n  this.addExtra(directiveLiteral, \"rawValue\", val);\n\n  directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n\n  return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function (declaration, topLevel) {\n  if (this.match(types.at)) {\n    this.parseDecorators(true);\n  }\n\n  var starttype = this.state.type;\n  var node = this.startNode();\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case types._break:case types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case types._debugger:\n      return this.parseDebuggerStatement(node);\n    case types._do:\n      return this.parseDoStatement(node);\n    case types._for:\n      return this.parseForStatement(node);\n    case types._function:\n      if (!declaration) this.unexpected();\n      return this.parseFunctionStatement(node);\n\n    case types._class:\n      if (!declaration) this.unexpected();\n      return this.parseClass(node, true);\n\n    case types._if:\n      return this.parseIfStatement(node);\n    case types._return:\n      return this.parseReturnStatement(node);\n    case types._switch:\n      return this.parseSwitchStatement(node);\n    case types._throw:\n      return this.parseThrowStatement(node);\n    case types._try:\n      return this.parseTryStatement(node);\n\n    case types._let:\n    case types._const:\n      if (!declaration) this.unexpected(); // NOTE: falls through to _var\n\n    case types._var:\n      return this.parseVarStatement(node, starttype);\n\n    case types._while:\n      return this.parseWhileStatement(node);\n    case types._with:\n      return this.parseWithStatement(node);\n    case types.braceL:\n      return this.parseBlock();\n    case types.semi:\n      return this.parseEmptyStatement(node);\n    case types._export:\n    case types._import:\n      if (this.hasPlugin(\"dynamicImport\") && this.lookahead().type === types.parenL) break;\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) {\n          this.raise(this.state.start, \"'import' and 'export' may only appear at the top level\");\n        }\n\n        if (!this.inModule) {\n          this.raise(this.state.start, \"'import' and 'export' may appear only with 'sourceType: \\\"module\\\"'\");\n        }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node);\n\n    case types.name:\n      if (this.state.value === \"async\") {\n        // peek ahead and see if next token is a function\n        var state = this.state.clone();\n        this.next();\n        if (this.match(types._function) && !this.canInsertSemicolon()) {\n          this.expect(types._function);\n          return this.parseFunction(node, true, false, true);\n        } else {\n          this.state = state;\n        }\n      }\n  }\n\n  // If the statement does not start with a statement keyword or a\n  // brace, it's an ExpressionStatement or LabeledStatement. We\n  // simply start parsing an expression, and afterwards, if the\n  // next token is a colon and the expression was a simple\n  // Identifier node, we switch to interpreting it as a label.\n  var maybeName = this.state.value;\n  var expr = this.parseExpression();\n\n  if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n    return this.parseLabeledStatement(node, maybeName, expr);\n  } else {\n    return this.parseExpressionStatement(node, expr);\n  }\n};\n\npp$1.takeDecorators = function (node) {\n  if (this.state.decorators.length) {\n    node.decorators = this.state.decorators;\n    this.state.decorators = [];\n  }\n};\n\npp$1.parseDecorators = function (allowExport) {\n  while (this.match(types.at)) {\n    var decorator = this.parseDecorator();\n    this.state.decorators.push(decorator);\n  }\n\n  if (allowExport && this.match(types._export)) {\n    return;\n  }\n\n  if (!this.match(types._class)) {\n    this.raise(this.state.start, \"Leading decorators must be attached to a class declaration\");\n  }\n};\n\npp$1.parseDecorator = function () {\n  if (!this.hasPlugin(\"decorators\")) {\n    this.unexpected();\n  }\n  var node = this.startNode();\n  this.next();\n  node.expression = this.parseMaybeAssign();\n  return this.finishNode(node, \"Decorator\");\n};\n\npp$1.parseBreakContinueStatement = function (node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n\n  if (this.isLineTerminator()) {\n    node.label = null;\n  } else if (!this.match(types.name)) {\n    this.unexpected();\n  } else {\n    node.label = this.parseIdentifier();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = void 0;\n  for (i = 0; i < this.state.labels.length; ++i) {\n    var lab = this.state.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n      if (node.label && isBreak) break;\n    }\n  }\n  if (i === this.state.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword);\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\n\npp$1.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n};\n\npp$1.parseDoStatement = function (node) {\n  this.next();\n  this.state.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  this.eat(types.semi);\n  return this.finishNode(node, \"DoWhileStatement\");\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function (node) {\n  this.next();\n  this.state.labels.push(loopLabel);\n\n  var forAwait = false;\n  if (this.hasPlugin(\"asyncGenerators\") && this.state.inAsync && this.isContextual(\"await\")) {\n    forAwait = true;\n    this.next();\n  }\n  this.expect(types.parenL);\n\n  if (this.match(types.semi)) {\n    if (forAwait) {\n      this.unexpected();\n    }\n    return this.parseFor(node, null);\n  }\n\n  if (this.match(types._var) || this.match(types._let) || this.match(types._const)) {\n    var _init = this.startNode();\n    var varKind = this.state.type;\n    this.next();\n    this.parseVar(_init, true, varKind);\n    this.finishNode(_init, \"VariableDeclaration\");\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      if (_init.declarations.length === 1 && !_init.declarations[0].init) {\n        return this.parseForIn(node, _init, forAwait);\n      }\n    }\n    if (forAwait) {\n      this.unexpected();\n    }\n    return this.parseFor(node, _init);\n  }\n\n  var refShorthandDefaultPos = { start: 0 };\n  var init = this.parseExpression(true, refShorthandDefaultPos);\n  if (this.match(types._in) || this.isContextual(\"of\")) {\n    var description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n    this.toAssignable(init, undefined, description);\n    this.checkLVal(init, undefined, undefined, description);\n    return this.parseForIn(node, init, forAwait);\n  } else if (refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n  if (forAwait) {\n    this.unexpected();\n  }\n  return this.parseFor(node, init);\n};\n\npp$1.parseFunctionStatement = function (node) {\n  this.next();\n  return this.parseFunction(node, true);\n};\n\npp$1.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  node.consequent = this.parseStatement(false);\n  node.alternate = this.eat(types._else) ? this.parseStatement(false) : null;\n  return this.finishNode(node, \"IfStatement\");\n};\n\npp$1.parseReturnStatement = function (node) {\n  if (!this.state.inFunction && !this.options.allowReturnOutsideFunction) {\n    this.raise(this.state.start, \"'return' outside of function\");\n  }\n\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.isLineTerminator()) {\n    node.argument = null;\n  } else {\n    node.argument = this.parseExpression();\n    this.semicolon();\n  }\n\n  return this.finishNode(node, \"ReturnStatement\");\n};\n\npp$1.parseSwitchStatement = function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.state.labels.push(switchLabel);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur = void 0;\n  for (var sawDefault; !this.match(types.braceR);) {\n    if (this.match(types._case) || this.match(types._default)) {\n      var isCase = this.match(types._case);\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) this.raise(this.state.lastTokStart, \"Multiple default clauses\");\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types.colon);\n    } else {\n      if (cur) {\n        cur.consequent.push(this.parseStatement(true));\n      } else {\n        this.unexpected();\n      }\n    }\n  }\n  if (cur) this.finishNode(cur, \"SwitchCase\");\n  this.next(); // Closing brace\n  this.state.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n};\n\npp$1.parseThrowStatement = function (node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))) this.raise(this.state.lastTokEnd, \"Illegal newline after throw\");\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function (node) {\n  this.next();\n\n  node.block = this.parseBlock();\n  node.handler = null;\n\n  if (this.match(types._catch)) {\n    var clause = this.startNode();\n    this.next();\n\n    this.expect(types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.checkLVal(clause.param, true, Object.create(null), \"catch clause\");\n    this.expect(types.parenR);\n\n    clause.body = this.parseBlock();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n\n  node.guardedHandlers = empty;\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n  if (!node.handler && !node.finalizer) {\n    this.raise(node.start, \"Missing catch or finally clause\");\n  }\n\n  return this.finishNode(node, \"TryStatement\");\n};\n\npp$1.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n};\n\npp$1.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.state.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n};\n\npp$1.parseWithStatement = function (node) {\n  if (this.state.strict) this.raise(this.state.start, \"'with' in strict mode\");\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\");\n};\n\npp$1.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n};\n\npp$1.parseLabeledStatement = function (node, maybeName, expr) {\n  for (var _iterator = this.state.labels, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _label = _ref;\n\n    if (_label.name === maybeName) {\n      this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    }\n  }\n\n  var kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n  for (var i = this.state.labels.length - 1; i >= 0; i--) {\n    var label = this.state.labels[i];\n    if (label.statementStart === node.start) {\n      label.statementStart = this.state.start;\n      label.kind = kind;\n    } else {\n      break;\n    }\n  }\n\n  this.state.labels.push({ name: maybeName, kind: kind, statementStart: this.state.start });\n  node.body = this.parseStatement(true);\n  this.state.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n};\n\npp$1.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function (allowDirectives) {\n  var node = this.startNode();\n  this.expect(types.braceL);\n  this.parseBlockBody(node, allowDirectives, false, types.braceR);\n  return this.finishNode(node, \"BlockStatement\");\n};\n\npp$1.isValidDirective = function (stmt) {\n  return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n};\n\npp$1.parseBlockBody = function (node, allowDirectives, topLevel, end) {\n  node.body = [];\n  node.directives = [];\n\n  var parsedNonDirective = false;\n  var oldStrict = void 0;\n  var octalPosition = void 0;\n\n  while (!this.eat(end)) {\n    if (!parsedNonDirective && this.state.containsOctal && !octalPosition) {\n      octalPosition = this.state.octalPosition;\n    }\n\n    var stmt = this.parseStatement(true, topLevel);\n\n    if (allowDirectives && !parsedNonDirective && this.isValidDirective(stmt)) {\n      var directive = this.stmtToDirective(stmt);\n      node.directives.push(directive);\n\n      if (oldStrict === undefined && directive.value.value === \"use strict\") {\n        oldStrict = this.state.strict;\n        this.setStrict(true);\n\n        if (octalPosition) {\n          this.raise(octalPosition, \"Octal literal in strict mode\");\n        }\n      }\n\n      continue;\n    }\n\n    parsedNonDirective = true;\n    node.body.push(stmt);\n  }\n\n  if (oldStrict === false) {\n    this.setStrict(false);\n  }\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.match(types.semi) ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.match(types.parenR) ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function (node, init, forAwait) {\n  var type = void 0;\n  if (forAwait) {\n    this.eatContextual(\"of\");\n    type = \"ForAwaitStatement\";\n  } else {\n    type = this.match(types._in) ? \"ForInStatement\" : \"ForOfStatement\";\n    this.next();\n  }\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, type);\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind.keyword;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarHead(decl);\n    if (this.eat(types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === types._const && !(this.match(types._in) || this.isContextual(\"of\"))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n      this.raise(this.state.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types.comma)) break;\n  }\n  return node;\n};\n\npp$1.parseVarHead = function (decl) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, true, undefined, \"variable declaration\");\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function (node, isStatement, allowExpressionBody, isAsync, optionalId) {\n  var oldInMethod = this.state.inMethod;\n  this.state.inMethod = false;\n\n  this.initFunction(node, isAsync);\n\n  if (this.match(types.star)) {\n    if (node.async && !this.hasPlugin(\"asyncGenerators\")) {\n      this.unexpected();\n    } else {\n      node.generator = true;\n      this.next();\n    }\n  }\n\n  if (isStatement && !optionalId && !this.match(types.name) && !this.match(types._yield)) {\n    this.unexpected();\n  }\n\n  if (this.match(types.name) || this.match(types._yield)) {\n    node.id = this.parseBindingIdentifier();\n  }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.state.inMethod = oldInMethod;\n\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\n\npp$1.parseFunctionParams = function (node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR);\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function (node, isStatement, optionalId) {\n  this.next();\n  this.takeDecorators(node);\n  this.parseClassId(node, isStatement, optionalId);\n  this.parseClassSuper(node);\n  this.parseClassBody(node);\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\n\npp$1.isClassProperty = function () {\n  return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n};\n\npp$1.isClassMethod = function () {\n  return this.match(types.parenL);\n};\n\npp$1.isNonstaticConstructor = function (method) {\n  return !method.computed && !method.static && (method.key.name === \"constructor\" || // Identifier\n  method.key.value === \"constructor\" // Literal\n  );\n};\n\npp$1.parseClassBody = function (node) {\n  // class bodies are implicitly strict\n  var oldStrict = this.state.strict;\n  this.state.strict = true;\n\n  var hadConstructorCall = false;\n  var hadConstructor = false;\n  var decorators = [];\n  var classBody = this.startNode();\n\n  classBody.body = [];\n\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (this.eat(types.semi)) {\n      if (decorators.length > 0) {\n        this.raise(this.state.lastTokEnd, \"Decorators must not be followed by a semicolon\");\n      }\n      continue;\n    }\n\n    if (this.match(types.at)) {\n      decorators.push(this.parseDecorator());\n      continue;\n    }\n\n    var method = this.startNode();\n\n    // steal the decorators if there are any\n    if (decorators.length) {\n      method.decorators = decorators;\n      decorators = [];\n    }\n\n    method.static = false;\n    if (this.match(types.name) && this.state.value === \"static\") {\n      var key = this.parseIdentifier(true); // eats 'static'\n      if (this.isClassMethod()) {\n        // a method named 'static'\n        method.kind = \"method\";\n        method.computed = false;\n        method.key = key;\n        this.parseClassMethod(classBody, method, false, false);\n        continue;\n      } else if (this.isClassProperty()) {\n        // a property named 'static'\n        method.computed = false;\n        method.key = key;\n        classBody.body.push(this.parseClassProperty(method));\n        continue;\n      }\n      // otherwise something static\n      method.static = true;\n    }\n\n    if (this.eat(types.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parsePropertyName(method);\n      if (this.isNonstaticConstructor(method)) {\n        this.raise(method.key.start, \"Constructor can't be a generator\");\n      }\n      if (!method.computed && method.static && (method.key.name === \"prototype\" || method.key.value === \"prototype\")) {\n        this.raise(method.key.start, \"Classes may not have static property named prototype\");\n      }\n      this.parseClassMethod(classBody, method, true, false);\n    } else {\n      var isSimple = this.match(types.name);\n      var _key = this.parsePropertyName(method);\n      if (!method.computed && method.static && (method.key.name === \"prototype\" || method.key.value === \"prototype\")) {\n        this.raise(method.key.start, \"Classes may not have static property named prototype\");\n      }\n      if (this.isClassMethod()) {\n        // a normal method\n        if (this.isNonstaticConstructor(method)) {\n          if (hadConstructor) {\n            this.raise(_key.start, \"Duplicate constructor in the same class\");\n          } else if (method.decorators) {\n            this.raise(method.start, \"You can't attach decorators to a class constructor\");\n          }\n          hadConstructor = true;\n          method.kind = \"constructor\";\n        } else {\n          method.kind = \"method\";\n        }\n        this.parseClassMethod(classBody, method, false, false);\n      } else if (this.isClassProperty()) {\n        // a normal property\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, \"Classes may not have a non-static field named 'constructor'\");\n        }\n        classBody.body.push(this.parseClassProperty(method));\n      } else if (isSimple && _key.name === \"async\" && !this.isLineTerminator()) {\n        // an async method\n        var isGenerator = this.hasPlugin(\"asyncGenerators\") && this.eat(types.star);\n        method.kind = \"method\";\n        this.parsePropertyName(method);\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, \"Constructor can't be an async function\");\n        }\n        this.parseClassMethod(classBody, method, isGenerator, true);\n      } else if (isSimple && (_key.name === \"get\" || _key.name === \"set\") && !(this.isLineTerminator() && this.match(types.star))) {\n        // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n        // a getter or setter\n        method.kind = _key.name;\n        this.parsePropertyName(method);\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, \"Constructor can't have get/set modifier\");\n        }\n        this.parseClassMethod(classBody, method, false, false);\n        this.checkGetterSetterParamCount(method);\n      } else if (this.hasPlugin(\"classConstructorCall\") && isSimple && _key.name === \"call\" && this.match(types.name) && this.state.value === \"constructor\") {\n        // a (deprecated) call constructor\n        if (hadConstructorCall) {\n          this.raise(method.start, \"Duplicate constructor call in the same class\");\n        } else if (method.decorators) {\n          this.raise(method.start, \"You can't attach decorators to a class constructor\");\n        }\n        hadConstructorCall = true;\n        method.kind = \"constructorCall\";\n        this.parsePropertyName(method); // consume \"constructor\" and make it the method's name\n        this.parseClassMethod(classBody, method, false, false);\n      } else if (this.isLineTerminator()) {\n        // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, \"Classes may not have a non-static field named 'constructor'\");\n        }\n        classBody.body.push(this.parseClassProperty(method));\n      } else {\n        this.unexpected();\n      }\n    }\n  }\n\n  if (decorators.length) {\n    this.raise(this.state.start, \"You have trailing decorators with no method\");\n  }\n\n  node.body = this.finishNode(classBody, \"ClassBody\");\n\n  this.state.strict = oldStrict;\n};\n\npp$1.parseClassProperty = function (node) {\n  this.state.inClassProperty = true;\n  if (this.match(types.eq)) {\n    if (!this.hasPlugin(\"classProperties\")) this.unexpected();\n    this.next();\n    node.value = this.parseMaybeAssign();\n  } else {\n    node.value = null;\n  }\n  this.semicolon();\n  this.state.inClassProperty = false;\n  return this.finishNode(node, \"ClassProperty\");\n};\n\npp$1.parseClassMethod = function (classBody, method, isGenerator, isAsync) {\n  this.parseMethod(method, isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"ClassMethod\"));\n};\n\npp$1.parseClassId = function (node, isStatement, optionalId) {\n  if (this.match(types.name)) {\n    node.id = this.parseIdentifier();\n  } else {\n    if (optionalId || !isStatement) {\n      node.id = null;\n    } else {\n      this.unexpected();\n    }\n  }\n};\n\npp$1.parseClassSuper = function (node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function (node) {\n  this.next();\n  // export * from '...'\n  if (this.match(types.star)) {\n    var specifier = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"exportExtensions\") && this.eatContextual(\"as\")) {\n      specifier.exported = this.parseIdentifier();\n      node.specifiers = [this.finishNode(specifier, \"ExportNamespaceSpecifier\")];\n      this.parseExportSpecifiersMaybe(node);\n      this.parseExportFrom(node, true);\n    } else {\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n  } else if (this.hasPlugin(\"exportExtensions\") && this.isExportDefaultSpecifier()) {\n    var _specifier = this.startNode();\n    _specifier.exported = this.parseIdentifier(true);\n    node.specifiers = [this.finishNode(_specifier, \"ExportDefaultSpecifier\")];\n    if (this.match(types.comma) && this.lookahead().type === types.star) {\n      this.expect(types.comma);\n      var _specifier2 = this.startNode();\n      this.expect(types.star);\n      this.expectContextual(\"as\");\n      _specifier2.exported = this.parseIdentifier();\n      node.specifiers.push(this.finishNode(_specifier2, \"ExportNamespaceSpecifier\"));\n    } else {\n      this.parseExportSpecifiersMaybe(node);\n    }\n    this.parseExportFrom(node, true);\n  } else if (this.eat(types._default)) {\n    // export default ...\n    var expr = this.startNode();\n    var needsSemi = false;\n    if (this.eat(types._function)) {\n      expr = this.parseFunction(expr, true, false, false, true);\n    } else if (this.match(types._class)) {\n      expr = this.parseClass(expr, true, true);\n    } else {\n      needsSemi = true;\n      expr = this.parseMaybeAssign();\n    }\n    node.declaration = expr;\n    if (needsSemi) this.semicolon();\n    this.checkExport(node, true, true);\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  } else if (this.shouldParseExportDeclaration()) {\n    node.specifiers = [];\n    node.source = null;\n    node.declaration = this.parseExportDeclaration(node);\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers();\n    this.parseExportFrom(node);\n  }\n  this.checkExport(node, true);\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n};\n\npp$1.parseExportDeclaration = function () {\n  return this.parseStatement(true);\n};\n\npp$1.isExportDefaultSpecifier = function () {\n  if (this.match(types.name)) {\n    return this.state.value !== \"async\";\n  }\n\n  if (!this.match(types._default)) {\n    return false;\n  }\n\n  var lookahead = this.lookahead();\n  return lookahead.type === types.comma || lookahead.type === types.name && lookahead.value === \"from\";\n};\n\npp$1.parseExportSpecifiersMaybe = function (node) {\n  if (this.eat(types.comma)) {\n    node.specifiers = node.specifiers.concat(this.parseExportSpecifiers());\n  }\n};\n\npp$1.parseExportFrom = function (node, expect) {\n  if (this.eatContextual(\"from\")) {\n    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();\n    this.checkExport(node);\n  } else {\n    if (expect) {\n      this.unexpected();\n    } else {\n      node.source = null;\n    }\n  }\n\n  this.semicolon();\n};\n\npp$1.shouldParseExportDeclaration = function () {\n  return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"let\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isContextual(\"async\");\n};\n\npp$1.checkExport = function (node, checkNames, isDefault) {\n  if (checkNames) {\n    // Check for duplicate exports\n    if (isDefault) {\n      // Default exports\n      this.checkDuplicateExports(node, \"default\");\n    } else if (node.specifiers && node.specifiers.length) {\n      // Named exports\n      for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var specifier = _ref2;\n\n        this.checkDuplicateExports(specifier, specifier.exported.name);\n      }\n    } else if (node.declaration) {\n      // Exported declarations\n      if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n        this.checkDuplicateExports(node, node.declaration.id.name);\n      } else if (node.declaration.type === \"VariableDeclaration\") {\n        for (var _iterator3 = node.declaration.declarations, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n          var _ref3;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref3 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref3 = _i3.value;\n          }\n\n          var declaration = _ref3;\n\n          this.checkDeclaration(declaration.id);\n        }\n      }\n    }\n  }\n\n  if (this.state.decorators.length) {\n    var isClass = node.declaration && (node.declaration.type === \"ClassDeclaration\" || node.declaration.type === \"ClassExpression\");\n    if (!node.declaration || !isClass) {\n      this.raise(node.start, \"You can only use decorators on an export when exporting a class\");\n    }\n    this.takeDecorators(node.declaration);\n  }\n};\n\npp$1.checkDeclaration = function (node) {\n  if (node.type === \"ObjectPattern\") {\n    for (var _iterator4 = node.properties, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var prop = _ref4;\n\n      this.checkDeclaration(prop);\n    }\n  } else if (node.type === \"ArrayPattern\") {\n    for (var _iterator5 = node.elements, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var elem = _ref5;\n\n      if (elem) {\n        this.checkDeclaration(elem);\n      }\n    }\n  } else if (node.type === \"ObjectProperty\") {\n    this.checkDeclaration(node.value);\n  } else if (node.type === \"RestElement\" || node.type === \"RestProperty\") {\n    this.checkDeclaration(node.argument);\n  } else if (node.type === \"Identifier\") {\n    this.checkDuplicateExports(node, node.name);\n  }\n};\n\npp$1.checkDuplicateExports = function (node, name) {\n  if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n    this.raiseDuplicateExportError(node, name);\n  }\n  this.state.exportedIdentifiers.push(name);\n};\n\npp$1.raiseDuplicateExportError = function (node, name) {\n  this.raise(node.start, name === \"default\" ? \"Only one default export allowed per module.\" : \"`\" + name + \"` has already been exported. Exported identifiers must be unique.\");\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function () {\n  var nodes = [];\n  var first = true;\n  var needsFrom = void 0;\n\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    var isDefault = this.match(types._default);\n    if (isDefault && !needsFrom) needsFrom = true;\n\n    var node = this.startNode();\n    node.local = this.parseIdentifier(isDefault);\n    node.exported = this.eatContextual(\"as\") ? this.parseIdentifier(true) : node.local.__clone();\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n\n  // https://github.com/ember-cli/ember-cli/pull/3739\n  if (needsFrom && !this.isContextual(\"from\")) {\n    this.unexpected();\n  }\n\n  return nodes;\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function (node) {\n  this.eat(types._import);\n\n  // import '...'\n  if (this.match(types.string)) {\n    node.specifiers = [];\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = [];\n    this.parseImportSpecifiers(node);\n    this.expectContextual(\"from\");\n    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function (node) {\n  var first = true;\n  if (this.match(types.name)) {\n    // import defaultObj, { x, y as z } from '...'\n    var startPos = this.state.start;\n    var startLoc = this.state.startLoc;\n    node.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), startPos, startLoc));\n    if (!this.eat(types.comma)) return;\n  }\n\n  if (this.match(types.star)) {\n    var specifier = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, true, undefined, \"import namespace specifier\");\n    node.specifiers.push(this.finishNode(specifier, \"ImportNamespaceSpecifier\"));\n    return;\n  }\n\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      // Detect an attempt to deep destructure\n      if (this.eat(types.colon)) {\n        this.unexpected(null, \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\");\n      }\n\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    this.parseImportSpecifier(node);\n  }\n};\n\npp$1.parseImportSpecifier = function (node) {\n  var specifier = this.startNode();\n  specifier.imported = this.parseIdentifier(true);\n  if (this.eatContextual(\"as\")) {\n    specifier.local = this.parseIdentifier();\n  } else {\n    this.checkReservedWord(specifier.imported.name, specifier.start, true, true);\n    specifier.local = specifier.imported.__clone();\n  }\n  this.checkLVal(specifier.local, true, undefined, \"import specifier\");\n  node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n};\n\npp$1.parseImportSpecifierDefault = function (id, startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.local = id;\n  this.checkLVal(node.local, true, undefined, \"default import specifier\");\n  return this.finishNode(node, \"ImportDefaultSpecifier\");\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function (node, isBinding, contextDescription) {\n  if (node) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (var _iterator = node.properties, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var prop = _ref;\n\n          if (prop.type === \"ObjectMethod\") {\n            if (prop.kind === \"get\" || prop.kind === \"set\") {\n              this.raise(prop.key.start, \"Object pattern can't contain getter or setter\");\n            } else {\n              this.raise(prop.key.start, \"Object pattern can't contain methods\");\n            }\n          } else {\n            this.toAssignable(prop, isBinding, \"object destructuring pattern\");\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isBinding, contextDescription);\n        break;\n\n      case \"SpreadProperty\":\n        node.type = \"RestProperty\";\n        var arg = node.argument;\n        this.toAssignable(arg, isBinding, contextDescription);\n        break;\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, isBinding, contextDescription);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator === \"=\") {\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n        } else {\n          this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (!isBinding) break;\n\n      default:\n        {\n          var message = \"Invalid left-hand side\" + (contextDescription ? \" in \" + contextDescription : /* istanbul ignore next */\"expression\");\n          this.raise(node.start, message);\n        }\n    }\n  }\n  return node;\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function (exprList, isBinding, contextDescription) {\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type === \"RestElement\") {\n      --end;\n    } else if (last && last.type === \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding, contextDescription);\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\") {\n        this.unexpected(arg.start);\n      }\n      --end;\n    }\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) this.toAssignable(elt, isBinding, contextDescription);\n  }\n  return exprList;\n};\n\n// Convert list of expression atoms to a list of\n\npp$2.toReferencedList = function (exprList) {\n  return exprList;\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function (refShorthandDefaultPos) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refShorthandDefaultPos);\n  return this.finishNode(node, \"SpreadElement\");\n};\n\npp$2.parseRest = function () {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseBindingIdentifier();\n  return this.finishNode(node, \"RestElement\");\n};\n\npp$2.shouldAllowYieldIdentifier = function () {\n  return this.match(types._yield) && !this.state.strict && !this.state.inGenerator;\n};\n\npp$2.parseBindingIdentifier = function () {\n  return this.parseIdentifier(this.shouldAllowYieldIdentifier());\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function () {\n  switch (this.state.type) {\n    case types._yield:\n      if (this.state.strict || this.state.inGenerator) this.unexpected();\n    // fall-through\n    case types.name:\n      return this.parseIdentifier(true);\n\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true);\n      return this.finishNode(node, \"ArrayPattern\");\n\n    case types.braceL:\n      return this.parseObj(true);\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$2.parseBindingList = function (close, allowEmpty) {\n  var elts = [];\n  var first = true;\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n    }\n    if (allowEmpty && this.match(types.comma)) {\n      elts.push(null);\n    } else if (this.eat(close)) {\n      break;\n    } else if (this.match(types.ellipsis)) {\n      elts.push(this.parseAssignableListItemTypes(this.parseRest()));\n      this.expect(close);\n      break;\n    } else {\n      var decorators = [];\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n      var left = this.parseMaybeDefault();\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n      this.parseAssignableListItemTypes(left);\n      elts.push(this.parseMaybeDefault(left.start, left.loc.start, left));\n    }\n  }\n  return elts;\n};\n\npp$2.parseAssignableListItemTypes = function (param) {\n  return param;\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n  startLoc = startLoc || this.state.startLoc;\n  startPos = startPos || this.state.start;\n  left = left || this.parseBindingAtom();\n  if (!this.eat(types.eq)) return left;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n\npp$2.checkLVal = function (expr, isBinding, checkClashes, contextDescription) {\n  switch (expr.type) {\n    case \"Identifier\":\n      this.checkReservedWord(expr.name, expr.start, false, true);\n\n      if (checkClashes) {\n        // we need to prefix this with an underscore for the cases where we have a key of\n        // `__proto__`. there's a bug in old V8 where the following wouldn't work:\n        //\n        //   > var obj = Object.create(null);\n        //   undefined\n        //   > obj.__proto__\n        //   null\n        //   > obj.__proto__ = true;\n        //   true\n        //   > obj.__proto__\n        //   null\n        var key = \"_\" + expr.name;\n\n        if (checkClashes[key]) {\n          this.raise(expr.start, \"Argument name clash in strict mode\");\n        } else {\n          checkClashes[key] = true;\n        }\n      }\n      break;\n\n    case \"MemberExpression\":\n      if (isBinding) this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" member expression\");\n      break;\n\n    case \"ObjectPattern\":\n      for (var _iterator2 = expr.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var prop = _ref2;\n\n        if (prop.type === \"ObjectProperty\") prop = prop.value;\n        this.checkLVal(prop, isBinding, checkClashes, \"object destructuring pattern\");\n      }\n      break;\n\n    case \"ArrayPattern\":\n      for (var _iterator3 = expr.elements, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var elem = _ref3;\n\n        if (elem) this.checkLVal(elem, isBinding, checkClashes, \"array destructuring pattern\");\n      }\n      break;\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, isBinding, checkClashes, \"assignment pattern\");\n      break;\n\n    case \"RestProperty\":\n      this.checkLVal(expr.argument, isBinding, checkClashes, \"rest property\");\n      break;\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, isBinding, checkClashes, \"rest element\");\n      break;\n\n    default:\n      {\n        var message = (isBinding ? /* istanbul ignore next */\"Binding invalid\" : \"Invalid\") + \" left-hand side\" + (contextDescription ? \" in \" + contextDescription : /* istanbul ignore next */\"expression\");\n        this.raise(expr.start, message);\n      }\n  }\n};\n\n/* eslint max-len: 0 */\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function (prop, propHash) {\n  if (prop.computed || prop.kind) return;\n\n  var key = prop.key;\n  // It is either an Identifier or a String/NumericLiteral\n  var name = key.type === \"Identifier\" ? key.name : String(key.value);\n\n  if (name === \"__proto__\") {\n    if (propHash.proto) this.raise(key.start, \"Redefinition of __proto__ property\");\n    propHash.proto = true;\n  }\n};\n\n// Convenience method to parse an Expression only\npp$3.getExpression = function () {\n  this.nextToken();\n  var expr = this.parseExpression();\n  if (!this.match(types.eof)) {\n    this.unexpected();\n  }\n  return expr;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function (s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initialization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function (noIn, refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refShorthandDefaultPos);\n  if (this.match(types.comma)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) {\n      node.expressions.push(this.parseMaybeAssign(noIn, refShorthandDefaultPos));\n    }\n    this.toReferencedList(node.expressions);\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n  return expr;\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function (noIn, refShorthandDefaultPos, afterLeftParse, refNeedsArrowPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n\n  if (this.match(types._yield) && this.state.inGenerator) {\n    var _left = this.parseYield();\n    if (afterLeftParse) _left = afterLeftParse.call(this, _left, startPos, startLoc);\n    return _left;\n  }\n\n  var failOnShorthandAssign = void 0;\n  if (refShorthandDefaultPos) {\n    failOnShorthandAssign = false;\n  } else {\n    refShorthandDefaultPos = { start: 0 };\n    failOnShorthandAssign = true;\n  }\n\n  if (this.match(types.parenL) || this.match(types.name)) {\n    this.state.potentialArrowAt = this.state.start;\n  }\n\n  var left = this.parseMaybeConditional(noIn, refShorthandDefaultPos, refNeedsArrowPos);\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);\n  if (this.state.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.state.value;\n    node.left = this.match(types.eq) ? this.toAssignable(left, undefined, \"assignment expression\") : left;\n    refShorthandDefaultPos.start = 0; // reset because shorthand default was used correctly\n\n    this.checkLVal(left, undefined, undefined, \"assignment expression\");\n\n    if (left.extra && left.extra.parenthesized) {\n      var errorMsg = void 0;\n      if (left.type === \"ObjectPattern\") {\n        errorMsg = \"`({a}) = 0` use `({a} = 0)`\";\n      } else if (left.type === \"ArrayPattern\") {\n        errorMsg = \"`([a]) = 0` use `([a] = 0)`\";\n      }\n      if (errorMsg) {\n        this.raise(left.start, \"You're trying to assign to a parenthesized expression, eg. instead of \" + errorMsg);\n      }\n    }\n\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else if (failOnShorthandAssign && refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n\n  return left;\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function (noIn, refShorthandDefaultPos, refNeedsArrowPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseExprOps(noIn, refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n\n  return this.parseConditional(expr, noIn, startPos, startLoc, refNeedsArrowPos);\n};\n\npp$3.parseConditional = function (expr, noIn, startPos, startLoc) {\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  return expr;\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function (noIn, refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseMaybeUnary(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n    return expr;\n  } else {\n    return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n  }\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.state.type.binop;\n  if (prec != null && (!noIn || !this.match(types._in))) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.left = left;\n      node.operator = this.state.value;\n\n      if (node.operator === \"**\" && left.type === \"UnaryExpression\" && left.extra && !left.extra.parenthesizedArgument && !left.extra.parenthesized) {\n        this.raise(left.argument.start, \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\");\n      }\n\n      var op = this.state.type;\n      this.next();\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      node.right = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec, noIn);\n\n      this.finishNode(node, op === types.logicalOR || op === types.logicalAND ? \"LogicalExpression\" : \"BinaryExpression\");\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n  return left;\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function (refShorthandDefaultPos) {\n  if (this.state.type.prefix) {\n    var node = this.startNode();\n    var update = this.match(types.incDec);\n    node.operator = this.state.value;\n    node.prefix = true;\n    this.next();\n\n    var argType = this.state.type;\n    node.argument = this.parseMaybeUnary();\n\n    this.addExtra(node, \"parenthesizedArgument\", argType === types.parenL && (!node.argument.extra || !node.argument.extra.parenthesized));\n\n    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n      this.unexpected(refShorthandDefaultPos.start);\n    }\n\n    if (update) {\n      this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n    } else if (this.state.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") {\n      this.raise(node.start, \"Deleting local variable in strict mode\");\n    }\n\n    return this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  }\n\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseExprSubscripts(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n  while (this.state.type.postfix && !this.canInsertSemicolon()) {\n    var _node = this.startNodeAt(startPos, startLoc);\n    _node.operator = this.state.value;\n    _node.prefix = false;\n    _node.argument = expr;\n    this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n    this.next();\n    expr = this.finishNode(_node, \"UpdateExpression\");\n  }\n  return expr;\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function (refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var potentialArrowAt = this.state.potentialArrowAt;\n  var expr = this.parseExprAtom(refShorthandDefaultPos);\n\n  if (expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt) {\n    return expr;\n  }\n\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n    return expr;\n  }\n\n  return this.parseSubscripts(expr, startPos, startLoc);\n};\n\npp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  for (;;) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n    } else if (this.eat(types.dot)) {\n      var _node2 = this.startNodeAt(startPos, startLoc);\n      _node2.object = base;\n      _node2.property = this.parseIdentifier(true);\n      _node2.computed = false;\n      base = this.finishNode(_node2, \"MemberExpression\");\n    } else if (this.eat(types.bracketL)) {\n      var _node3 = this.startNodeAt(startPos, startLoc);\n      _node3.object = base;\n      _node3.property = this.parseExpression();\n      _node3.computed = true;\n      this.expect(types.bracketR);\n      base = this.finishNode(_node3, \"MemberExpression\");\n    } else if (!noCalls && this.match(types.parenL)) {\n      var possibleAsync = this.state.potentialArrowAt === base.start && base.type === \"Identifier\" && base.name === \"async\" && !this.canInsertSemicolon();\n      this.next();\n\n      var _node4 = this.startNodeAt(startPos, startLoc);\n      _node4.callee = base;\n      _node4.arguments = this.parseCallExpressionArguments(types.parenR, possibleAsync);\n      if (_node4.callee.type === \"Import\" && _node4.arguments.length !== 1) {\n        this.raise(_node4.start, \"import() requires exactly one argument\");\n      }\n      base = this.finishNode(_node4, \"CallExpression\");\n\n      if (possibleAsync && this.shouldParseAsyncArrow()) {\n        return this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), _node4);\n      } else {\n        this.toReferencedList(_node4.arguments);\n      }\n    } else if (this.match(types.backQuote)) {\n      var _node5 = this.startNodeAt(startPos, startLoc);\n      _node5.tag = base;\n      _node5.quasi = this.parseTemplate(true);\n      base = this.finishNode(_node5, \"TaggedTemplateExpression\");\n    } else {\n      return base;\n    }\n  }\n};\n\npp$3.parseCallExpressionArguments = function (close, possibleAsyncArrow) {\n  var elts = [];\n  var innerParenStart = void 0;\n  var first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(close)) break;\n    }\n\n    // we need to make sure that if this is an async arrow functions, that we don't allow inner parens inside the params\n    if (this.match(types.parenL) && !innerParenStart) {\n      innerParenStart = this.state.start;\n    }\n\n    elts.push(this.parseExprListItem(false, possibleAsyncArrow ? { start: 0 } : undefined, possibleAsyncArrow ? { start: 0 } : undefined));\n  }\n\n  // we found an async arrow function so let's not allow any inner parens\n  if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n    this.unexpected();\n  }\n\n  return elts;\n};\n\npp$3.shouldParseAsyncArrow = function () {\n  return this.match(types.arrow);\n};\n\npp$3.parseAsyncArrowFromCallExpression = function (node, call) {\n  this.expect(types.arrow);\n  return this.parseArrowExpression(node, call.arguments, true);\n};\n\n// Parse a no-call expression (like argument of `new` or `::` operators).\n\npp$3.parseNoCallExpr = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function (refShorthandDefaultPos) {\n  var canBeArrow = this.state.potentialArrowAt === this.state.start;\n  var node = void 0;\n\n  switch (this.state.type) {\n    case types._super:\n      if (!this.state.inMethod && !this.state.inClassProperty && !this.options.allowSuperOutsideMethod) {\n        this.raise(this.state.start, \"'super' outside of function or class\");\n      }\n\n      node = this.startNode();\n      this.next();\n      if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n        this.unexpected();\n      }\n      if (this.match(types.parenL) && this.state.inMethod !== \"constructor\" && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, \"super() outside of class constructor\");\n      }\n      return this.finishNode(node, \"Super\");\n\n    case types._import:\n      if (!this.hasPlugin(\"dynamicImport\")) this.unexpected();\n\n      node = this.startNode();\n      this.next();\n      if (!this.match(types.parenL)) {\n        this.unexpected(null, types.parenL);\n      }\n      return this.finishNode(node, \"Import\");\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\");\n\n    case types._yield:\n      if (this.state.inGenerator) this.unexpected();\n\n    case types.name:\n      node = this.startNode();\n      var allowAwait = this.state.value === \"await\" && this.state.inAsync;\n      var allowYield = this.shouldAllowYieldIdentifier();\n      var id = this.parseIdentifier(allowAwait || allowYield);\n\n      if (id.name === \"await\") {\n        if (this.state.inAsync || this.inModule) {\n          return this.parseAwait(node);\n        }\n      } else if (id.name === \"async\" && this.match(types._function) && !this.canInsertSemicolon()) {\n        this.next();\n        return this.parseFunction(node, false, false, true);\n      } else if (canBeArrow && id.name === \"async\" && this.match(types.name)) {\n        var params = [this.parseIdentifier()];\n        this.expect(types.arrow);\n        // let foo = bar => {};\n        return this.parseArrowExpression(node, params, true);\n      }\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        return this.parseArrowExpression(node, [id]);\n      }\n\n      return id;\n\n    case types._do:\n      if (this.hasPlugin(\"doExpressions\")) {\n        var _node6 = this.startNode();\n        this.next();\n        var oldInFunction = this.state.inFunction;\n        var oldLabels = this.state.labels;\n        this.state.labels = [];\n        this.state.inFunction = false;\n        _node6.body = this.parseBlock(false, true);\n        this.state.inFunction = oldInFunction;\n        this.state.labels = oldLabels;\n        return this.finishNode(_node6, \"DoExpression\");\n      }\n\n    case types.regexp:\n      var value = this.state.value;\n      node = this.parseLiteral(value.value, \"RegExpLiteral\");\n      node.pattern = value.pattern;\n      node.flags = value.flags;\n      return node;\n\n    case types.num:\n      return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n    case types.string:\n      return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n    case types._null:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"NullLiteral\");\n\n    case types._true:case types._false:\n      node = this.startNode();\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, \"BooleanLiteral\");\n\n    case types.parenL:\n      return this.parseParenAndDistinguishExpression(null, null, canBeArrow);\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, refShorthandDefaultPos);\n      this.toReferencedList(node.elements);\n      return this.finishNode(node, \"ArrayExpression\");\n\n    case types.braceL:\n      return this.parseObj(false, refShorthandDefaultPos);\n\n    case types._function:\n      return this.parseFunctionExpression();\n\n    case types.at:\n      this.parseDecorators();\n\n    case types._class:\n      node = this.startNode();\n      this.takeDecorators(node);\n      return this.parseClass(node, false);\n\n    case types._new:\n      return this.parseNew();\n\n    case types.backQuote:\n      return this.parseTemplate(false);\n\n    case types.doubleColon:\n      node = this.startNode();\n      this.next();\n      node.object = null;\n      var callee = node.callee = this.parseNoCallExpr();\n      if (callee.type === \"MemberExpression\") {\n        return this.finishNode(node, \"BindExpression\");\n      } else {\n        this.raise(callee.start, \"Binding should be performed on object property.\");\n      }\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$3.parseFunctionExpression = function () {\n  var node = this.startNode();\n  var meta = this.parseIdentifier(true);\n  if (this.state.inGenerator && this.eat(types.dot) && this.hasPlugin(\"functionSent\")) {\n    return this.parseMetaProperty(node, meta, \"sent\");\n  } else {\n    return this.parseFunction(node, false);\n  }\n};\n\npp$3.parseMetaProperty = function (node, meta, propertyName) {\n  node.meta = meta;\n  node.property = this.parseIdentifier(true);\n\n  if (node.property.name !== propertyName) {\n    this.raise(node.property.start, \"The only valid meta property for new is \" + meta.name + \".\" + propertyName);\n  }\n\n  return this.finishNode(node, \"MetaProperty\");\n};\n\npp$3.parseLiteral = function (value, type, startPos, startLoc) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  this.addExtra(node, \"rawValue\", value);\n  this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n  node.value = value;\n  this.next();\n  return this.finishNode(node, type);\n};\n\npp$3.parseParenExpression = function () {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val;\n};\n\npp$3.parseParenAndDistinguishExpression = function (startPos, startLoc, canBeArrow) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n\n  var val = void 0;\n  this.expect(types.parenL);\n\n  var innerStartPos = this.state.start;\n  var innerStartLoc = this.state.startLoc;\n  var exprList = [];\n  var refShorthandDefaultPos = { start: 0 };\n  var refNeedsArrowPos = { start: 0 };\n  var first = true;\n  var spreadStart = void 0;\n  var optionalCommaStart = void 0;\n\n  while (!this.match(types.parenR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma, refNeedsArrowPos.start || null);\n      if (this.match(types.parenR)) {\n        optionalCommaStart = this.state.start;\n        break;\n      }\n    }\n\n    if (this.match(types.ellipsis)) {\n      var spreadNodeStartPos = this.state.start;\n      var spreadNodeStartLoc = this.state.startLoc;\n      spreadStart = this.state.start;\n      exprList.push(this.parseParenItem(this.parseRest(), spreadNodeStartPos, spreadNodeStartLoc));\n      break;\n    } else {\n      exprList.push(this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos));\n    }\n  }\n\n  var innerEndPos = this.state.start;\n  var innerEndLoc = this.state.startLoc;\n  this.expect(types.parenR);\n\n  var arrowNode = this.startNodeAt(startPos, startLoc);\n  if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n    for (var _iterator = exprList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var param = _ref;\n\n      if (param.extra && param.extra.parenthesized) this.unexpected(param.extra.parenStart);\n    }\n\n    return this.parseArrowExpression(arrowNode, exprList);\n  }\n\n  if (!exprList.length) {\n    this.unexpected(this.state.lastTokStart);\n  }\n  if (optionalCommaStart) this.unexpected(optionalCommaStart);\n  if (spreadStart) this.unexpected(spreadStart);\n  if (refShorthandDefaultPos.start) this.unexpected(refShorthandDefaultPos.start);\n  if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n  if (exprList.length > 1) {\n    val = this.startNodeAt(innerStartPos, innerStartLoc);\n    val.expressions = exprList;\n    this.toReferencedList(val.expressions);\n    this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n  } else {\n    val = exprList[0];\n  }\n\n  this.addExtra(val, \"parenthesized\", true);\n  this.addExtra(val, \"parenStart\", startPos);\n\n  return val;\n};\n\npp$3.shouldParseArrow = function () {\n  return !this.canInsertSemicolon();\n};\n\npp$3.parseArrow = function (node) {\n  if (this.eat(types.arrow)) {\n    return node;\n  }\n};\n\npp$3.parseParenItem = function (node) {\n  return node;\n};\n\n// New's precedence is slightly tricky. It must allow its argument\n// to be a `[]` or dot subscript expression, but not a call — at\n// least, not without wrapping it in parentheses. Thus, it uses the\n\npp$3.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdentifier(true);\n\n  if (this.eat(types.dot)) {\n    var metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n    if (!this.state.inFunction) {\n      this.raise(metaProp.property.start, \"new.target can only be used in functions\");\n    }\n\n    return metaProp;\n  }\n\n  node.callee = this.parseNoCallExpr();\n\n  if (this.eat(types.parenL)) {\n    node.arguments = this.parseExprList(types.parenR);\n    this.toReferencedList(node.arguments);\n  } else {\n    node.arguments = [];\n  }\n\n  return this.finishNode(node, \"NewExpression\");\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function (isTagged) {\n  var elem = this.startNode();\n  if (this.state.value === null) {\n    if (!isTagged || !this.hasPlugin(\"templateInvalidEscapes\")) {\n      this.raise(this.state.invalidTemplateEscapePosition, \"Invalid escape sequence in template\");\n    } else {\n      this.state.invalidTemplateEscapePosition = null;\n    }\n  }\n  elem.value = {\n    raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n    cooked: this.state.value\n  };\n  this.next();\n  elem.tail = this.match(types.backQuote);\n  return this.finishNode(elem, \"TemplateElement\");\n};\n\npp$3.parseTemplate = function (isTagged) {\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement(isTagged);\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this.expect(types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function (isPattern, refShorthandDefaultPos) {\n  var decorators = [];\n  var propHash = Object.create(null);\n  var first = true;\n  var node = this.startNode();\n\n  node.properties = [];\n  this.next();\n\n  var firstRestLocation = null;\n\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    while (this.match(types.at)) {\n      decorators.push(this.parseDecorator());\n    }\n\n    var prop = this.startNode(),\n        isGenerator = false,\n        isAsync = false,\n        startPos = void 0,\n        startLoc = void 0;\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    if (this.hasPlugin(\"objectRestSpread\") && this.match(types.ellipsis)) {\n      prop = this.parseSpread(isPattern ? { start: 0 } : undefined);\n      prop.type = isPattern ? \"RestProperty\" : \"SpreadProperty\";\n      if (isPattern) this.toAssignable(prop.argument, true, \"object pattern\");\n      node.properties.push(prop);\n      if (isPattern) {\n        var position = this.state.start;\n        if (firstRestLocation !== null) {\n          this.unexpected(firstRestLocation, \"Cannot have multiple rest elements when destructuring\");\n        } else if (this.eat(types.braceR)) {\n          break;\n        } else if (this.match(types.comma) && this.lookahead().type === types.braceR) {\n          // TODO: temporary rollback\n          // this.unexpected(position, \"A trailing comma is not permitted after the rest element\");\n          continue;\n        } else {\n          firstRestLocation = position;\n          continue;\n        }\n      } else {\n        continue;\n      }\n    }\n\n    prop.method = false;\n    prop.shorthand = false;\n\n    if (isPattern || refShorthandDefaultPos) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    if (!isPattern && this.isContextual(\"async\")) {\n      if (isGenerator) this.unexpected();\n\n      var asyncId = this.parseIdentifier();\n      if (this.match(types.colon) || this.match(types.parenL) || this.match(types.braceR) || this.match(types.eq) || this.match(types.comma)) {\n        prop.key = asyncId;\n        prop.computed = false;\n      } else {\n        isAsync = true;\n        if (this.hasPlugin(\"asyncGenerators\")) isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop);\n      }\n    } else {\n      this.parsePropertyName(prop);\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos);\n    this.checkPropClash(prop, propHash);\n\n    if (prop.shorthand) {\n      this.addExtra(prop, \"shorthand\", true);\n    }\n\n    node.properties.push(prop);\n  }\n\n  if (firstRestLocation !== null) {\n    this.unexpected(firstRestLocation, \"The rest element has to be the last element when destructuring\");\n  }\n\n  if (decorators.length) {\n    this.raise(this.state.start, \"You have trailing decorators with no property\");\n  }\n\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\n\npp$3.isGetterOrSetterMethod = function (prop, isPattern) {\n  return !isPattern && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && (this.match(types.string) || // get \"string\"() {}\n  this.match(types.num) || // get 1() {}\n  this.match(types.bracketL) || // get [\"string\"]() {}\n  this.match(types.name) || // get foo() {}\n  this.state.type.keyword // get debugger() {}\n  );\n};\n\n// get methods aren't allowed to have any parameters\n// set methods must have exactly 1 parameter\npp$3.checkGetterSetterParamCount = function (method) {\n  var paramCount = method.kind === \"get\" ? 0 : 1;\n  if (method.params.length !== paramCount) {\n    var start = method.start;\n    if (method.kind === \"get\") {\n      this.raise(start, \"getter should have no params\");\n    } else {\n      this.raise(start, \"setter should have exactly one param\");\n    }\n  }\n};\n\npp$3.parseObjectMethod = function (prop, isGenerator, isAsync, isPattern) {\n  if (isAsync || isGenerator || this.match(types.parenL)) {\n    if (isPattern) this.unexpected();\n    prop.kind = \"method\";\n    prop.method = true;\n    this.parseMethod(prop, isGenerator, isAsync);\n\n    return this.finishNode(prop, \"ObjectMethod\");\n  }\n\n  if (this.isGetterOrSetterMethod(prop, isPattern)) {\n    if (isGenerator || isAsync) this.unexpected();\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    this.parseMethod(prop);\n    this.checkGetterSetterParamCount(prop);\n\n    return this.finishNode(prop, \"ObjectMethod\");\n  }\n};\n\npp$3.parseObjectProperty = function (prop, startPos, startLoc, isPattern, refShorthandDefaultPos) {\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(false, refShorthandDefaultPos);\n\n    return this.finishNode(prop, \"ObjectProperty\");\n  }\n\n  if (!prop.computed && prop.key.type === \"Identifier\") {\n    this.checkReservedWord(prop.key.name, prop.key.start, true, true);\n\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n    } else if (this.match(types.eq) && refShorthandDefaultPos) {\n      if (!refShorthandDefaultPos.start) {\n        refShorthandDefaultPos.start = this.state.start;\n      }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n    } else {\n      prop.value = prop.key.__clone();\n    }\n    prop.shorthand = true;\n\n    return this.finishNode(prop, \"ObjectProperty\");\n  }\n};\n\npp$3.parseObjPropValue = function (prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos) {\n  var node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refShorthandDefaultPos);\n\n  if (!node) this.unexpected();\n\n  return node;\n};\n\npp$3.parsePropertyName = function (prop) {\n  if (this.eat(types.bracketL)) {\n    prop.computed = true;\n    prop.key = this.parseMaybeAssign();\n    this.expect(types.bracketR);\n  } else {\n    prop.computed = false;\n    var oldInPropertyName = this.state.inPropertyName;\n    this.state.inPropertyName = true;\n    prop.key = this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    this.state.inPropertyName = oldInPropertyName;\n  }\n  return prop.key;\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function (node, isAsync) {\n  node.id = null;\n  node.generator = false;\n  node.expression = false;\n  node.async = !!isAsync;\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function (node, isGenerator, isAsync) {\n  var oldInMethod = this.state.inMethod;\n  this.state.inMethod = node.kind || true;\n  this.initFunction(node, isAsync);\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR);\n  node.generator = !!isGenerator;\n  this.parseFunctionBody(node);\n  this.state.inMethod = oldInMethod;\n  return node;\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function (node, params, isAsync) {\n  this.initFunction(node, isAsync);\n  node.params = this.toAssignableList(params, true, \"arrow function parameters\");\n  this.parseFunctionBody(node, true);\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n};\n\npp$3.isStrictBody = function (node, isExpression) {\n  if (!isExpression && node.body.directives.length) {\n    for (var _iterator2 = node.body.directives, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var directive = _ref2;\n\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n// Parse function body and check parameters.\npp$3.parseFunctionBody = function (node, allowExpression) {\n  var isExpression = allowExpression && !this.match(types.braceL);\n\n  var oldInAsync = this.state.inAsync;\n  this.state.inAsync = node.async;\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = this.state.inFunction;\n    var oldInGen = this.state.inGenerator;\n    var oldLabels = this.state.labels;\n    this.state.inFunction = true;this.state.inGenerator = node.generator;this.state.labels = [];\n    node.body = this.parseBlock(true);\n    node.expression = false;\n    this.state.inFunction = oldInFunc;this.state.inGenerator = oldInGen;this.state.labels = oldLabels;\n  }\n  this.state.inAsync = oldInAsync;\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  var isStrict = this.isStrictBody(node, isExpression);\n  // Also check when allowExpression === true for arrow functions\n  var checkLVal = this.state.strict || allowExpression || isStrict;\n\n  if (isStrict && node.id && node.id.type === \"Identifier\" && node.id.name === \"yield\") {\n    this.raise(node.id.start, \"Binding yield in strict mode\");\n  }\n\n  if (checkLVal) {\n    var nameHash = Object.create(null);\n    var oldStrict = this.state.strict;\n    if (isStrict) this.state.strict = true;\n    if (node.id) {\n      this.checkLVal(node.id, true, undefined, \"function name\");\n    }\n    for (var _iterator3 = node.params, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var param = _ref3;\n\n      if (isStrict && param.type !== \"Identifier\") {\n        this.raise(param.start, \"Non-simple parameter in strict mode\");\n      }\n      this.checkLVal(param, true, nameHash, \"function parameter list\");\n    }\n    this.state.strict = oldStrict;\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function (close, allowEmpty, refShorthandDefaultPos) {\n  var elts = [];\n  var first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(close)) break;\n    }\n\n    elts.push(this.parseExprListItem(allowEmpty, refShorthandDefaultPos));\n  }\n  return elts;\n};\n\npp$3.parseExprListItem = function (allowEmpty, refShorthandDefaultPos, refNeedsArrowPos) {\n  var elt = void 0;\n  if (allowEmpty && this.match(types.comma)) {\n    elt = null;\n  } else if (this.match(types.ellipsis)) {\n    elt = this.parseSpread(refShorthandDefaultPos);\n  } else {\n    elt = this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos);\n  }\n  return elt;\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdentifier = function (liberal) {\n  var node = this.startNode();\n  if (!liberal) {\n    this.checkReservedWord(this.state.value, this.state.start, !!this.state.type.keyword, false);\n  }\n\n  if (this.match(types.name)) {\n    node.name = this.state.value;\n  } else if (this.state.type.keyword) {\n    node.name = this.state.type.keyword;\n  } else {\n    this.unexpected();\n  }\n\n  if (!liberal && node.name === \"await\" && this.state.inAsync) {\n    this.raise(node.start, \"invalid use of await inside of an async function\");\n  }\n\n  node.loc.identifierName = node.name;\n\n  this.next();\n  return this.finishNode(node, \"Identifier\");\n};\n\npp$3.checkReservedWord = function (word, startLoc, checkKeywords, isBinding) {\n  if (this.isReservedWord(word) || checkKeywords && this.isKeyword(word)) {\n    this.raise(startLoc, word + \" is a reserved word\");\n  }\n\n  if (this.state.strict && (reservedWords.strict(word) || isBinding && reservedWords.strictBind(word))) {\n    this.raise(startLoc, word + \" is a reserved word in strict mode\");\n  }\n};\n\n// Parses await expression inside async function.\n\npp$3.parseAwait = function (node) {\n  // istanbul ignore next: this condition is checked at the call site so won't be hit here\n  if (!this.state.inAsync) {\n    this.unexpected();\n  }\n  if (this.match(types.star)) {\n    this.raise(node.start, \"await* has been removed from the async functions proposal. Use Promise.all() instead.\");\n  }\n  node.argument = this.parseMaybeUnary();\n  return this.finishNode(node, \"AwaitExpression\");\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.match(types.semi) || this.canInsertSemicolon() || !this.match(types.star) && !this.state.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\");\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$4 = Parser.prototype;\nvar commentKeys = [\"leadingComments\", \"trailingComments\", \"innerComments\"];\n\nvar Node = function () {\n  function Node(pos, loc, filename) {\n    classCallCheck(this, Node);\n\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (filename) this.loc.filename = filename;\n  }\n\n  Node.prototype.__clone = function __clone() {\n    var node2 = new Node();\n    for (var key in this) {\n      // Do not clone comments that are already attached to the node\n      if (commentKeys.indexOf(key) < 0) {\n        node2[key] = this[key];\n      }\n    }\n\n    return node2;\n  };\n\n  return Node;\n}();\n\npp$4.startNode = function () {\n  return new Node(this.state.start, this.state.startLoc, this.filename);\n};\n\npp$4.startNodeAt = function (pos, loc) {\n  return new Node(pos, loc, this.filename);\n};\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  node.loc.end = loc;\n  this.processComment(node);\n  return node;\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\npp$4.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n};\n\n// Finish node at given position\n\npp$4.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n};\n\nvar pp$5 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$5.raise = function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;\n  err.loc = loc;\n  throw err;\n};\n\n/* eslint max-len: 0 */\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nvar pp$6 = Parser.prototype;\n\npp$6.addComment = function (comment) {\n  if (this.filename) comment.loc.filename = this.filename;\n  this.state.trailingComments.push(comment);\n  this.state.leadingComments.push(comment);\n};\n\npp$6.processComment = function (node) {\n  if (node.type === \"Program\" && node.body.length > 0) return;\n\n  var stack = this.state.commentStack;\n\n  var firstChild = void 0,\n      lastChild = void 0,\n      trailingComments = void 0,\n      i = void 0,\n      j = void 0;\n\n  if (this.state.trailingComments.length > 0) {\n    // If the first comment in trailingComments comes after the\n    // current node, then we're good - all comments in the array will\n    // come after the node and so it's safe to add them as official\n    // trailingComments.\n    if (this.state.trailingComments[0].start >= node.end) {\n      trailingComments = this.state.trailingComments;\n      this.state.trailingComments = [];\n    } else {\n      // Otherwise, if the first comment doesn't come after the\n      // current node, that means we have a mix of leading and trailing\n      // comments in the array and that leadingComments contains the\n      // same items as trailingComments. Reset trailingComments to\n      // zero items and we'll handle this by evaluating leadingComments\n      // later.\n      this.state.trailingComments.length = 0;\n    }\n  } else {\n    var lastInStack = last(stack);\n    if (stack.length > 0 && lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n      trailingComments = lastInStack.trailingComments;\n      lastInStack.trailingComments = null;\n    }\n  }\n\n  // Eating the stack.\n  if (stack.length > 0 && last(stack).start >= node.start) {\n    firstChild = stack.pop();\n  }\n\n  while (stack.length > 0 && last(stack).start >= node.start) {\n    lastChild = stack.pop();\n  }\n\n  if (!lastChild && firstChild) lastChild = firstChild;\n\n  // Attach comments that follow a trailing comma on the last\n  // property in an object literal or a trailing comma in function arguments\n  // as trailing comments\n  if (firstChild && this.state.leadingComments.length > 0) {\n    var lastComment = last(this.state.leadingComments);\n\n    if (firstChild.type === \"ObjectProperty\") {\n      if (lastComment.start >= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n\n          if (this.state.leadingComments.length > 0) {\n            firstChild.trailingComments = this.state.leadingComments;\n            this.state.leadingComments = [];\n          }\n        }\n      }\n    } else if (node.type === \"CallExpression\" && node.arguments && node.arguments.length) {\n      var lastArg = last(node.arguments);\n\n      if (lastArg && lastComment.start >= lastArg.start && lastComment.end <= node.end) {\n        if (this.state.commentPreviousNode) {\n          if (this.state.leadingComments.length > 0) {\n            lastArg.trailingComments = this.state.leadingComments;\n            this.state.leadingComments = [];\n          }\n        }\n      }\n    }\n  }\n\n  if (lastChild) {\n    if (lastChild.leadingComments) {\n      if (lastChild !== node && last(lastChild.leadingComments).end <= node.start) {\n        node.leadingComments = lastChild.leadingComments;\n        lastChild.leadingComments = null;\n      } else {\n        // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n        // so this takes back the leading comment.\n        // See also: https://github.com/eslint/espree/issues/158\n        for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n          if (lastChild.leadingComments[i].end <= node.start) {\n            node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n            break;\n          }\n        }\n      }\n    }\n  } else if (this.state.leadingComments.length > 0) {\n    if (last(this.state.leadingComments).end <= node.start) {\n      if (this.state.commentPreviousNode) {\n        for (j = 0; j < this.state.leadingComments.length; j++) {\n          if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n            this.state.leadingComments.splice(j, 1);\n            j--;\n          }\n        }\n      }\n      if (this.state.leadingComments.length > 0) {\n        node.leadingComments = this.state.leadingComments;\n        this.state.leadingComments = [];\n      }\n    } else {\n      // https://github.com/eslint/espree/issues/2\n      //\n      // In special cases, such as return (without a value) and\n      // debugger, all comments will end up as leadingComments and\n      // will otherwise be eliminated. This step runs when the\n      // commentStack is empty and there are comments left\n      // in leadingComments.\n      //\n      // This loop figures out the stopping point between the actual\n      // leading and trailing comments by finding the location of the\n      // first comment that comes after the given node.\n      for (i = 0; i < this.state.leadingComments.length; i++) {\n        if (this.state.leadingComments[i].end > node.start) {\n          break;\n        }\n      }\n\n      // Split the array based on the location of the first comment\n      // that comes after the node. Keep in mind that this could\n      // result in an empty array, and if so, the array must be\n      // deleted.\n      node.leadingComments = this.state.leadingComments.slice(0, i);\n      if (node.leadingComments.length === 0) {\n        node.leadingComments = null;\n      }\n\n      // Similarly, trailing comments are attached later. The variable\n      // must be reset to null if there are no trailing comments.\n      trailingComments = this.state.leadingComments.slice(i);\n      if (trailingComments.length === 0) {\n        trailingComments = null;\n      }\n    }\n  }\n\n  this.state.commentPreviousNode = node;\n\n  if (trailingComments) {\n    if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n      node.innerComments = trailingComments;\n    } else {\n      node.trailingComments = trailingComments;\n    }\n  }\n\n  stack.push(node);\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.estreeParseRegExpLiteral = function (_ref) {\n  var pattern = _ref.pattern,\n      flags = _ref.flags;\n\n  var regex = null;\n  try {\n    regex = new RegExp(pattern, flags);\n  } catch (e) {\n    // In environments that don't support these flags value will\n    // be null as the regex can't be represented natively.\n  }\n  var node = this.estreeParseLiteral(regex);\n  node.regex = { pattern: pattern, flags: flags };\n\n  return node;\n};\n\npp$7.estreeParseLiteral = function (value) {\n  return this.parseLiteral(value, \"Literal\");\n};\n\npp$7.directiveToStmt = function (directive) {\n  var directiveLiteral = directive.value;\n\n  var stmt = this.startNodeAt(directive.start, directive.loc.start);\n  var expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n\n  expression.value = directiveLiteral.value;\n  expression.raw = directiveLiteral.extra.raw;\n\n  stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n  stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n  return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n};\n\nfunction isSimpleProperty(node) {\n  return node && node.type === \"Property\" && node.kind === \"init\" && node.method === false;\n}\n\nvar estreePlugin = function (instance) {\n  instance.extend(\"checkDeclaration\", function (inner) {\n    return function (node) {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(node.value);\n      } else {\n        inner.call(this, node);\n      }\n    };\n  });\n\n  instance.extend(\"checkGetterSetterParamCount\", function () {\n    return function (prop) {\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.start;\n        if (prop.kind === \"get\") {\n          this.raise(start, \"getter should have no params\");\n        } else {\n          this.raise(start, \"setter should have exactly one param\");\n        }\n      }\n    };\n  });\n\n  instance.extend(\"checkLVal\", function (inner) {\n    return function (expr, isBinding, checkClashes) {\n      var _this = this;\n\n      switch (expr.type) {\n        case \"ObjectPattern\":\n          expr.properties.forEach(function (prop) {\n            _this.checkLVal(prop.type === \"Property\" ? prop.value : prop, isBinding, checkClashes, \"object destructuring pattern\");\n          });\n          break;\n        default:\n          for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n            args[_key - 3] = arguments[_key];\n          }\n\n          inner.call.apply(inner, [this, expr, isBinding, checkClashes].concat(args));\n      }\n    };\n  });\n\n  instance.extend(\"checkPropClash\", function () {\n    return function (prop, propHash) {\n      if (prop.computed || !isSimpleProperty(prop)) return;\n\n      var key = prop.key;\n      // It is either an Identifier or a String/NumericLiteral\n      var name = key.type === \"Identifier\" ? key.name : String(key.value);\n\n      if (name === \"__proto__\") {\n        if (propHash.proto) this.raise(key.start, \"Redefinition of __proto__ property\");\n        propHash.proto = true;\n      }\n    };\n  });\n\n  instance.extend(\"isStrictBody\", function () {\n    return function (node, isExpression) {\n      if (!isExpression && node.body.body.length > 0) {\n        for (var _iterator = node.body.body, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n          }\n\n          var directive = _ref2;\n\n          if (directive.type === \"ExpressionStatement\" && directive.expression.type === \"Literal\") {\n            if (directive.expression.value === \"use strict\") return true;\n          } else {\n            // Break for the first non literal expression\n            break;\n          }\n        }\n      }\n\n      return false;\n    };\n  });\n\n  instance.extend(\"isValidDirective\", function () {\n    return function (stmt) {\n      return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && (!stmt.expression.extra || !stmt.expression.extra.parenthesized);\n    };\n  });\n\n  instance.extend(\"stmtToDirective\", function (inner) {\n    return function (stmt) {\n      var directive = inner.call(this, stmt);\n      var value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    };\n  });\n\n  instance.extend(\"parseBlockBody\", function (inner) {\n    return function (node) {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      inner.call.apply(inner, [this, node].concat(args));\n\n      node.directives.reverse().forEach(function (directive) {\n        node.body.unshift(_this2.directiveToStmt(directive));\n      });\n      delete node.directives;\n    };\n  });\n\n  instance.extend(\"parseClassMethod\", function () {\n    return function (classBody, method, isGenerator, isAsync) {\n      this.parseMethod(method, isGenerator, isAsync);\n      if (method.typeParameters) {\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n    };\n  });\n\n  instance.extend(\"parseExprAtom\", function (inner) {\n    return function () {\n      switch (this.state.type) {\n        case types.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case types.num:\n        case types.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case types._null:\n          return this.estreeParseLiteral(null);\n\n        case types._true:\n          return this.estreeParseLiteral(true);\n\n        case types._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          return inner.call.apply(inner, [this].concat(args));\n      }\n    };\n  });\n\n  instance.extend(\"parseLiteral\", function (inner) {\n    return function () {\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    };\n  });\n\n  instance.extend(\"parseMethod\", function (inner) {\n    return function (node) {\n      var funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so inner method correctly sets state\n\n      for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        args[_key5 - 1] = arguments[_key5];\n      }\n\n      funcNode = inner.call.apply(inner, [this, funcNode].concat(args));\n      delete funcNode.kind;\n      node.value = this.finishNode(funcNode, \"FunctionExpression\");\n\n      return node;\n    };\n  });\n\n  instance.extend(\"parseObjectMethod\", function (inner) {\n    return function () {\n      for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n\n      if (node) {\n        if (node.kind === \"method\") node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node;\n    };\n  });\n\n  instance.extend(\"parseObjectProperty\", function (inner) {\n    return function () {\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node;\n    };\n  });\n\n  instance.extend(\"toAssignable\", function (inner) {\n    return function (node, isBinding) {\n      for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n        args[_key8 - 2] = arguments[_key8];\n      }\n\n      if (isSimpleProperty(node)) {\n        this.toAssignable.apply(this, [node.value, isBinding].concat(args));\n\n        return node;\n      } else if (node.type === \"ObjectExpression\") {\n        node.type = \"ObjectPattern\";\n        for (var _iterator2 = node.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref3;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref3 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref3 = _i2.value;\n          }\n\n          var prop = _ref3;\n\n          if (prop.kind === \"get\" || prop.kind === \"set\") {\n            this.raise(prop.key.start, \"Object pattern can't contain getter or setter\");\n          } else if (prop.method) {\n            this.raise(prop.key.start, \"Object pattern can't contain methods\");\n          } else {\n            this.toAssignable(prop, isBinding, \"object destructuring pattern\");\n          }\n        }\n\n        return node;\n      }\n\n      return inner.call.apply(inner, [this, node, isBinding].concat(args));\n    };\n  });\n};\n\n/* eslint max-len: 0 */\n\nvar primitiveTypes = [\"any\", \"mixed\", \"empty\", \"bool\", \"boolean\", \"number\", \"string\", \"void\", \"null\"];\n\nvar pp$8 = Parser.prototype;\n\npp$8.flowParseTypeInitialiser = function (tok) {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  this.expect(tok || types.colon);\n\n  var type = this.flowParseType();\n  this.state.inType = oldInType;\n  return type;\n};\n\npp$8.flowParsePredicate = function () {\n  var node = this.startNode();\n  var moduloLoc = this.state.startLoc;\n  var moduloPos = this.state.start;\n  this.expect(types.modulo);\n  var checksLoc = this.state.startLoc;\n  this.expectContextual(\"checks\");\n  // Force '%' and 'checks' to be adjacent\n  if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n    this.raise(moduloPos, \"Spaces between ´%´ and ´checks´ are not allowed here.\");\n  }\n  if (this.eat(types.parenL)) {\n    node.expression = this.parseExpression();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"DeclaredPredicate\");\n  } else {\n    return this.finishNode(node, \"InferredPredicate\");\n  }\n};\n\npp$8.flowParseTypeAndPredicateInitialiser = function () {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  this.expect(types.colon);\n  var type = null;\n  var predicate = null;\n  if (this.match(types.modulo)) {\n    this.state.inType = oldInType;\n    predicate = this.flowParsePredicate();\n  } else {\n    type = this.flowParseType();\n    this.state.inType = oldInType;\n    if (this.match(types.modulo)) {\n      predicate = this.flowParsePredicate();\n    }\n  }\n  return [type, predicate];\n};\n\npp$8.flowParseDeclareClass = function (node) {\n  this.next();\n  this.flowParseInterfaceish(node, true);\n  return this.finishNode(node, \"DeclareClass\");\n};\n\npp$8.flowParseDeclareFunction = function (node) {\n  this.next();\n\n  var id = node.id = this.parseIdentifier();\n\n  var typeNode = this.startNode();\n  var typeContainer = this.startNode();\n\n  if (this.isRelational(\"<\")) {\n    typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    typeNode.typeParameters = null;\n  }\n\n  this.expect(types.parenL);\n  var tmp = this.flowParseFunctionTypeParams();\n  typeNode.params = tmp.params;\n  typeNode.rest = tmp.rest;\n  this.expect(types.parenR);\n  var predicate = null;\n\n  var _flowParseTypeAndPred = this.flowParseTypeAndPredicateInitialiser();\n\n  typeNode.returnType = _flowParseTypeAndPred[0];\n  predicate = _flowParseTypeAndPred[1];\n\n  typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n  typeContainer.predicate = predicate;\n  id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n  this.finishNode(id, id.type);\n\n  this.semicolon();\n\n  return this.finishNode(node, \"DeclareFunction\");\n};\n\npp$8.flowParseDeclare = function (node) {\n  if (this.match(types._class)) {\n    return this.flowParseDeclareClass(node);\n  } else if (this.match(types._function)) {\n    return this.flowParseDeclareFunction(node);\n  } else if (this.match(types._var)) {\n    return this.flowParseDeclareVariable(node);\n  } else if (this.isContextual(\"module\")) {\n    if (this.lookahead().type === types.dot) {\n      return this.flowParseDeclareModuleExports(node);\n    } else {\n      return this.flowParseDeclareModule(node);\n    }\n  } else if (this.isContextual(\"type\")) {\n    return this.flowParseDeclareTypeAlias(node);\n  } else if (this.isContextual(\"opaque\")) {\n    return this.flowParseDeclareOpaqueType(node);\n  } else if (this.isContextual(\"interface\")) {\n    return this.flowParseDeclareInterface(node);\n  } else if (this.match(types._export)) {\n    return this.flowParseDeclareExportDeclaration(node);\n  } else {\n    this.unexpected();\n  }\n};\n\npp$8.flowParseDeclareExportDeclaration = function (node) {\n  this.expect(types._export);\n  if (this.isContextual(\"opaque\") // declare export opaque ...\n  ) {\n      node.declaration = this.flowParseDeclare(this.startNode());\n      node.default = false;\n\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    }\n\n  throw this.unexpected();\n};\n\npp$8.flowParseDeclareVariable = function (node) {\n  this.next();\n  node.id = this.flowParseTypeAnnotatableIdentifier();\n  this.semicolon();\n  return this.finishNode(node, \"DeclareVariable\");\n};\n\npp$8.flowParseDeclareModule = function (node) {\n  this.next();\n\n  if (this.match(types.string)) {\n    node.id = this.parseExprAtom();\n  } else {\n    node.id = this.parseIdentifier();\n  }\n\n  var bodyNode = node.body = this.startNode();\n  var body = bodyNode.body = [];\n  this.expect(types.braceL);\n  while (!this.match(types.braceR)) {\n    var _bodyNode = this.startNode();\n\n    if (this.match(types._import)) {\n      var lookahead = this.lookahead();\n      if (lookahead.value !== \"type\" && lookahead.value !== \"typeof\") {\n        this.unexpected(null, \"Imports within a `declare module` body must always be `import type` or `import typeof`\");\n      }\n\n      this.parseImport(_bodyNode);\n    } else {\n      this.expectContextual(\"declare\", \"Only declares and type imports are allowed inside declare module\");\n\n      _bodyNode = this.flowParseDeclare(_bodyNode, true);\n    }\n\n    body.push(_bodyNode);\n  }\n  this.expect(types.braceR);\n\n  this.finishNode(bodyNode, \"BlockStatement\");\n  return this.finishNode(node, \"DeclareModule\");\n};\n\npp$8.flowParseDeclareModuleExports = function (node) {\n  this.expectContextual(\"module\");\n  this.expect(types.dot);\n  this.expectContextual(\"exports\");\n  node.typeAnnotation = this.flowParseTypeAnnotation();\n  this.semicolon();\n\n  return this.finishNode(node, \"DeclareModuleExports\");\n};\n\npp$8.flowParseDeclareTypeAlias = function (node) {\n  this.next();\n  this.flowParseTypeAlias(node);\n  return this.finishNode(node, \"DeclareTypeAlias\");\n};\n\npp$8.flowParseDeclareOpaqueType = function (node) {\n  this.next();\n  this.flowParseOpaqueType(node, true);\n  return this.finishNode(node, \"DeclareOpaqueType\");\n};\n\npp$8.flowParseDeclareInterface = function (node) {\n  this.next();\n  this.flowParseInterfaceish(node);\n  return this.finishNode(node, \"DeclareInterface\");\n};\n\n// Interfaces\n\npp$8.flowParseInterfaceish = function (node) {\n  node.id = this.parseIdentifier();\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  node.extends = [];\n  node.mixins = [];\n\n  if (this.eat(types._extends)) {\n    do {\n      node.extends.push(this.flowParseInterfaceExtends());\n    } while (this.eat(types.comma));\n  }\n\n  if (this.isContextual(\"mixins\")) {\n    this.next();\n    do {\n      node.mixins.push(this.flowParseInterfaceExtends());\n    } while (this.eat(types.comma));\n  }\n\n  node.body = this.flowParseObjectType(true, false, false);\n};\n\npp$8.flowParseInterfaceExtends = function () {\n  var node = this.startNode();\n\n  node.id = this.flowParseQualifiedTypeIdentifier();\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterInstantiation();\n  } else {\n    node.typeParameters = null;\n  }\n\n  return this.finishNode(node, \"InterfaceExtends\");\n};\n\npp$8.flowParseInterface = function (node) {\n  this.flowParseInterfaceish(node, false);\n  return this.finishNode(node, \"InterfaceDeclaration\");\n};\n\npp$8.flowParseRestrictedIdentifier = function (liberal) {\n  if (primitiveTypes.indexOf(this.state.value) > -1) {\n    this.raise(this.state.start, \"Cannot overwrite primitive type \" + this.state.value);\n  }\n\n  return this.parseIdentifier(liberal);\n};\n\n// Type aliases\n\npp$8.flowParseTypeAlias = function (node) {\n  node.id = this.flowParseRestrictedIdentifier();\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  node.right = this.flowParseTypeInitialiser(types.eq);\n  this.semicolon();\n\n  return this.finishNode(node, \"TypeAlias\");\n};\n\n// Opaque type aliases\n\npp$8.flowParseOpaqueType = function (node, declare) {\n  this.expectContextual(\"type\");\n  node.id = this.flowParseRestrictedIdentifier();\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  // Parse the supertype\n  node.supertype = null;\n  if (this.match(types.colon)) {\n    node.supertype = this.flowParseTypeInitialiser(types.colon);\n  }\n\n  node.impltype = null;\n  if (!declare) {\n    node.impltype = this.flowParseTypeInitialiser(types.eq);\n  }\n  this.semicolon();\n\n  return this.finishNode(node, \"OpaqueType\");\n};\n\n// Type annotations\n\npp$8.flowParseTypeParameter = function () {\n  var node = this.startNode();\n\n  var variance = this.flowParseVariance();\n\n  var ident = this.flowParseTypeAnnotatableIdentifier();\n  node.name = ident.name;\n  node.variance = variance;\n  node.bound = ident.typeAnnotation;\n\n  if (this.match(types.eq)) {\n    this.eat(types.eq);\n    node.default = this.flowParseType();\n  }\n\n  return this.finishNode(node, \"TypeParameter\");\n};\n\npp$8.flowParseTypeParameterDeclaration = function () {\n  var oldInType = this.state.inType;\n  var node = this.startNode();\n  node.params = [];\n\n  this.state.inType = true;\n\n  // istanbul ignore else: this condition is already checked at all call sites\n  if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n    this.next();\n  } else {\n    this.unexpected();\n  }\n\n  do {\n    node.params.push(this.flowParseTypeParameter());\n    if (!this.isRelational(\">\")) {\n      this.expect(types.comma);\n    }\n  } while (!this.isRelational(\">\"));\n  this.expectRelational(\">\");\n\n  this.state.inType = oldInType;\n\n  return this.finishNode(node, \"TypeParameterDeclaration\");\n};\n\npp$8.flowParseTypeParameterInstantiation = function () {\n  var node = this.startNode();\n  var oldInType = this.state.inType;\n  node.params = [];\n\n  this.state.inType = true;\n\n  this.expectRelational(\"<\");\n  while (!this.isRelational(\">\")) {\n    node.params.push(this.flowParseType());\n    if (!this.isRelational(\">\")) {\n      this.expect(types.comma);\n    }\n  }\n  this.expectRelational(\">\");\n\n  this.state.inType = oldInType;\n\n  return this.finishNode(node, \"TypeParameterInstantiation\");\n};\n\npp$8.flowParseObjectPropertyKey = function () {\n  return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n};\n\npp$8.flowParseObjectTypeIndexer = function (node, isStatic, variance) {\n  node.static = isStatic;\n\n  this.expect(types.bracketL);\n  if (this.lookahead().type === types.colon) {\n    node.id = this.flowParseObjectPropertyKey();\n    node.key = this.flowParseTypeInitialiser();\n  } else {\n    node.id = null;\n    node.key = this.flowParseType();\n  }\n  this.expect(types.bracketR);\n  node.value = this.flowParseTypeInitialiser();\n  node.variance = variance;\n\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, \"ObjectTypeIndexer\");\n};\n\npp$8.flowParseObjectTypeMethodish = function (node) {\n  node.params = [];\n  node.rest = null;\n  node.typeParameters = null;\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  }\n\n  this.expect(types.parenL);\n  while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n    node.params.push(this.flowParseFunctionTypeParam());\n    if (!this.match(types.parenR)) {\n      this.expect(types.comma);\n    }\n  }\n\n  if (this.eat(types.ellipsis)) {\n    node.rest = this.flowParseFunctionTypeParam();\n  }\n  this.expect(types.parenR);\n  node.returnType = this.flowParseTypeInitialiser();\n\n  return this.finishNode(node, \"FunctionTypeAnnotation\");\n};\n\npp$8.flowParseObjectTypeMethod = function (startPos, startLoc, isStatic, key) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(startPos, startLoc));\n  node.static = isStatic;\n  node.key = key;\n  node.optional = false;\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, \"ObjectTypeProperty\");\n};\n\npp$8.flowParseObjectTypeCallProperty = function (node, isStatic) {\n  var valueNode = this.startNode();\n  node.static = isStatic;\n  node.value = this.flowParseObjectTypeMethodish(valueNode);\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, \"ObjectTypeCallProperty\");\n};\n\npp$8.flowParseObjectType = function (allowStatic, allowExact, allowSpread) {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n\n  var nodeStart = this.startNode();\n  var node = void 0;\n  var propertyKey = void 0;\n  var isStatic = false;\n\n  nodeStart.callProperties = [];\n  nodeStart.properties = [];\n  nodeStart.indexers = [];\n\n  var endDelim = void 0;\n  var exact = void 0;\n  if (allowExact && this.match(types.braceBarL)) {\n    this.expect(types.braceBarL);\n    endDelim = types.braceBarR;\n    exact = true;\n  } else {\n    this.expect(types.braceL);\n    endDelim = types.braceR;\n    exact = false;\n  }\n\n  nodeStart.exact = exact;\n\n  while (!this.match(endDelim)) {\n    var optional = false;\n    var startPos = this.state.start;\n    var startLoc = this.state.startLoc;\n    node = this.startNode();\n    if (allowStatic && this.isContextual(\"static\") && this.lookahead().type !== types.colon) {\n      this.next();\n      isStatic = true;\n    }\n\n    var variancePos = this.state.start;\n    var variance = this.flowParseVariance();\n\n    if (this.match(types.bracketL)) {\n      nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n    } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (variance) {\n        this.unexpected(variancePos);\n      }\n      nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n    } else {\n      if (this.match(types.ellipsis)) {\n        if (!allowSpread) {\n          this.unexpected(null, \"Spread operator cannot appear in class or interface definitions\");\n        }\n        if (variance) {\n          this.unexpected(variance.start, \"Spread properties cannot have variance\");\n        }\n        this.expect(types.ellipsis);\n        node.argument = this.flowParseType();\n        this.flowObjectTypeSemicolon();\n        nodeStart.properties.push(this.finishNode(node, \"ObjectTypeSpreadProperty\"));\n      } else {\n        propertyKey = this.flowParseObjectPropertyKey();\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          // This is a method property\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.properties.push(this.flowParseObjectTypeMethod(startPos, startLoc, isStatic, propertyKey));\n        } else {\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n          node.key = propertyKey;\n          node.value = this.flowParseTypeInitialiser();\n          node.optional = optional;\n          node.static = isStatic;\n          node.variance = variance;\n          this.flowObjectTypeSemicolon();\n          nodeStart.properties.push(this.finishNode(node, \"ObjectTypeProperty\"));\n        }\n      }\n    }\n\n    isStatic = false;\n  }\n\n  this.expect(endDelim);\n\n  var out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n  this.state.inType = oldInType;\n\n  return out;\n};\n\npp$8.flowObjectTypeSemicolon = function () {\n  if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n    this.unexpected();\n  }\n};\n\npp$8.flowParseQualifiedTypeIdentifier = function (startPos, startLoc, id) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n  var node = id || this.parseIdentifier();\n\n  while (this.eat(types.dot)) {\n    var node2 = this.startNodeAt(startPos, startLoc);\n    node2.qualification = node;\n    node2.id = this.parseIdentifier();\n    node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n  }\n\n  return node;\n};\n\npp$8.flowParseGenericType = function (startPos, startLoc, id) {\n  var node = this.startNodeAt(startPos, startLoc);\n\n  node.typeParameters = null;\n  node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterInstantiation();\n  }\n\n  return this.finishNode(node, \"GenericTypeAnnotation\");\n};\n\npp$8.flowParseTypeofType = function () {\n  var node = this.startNode();\n  this.expect(types._typeof);\n  node.argument = this.flowParsePrimaryType();\n  return this.finishNode(node, \"TypeofTypeAnnotation\");\n};\n\npp$8.flowParseTupleType = function () {\n  var node = this.startNode();\n  node.types = [];\n  this.expect(types.bracketL);\n  // We allow trailing commas\n  while (this.state.pos < this.input.length && !this.match(types.bracketR)) {\n    node.types.push(this.flowParseType());\n    if (this.match(types.bracketR)) break;\n    this.expect(types.comma);\n  }\n  this.expect(types.bracketR);\n  return this.finishNode(node, \"TupleTypeAnnotation\");\n};\n\npp$8.flowParseFunctionTypeParam = function () {\n  var name = null;\n  var optional = false;\n  var typeAnnotation = null;\n  var node = this.startNode();\n  var lh = this.lookahead();\n  if (lh.type === types.colon || lh.type === types.question) {\n    name = this.parseIdentifier();\n    if (this.eat(types.question)) {\n      optional = true;\n    }\n    typeAnnotation = this.flowParseTypeInitialiser();\n  } else {\n    typeAnnotation = this.flowParseType();\n  }\n  node.name = name;\n  node.optional = optional;\n  node.typeAnnotation = typeAnnotation;\n  return this.finishNode(node, \"FunctionTypeParam\");\n};\n\npp$8.reinterpretTypeAsFunctionTypeParam = function (type) {\n  var node = this.startNodeAt(type.start, type.loc.start);\n  node.name = null;\n  node.optional = false;\n  node.typeAnnotation = type;\n  return this.finishNode(node, \"FunctionTypeParam\");\n};\n\npp$8.flowParseFunctionTypeParams = function () {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var ret = { params: params, rest: null };\n  while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n    ret.params.push(this.flowParseFunctionTypeParam());\n    if (!this.match(types.parenR)) {\n      this.expect(types.comma);\n    }\n  }\n  if (this.eat(types.ellipsis)) {\n    ret.rest = this.flowParseFunctionTypeParam();\n  }\n  return ret;\n};\n\npp$8.flowIdentToTypeAnnotation = function (startPos, startLoc, node, id) {\n  switch (id.name) {\n    case \"any\":\n      return this.finishNode(node, \"AnyTypeAnnotation\");\n\n    case \"void\":\n      return this.finishNode(node, \"VoidTypeAnnotation\");\n\n    case \"bool\":\n    case \"boolean\":\n      return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n    case \"mixed\":\n      return this.finishNode(node, \"MixedTypeAnnotation\");\n\n    case \"empty\":\n      return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n    case \"number\":\n      return this.finishNode(node, \"NumberTypeAnnotation\");\n\n    case \"string\":\n      return this.finishNode(node, \"StringTypeAnnotation\");\n\n    default:\n      return this.flowParseGenericType(startPos, startLoc, id);\n  }\n};\n\n// The parsing of types roughly parallels the parsing of expressions, and\n// primary types are kind of like primary expressions...they're the\n// primitives with which other types are constructed.\npp$8.flowParsePrimaryType = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var node = this.startNode();\n  var tmp = void 0;\n  var type = void 0;\n  var isGroupedType = false;\n  var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n  switch (this.state.type) {\n    case types.name:\n      return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n    case types.braceL:\n      return this.flowParseObjectType(false, false, true);\n\n    case types.braceBarL:\n      return this.flowParseObjectType(false, true, true);\n\n    case types.bracketL:\n      return this.flowParseTupleType();\n\n    case types.relational:\n      if (this.state.value === \"<\") {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(types.parenL);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        this.expect(types.parenR);\n\n        this.expect(types.arrow);\n\n        node.returnType = this.flowParseType();\n\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      break;\n\n    case types.parenL:\n      this.next();\n\n      // Check to see if this is actually a grouped type\n      if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        if (this.match(types.name)) {\n          var token = this.lookahead().type;\n          isGroupedType = token !== types.question && token !== types.colon;\n        } else {\n          isGroupedType = true;\n        }\n      }\n\n      if (isGroupedType) {\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n        // A `,` or a `) =>` means this is an anonymous function type\n        if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n          this.expect(types.parenR);\n          return type;\n        } else {\n          // Eat a comma if there is one\n          this.eat(types.comma);\n        }\n      }\n\n      if (type) {\n        tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n      } else {\n        tmp = this.flowParseFunctionTypeParams();\n      }\n\n      node.params = tmp.params;\n      node.rest = tmp.rest;\n\n      this.expect(types.parenR);\n\n      this.expect(types.arrow);\n\n      node.returnType = this.flowParseType();\n\n      node.typeParameters = null;\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n    case types.string:\n      return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n    case types._true:case types._false:\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n    case types.plusMin:\n      if (this.state.value === \"-\") {\n        this.next();\n        if (!this.match(types.num)) this.unexpected(null, \"Unexpected token, expected number\");\n\n        return this.parseLiteral(-this.state.value, \"NumericLiteralTypeAnnotation\", node.start, node.loc.start);\n      }\n\n      this.unexpected();\n    case types.num:\n      return this.parseLiteral(this.state.value, \"NumericLiteralTypeAnnotation\");\n\n    case types._null:\n      node.value = this.match(types._null);\n      this.next();\n      return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n    case types._this:\n      node.value = this.match(types._this);\n      this.next();\n      return this.finishNode(node, \"ThisTypeAnnotation\");\n\n    case types.star:\n      this.next();\n      return this.finishNode(node, \"ExistentialTypeParam\");\n\n    default:\n      if (this.state.type.keyword === \"typeof\") {\n        return this.flowParseTypeofType();\n      }\n  }\n\n  this.unexpected();\n};\n\npp$8.flowParsePostfixType = function () {\n  var startPos = this.state.start,\n      startLoc = this.state.startLoc;\n  var type = this.flowParsePrimaryType();\n  while (!this.canInsertSemicolon() && this.match(types.bracketL)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.elementType = type;\n    this.expect(types.bracketL);\n    this.expect(types.bracketR);\n    type = this.finishNode(node, \"ArrayTypeAnnotation\");\n  }\n  return type;\n};\n\npp$8.flowParsePrefixType = function () {\n  var node = this.startNode();\n  if (this.eat(types.question)) {\n    node.typeAnnotation = this.flowParsePrefixType();\n    return this.finishNode(node, \"NullableTypeAnnotation\");\n  } else {\n    return this.flowParsePostfixType();\n  }\n};\n\npp$8.flowParseAnonFunctionWithoutParens = function () {\n  var param = this.flowParsePrefixType();\n  if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n    var node = this.startNodeAt(param.start, param.loc.start);\n    node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n    node.rest = null;\n    node.returnType = this.flowParseType();\n    node.typeParameters = null;\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  return param;\n};\n\npp$8.flowParseIntersectionType = function () {\n  var node = this.startNode();\n  this.eat(types.bitwiseAND);\n  var type = this.flowParseAnonFunctionWithoutParens();\n  node.types = [type];\n  while (this.eat(types.bitwiseAND)) {\n    node.types.push(this.flowParseAnonFunctionWithoutParens());\n  }\n  return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n};\n\npp$8.flowParseUnionType = function () {\n  var node = this.startNode();\n  this.eat(types.bitwiseOR);\n  var type = this.flowParseIntersectionType();\n  node.types = [type];\n  while (this.eat(types.bitwiseOR)) {\n    node.types.push(this.flowParseIntersectionType());\n  }\n  return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n};\n\npp$8.flowParseType = function () {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  var type = this.flowParseUnionType();\n  this.state.inType = oldInType;\n  return type;\n};\n\npp$8.flowParseTypeAnnotation = function () {\n  var node = this.startNode();\n  node.typeAnnotation = this.flowParseTypeInitialiser();\n  return this.finishNode(node, \"TypeAnnotation\");\n};\n\npp$8.flowParseTypeAndPredicateAnnotation = function () {\n  var node = this.startNode();\n\n  var _flowParseTypeAndPred2 = this.flowParseTypeAndPredicateInitialiser();\n\n  node.typeAnnotation = _flowParseTypeAndPred2[0];\n  node.predicate = _flowParseTypeAndPred2[1];\n\n  return this.finishNode(node, \"TypeAnnotation\");\n};\n\npp$8.flowParseTypeAnnotatableIdentifier = function () {\n  var ident = this.flowParseRestrictedIdentifier();\n  if (this.match(types.colon)) {\n    ident.typeAnnotation = this.flowParseTypeAnnotation();\n    this.finishNode(ident, ident.type);\n  }\n  return ident;\n};\n\npp$8.typeCastToParameter = function (node) {\n  node.expression.typeAnnotation = node.typeAnnotation;\n\n  return this.finishNodeAt(node.expression, node.expression.type, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n};\n\npp$8.flowParseVariance = function () {\n  var variance = null;\n  if (this.match(types.plusMin)) {\n    if (this.state.value === \"+\") {\n      variance = \"plus\";\n    } else if (this.state.value === \"-\") {\n      variance = \"minus\";\n    }\n    this.next();\n  }\n  return variance;\n};\n\nvar flowPlugin = function (instance) {\n  // plain function return types: function name(): string {}\n  instance.extend(\"parseFunctionBody\", function (inner) {\n    return function (node, allowExpression) {\n      if (this.match(types.colon) && !allowExpression) {\n        // if allowExpression is true then we're parsing an arrow function and if\n        // there's a return type then it's been handled elsewhere\n        node.returnType = this.flowParseTypeAndPredicateAnnotation();\n      }\n\n      return inner.call(this, node, allowExpression);\n    };\n  });\n\n  // interfaces\n  instance.extend(\"parseStatement\", function (inner) {\n    return function (declaration, topLevel) {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        var node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else {\n        return inner.call(this, declaration, topLevel);\n      }\n    };\n  });\n\n  // declares, interfaces and type aliases\n  instance.extend(\"parseExpressionStatement\", function (inner) {\n    return function (node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return inner.call(this, node, expr);\n    };\n  });\n\n  // export type\n  instance.extend(\"shouldParseExportDeclaration\", function (inner) {\n    return function () {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || inner.call(this);\n    };\n  });\n\n  instance.extend(\"isExportDefaultSpecifier\", function (inner) {\n    return function () {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\")) {\n        return false;\n      }\n\n      return inner.call(this);\n    };\n  });\n\n  instance.extend(\"parseConditional\", function (inner) {\n    return function (expr, noIn, startPos, startLoc, refNeedsArrowPos) {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos && this.match(types.question)) {\n        var state = this.state.clone();\n        try {\n          return inner.call(this, expr, noIn, startPos, startLoc);\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n            refNeedsArrowPos.start = err.pos || this.state.start;\n            return expr;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      return inner.call(this, expr, noIn, startPos, startLoc);\n    };\n  });\n\n  instance.extend(\"parseParenItem\", function (inner) {\n    return function (node, startPos, startLoc) {\n      node = inner.call(this, node, startPos, startLoc);\n      if (this.eat(types.question)) {\n        node.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        var typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    };\n  });\n\n  instance.extend(\"parseExport\", function (inner) {\n    return function (node) {\n      node = inner.call(this, node);\n      if (node.type === \"ExportNamedDeclaration\") {\n        node.exportKind = node.exportKind || \"value\";\n      }\n      return node;\n    };\n  });\n\n  instance.extend(\"parseExportDeclaration\", function (inner) {\n    return function (node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        var declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        var _declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(_declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        var _declarationNode2 = this.startNode();\n        this.next();\n        return this.flowParseInterface(_declarationNode2);\n      } else {\n        return inner.call(this, node);\n      }\n    };\n  });\n\n  instance.extend(\"parseClassId\", function (inner) {\n    return function (node) {\n      inner.apply(this, arguments);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    };\n  });\n\n  // don't consider `void` to be a keyword as then it'll use the void token type\n  // and set startExpr\n  instance.extend(\"isKeyword\", function (inner) {\n    return function (name) {\n      if (this.state.inType && name === \"void\") {\n        return false;\n      } else {\n        return inner.call(this, name);\n      }\n    };\n  });\n\n  // ensure that inside flow types, we bypass the jsx parser plugin\n  instance.extend(\"readToken\", function (inner) {\n    return function (code) {\n      if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else {\n        return inner.call(this, code);\n      }\n    };\n  });\n\n  // don't lex any token as a jsx one inside a flow type\n  instance.extend(\"jsx_readToken\", function (inner) {\n    return function () {\n      if (!this.state.inType) return inner.call(this);\n    };\n  });\n\n  instance.extend(\"toAssignable\", function (inner) {\n    return function (node, isBinding, contextDescription) {\n      if (node.type === \"TypeCastExpression\") {\n        return inner.call(this, this.typeCastToParameter(node), isBinding, contextDescription);\n      } else {\n        return inner.call(this, node, isBinding, contextDescription);\n      }\n    };\n  });\n\n  // turn type casts that we found in function parameter head into type annotated params\n  instance.extend(\"toAssignableList\", function (inner) {\n    return function (exprList, isBinding, contextDescription) {\n      for (var i = 0; i < exprList.length; i++) {\n        var expr = exprList[i];\n        if (expr && expr.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return inner.call(this, exprList, isBinding, contextDescription);\n    };\n  });\n\n  // this is a list of nodes, from something like a call expression, we need to filter the\n  // type casts that we've found that are illegal in this context\n  instance.extend(\"toReferencedList\", function () {\n    return function (exprList) {\n      for (var i = 0; i < exprList.length; i++) {\n        var expr = exprList[i];\n        if (expr && expr._exprListItem && expr.type === \"TypeCastExpression\") {\n          this.raise(expr.start, \"Unexpected type cast\");\n        }\n      }\n\n      return exprList;\n    };\n  });\n\n  // parse an item inside a expression list eg. `(NODE, NODE)` where NODE represents\n  // the position where this function is called\n  instance.extend(\"parseExprListItem\", function (inner) {\n    return function () {\n      var container = this.startNode();\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n      if (this.match(types.colon)) {\n        container._exprListItem = true;\n        container.expression = node;\n        container.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(container, \"TypeCastExpression\");\n      } else {\n        return node;\n      }\n    };\n  });\n\n  instance.extend(\"checkLVal\", function (inner) {\n    return function (node) {\n      if (node.type !== \"TypeCastExpression\") {\n        return inner.apply(this, arguments);\n      }\n    };\n  });\n\n  // parse class property type annotations\n  instance.extend(\"parseClassProperty\", function (inner) {\n    return function (node) {\n      delete node.variancePos;\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return inner.call(this, node);\n    };\n  });\n\n  // determine whether or not we're currently in the position where a class method would appear\n  instance.extend(\"isClassMethod\", function (inner) {\n    return function () {\n      return this.isRelational(\"<\") || inner.call(this);\n    };\n  });\n\n  // determine whether or not we're currently in the position where a class property would appear\n  instance.extend(\"isClassProperty\", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n\n  instance.extend(\"isNonstaticConstructor\", function (inner) {\n    return function (method) {\n      return !this.match(types.colon) && inner.call(this, method);\n    };\n  });\n\n  // parse type parameters for class methods\n  instance.extend(\"parseClassMethod\", function (inner) {\n    return function (classBody, method) {\n      if (method.variance) {\n        this.unexpected(method.variancePos);\n      }\n      delete method.variance;\n      delete method.variancePos;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      inner.call.apply(inner, [this, classBody, method].concat(args));\n    };\n  });\n\n  // parse a the super class type parameters and implements\n  instance.extend(\"parseClassSuper\", function (inner) {\n    return function (node, isStatement) {\n      inner.call(this, node, isStatement);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        var implemented = node.implements = [];\n        do {\n          var _node = this.startNode();\n          _node.id = this.parseIdentifier();\n          if (this.isRelational(\"<\")) {\n            _node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            _node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(_node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    };\n  });\n\n  instance.extend(\"parsePropertyName\", function (inner) {\n    return function (node) {\n      var variancePos = this.state.start;\n      var variance = this.flowParseVariance();\n      var key = inner.call(this, node);\n      node.variance = variance;\n      node.variancePos = variancePos;\n      return key;\n    };\n  });\n\n  // parse type parameters for object method shorthand\n  instance.extend(\"parseObjPropValue\", function (inner) {\n    return function (prop) {\n      if (prop.variance) {\n        this.unexpected(prop.variancePos);\n      }\n      delete prop.variance;\n      delete prop.variancePos;\n\n      var typeParameters = void 0;\n\n      // method shorthand\n      if (this.isRelational(\"<\")) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      inner.apply(this, arguments);\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    };\n  });\n\n  instance.extend(\"parseAssignableListItemTypes\", function () {\n    return function (param) {\n      if (this.eat(types.question)) {\n        param.optional = true;\n      }\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.finishNode(param, param.type);\n      return param;\n    };\n  });\n\n  instance.extend(\"parseMaybeDefault\", function (inner) {\n    return function () {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var node = inner.apply(this, args);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\");\n      }\n\n      return node;\n    };\n  });\n\n  // parse typeof and type imports\n  instance.extend(\"parseImportSpecifiers\", function (inner) {\n    return function (node) {\n      node.importKind = \"value\";\n\n      var kind = null;\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        var lh = this.lookahead();\n        if (lh.type === types.name && lh.value !== \"from\" || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      inner.call(this, node);\n    };\n  });\n\n  // parse import-type/typeof shorthand\n  instance.extend(\"parseImportSpecifier\", function () {\n    return function (node) {\n      var specifier = this.startNode();\n      var firstIdentLoc = this.state.start;\n      var firstIdent = this.parseIdentifier(true);\n\n      var specifierTypeKind = null;\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      var isBinding = false;\n      if (this.isContextual(\"as\")) {\n        var as_ident = this.parseIdentifier(true);\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      if ((node.importKind === \"type\" || node.importKind === \"typeof\") && (specifier.importKind === \"type\" || specifier.importKind === \"typeof\")) {\n        this.raise(firstIdentLoc, \"`The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements`\");\n      }\n\n      if (isBinding) this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n\n      this.checkLVal(specifier.local, true, undefined, \"import specifier\");\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    };\n  });\n\n  // parse function type parameters - function foo<T>() {}\n  instance.extend(\"parseFunctionParams\", function (inner) {\n    return function (node) {\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      inner.call(this, node);\n    };\n  });\n\n  // parse flow type annotations on variable declarator heads - let foo: string = bar\n  instance.extend(\"parseVarHead\", function (inner) {\n    return function (decl) {\n      inner.call(this, decl);\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.finishNode(decl.id, decl.id.type);\n      }\n    };\n  });\n\n  // parse the return type of an async arrow function - let foo = (async (): number => {});\n  instance.extend(\"parseAsyncArrowFromCallExpression\", function (inner) {\n    return function (node, call) {\n      if (this.match(types.colon)) {\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return inner.call(this, node, call);\n    };\n  });\n\n  // todo description\n  instance.extend(\"shouldParseAsyncArrow\", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n\n  // We need to support type parameter declarations for arrow functions. This\n  // is tricky. There are three situations we need to handle\n  //\n  // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n  //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n  //    error.\n  // 2. This is an arrow function. We'll parse the type parameter declaration,\n  //    parse the rest, make sure the rest is an arrow function, and go from\n  //    there\n  // 3. This is neither. Just call the inner function\n  instance.extend(\"parseMaybeAssign\", function (inner) {\n    return function () {\n      var jsxError = null;\n\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      if (types.jsxTagStart && this.match(types.jsxTagStart)) {\n        var state = this.state.clone();\n        try {\n          return inner.apply(this, args);\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n\n            // Remove `tc.j_expr` and `tc.j_oTag` from context added\n            // by parsing `jsxTagStart` to stop the JSX plugin from\n            // messing with the tokens\n            this.state.context.length -= 2;\n\n            jsxError = err;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      if (jsxError != null || this.isRelational(\"<\")) {\n        var arrowExpression = void 0;\n        var typeParameters = void 0;\n        try {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          arrowExpression = inner.apply(this, args);\n          arrowExpression.typeParameters = typeParameters;\n          arrowExpression.start = typeParameters.start;\n          arrowExpression.loc.start = typeParameters.loc.start;\n        } catch (err) {\n          throw jsxError || err;\n        }\n\n        if (arrowExpression.type === \"ArrowFunctionExpression\") {\n          return arrowExpression;\n        } else if (jsxError != null) {\n          throw jsxError;\n        } else {\n          this.raise(typeParameters.start, \"Expected an arrow function after this type parameter declaration\");\n        }\n      }\n\n      return inner.apply(this, args);\n    };\n  });\n\n  // handle return types for arrow functions\n  instance.extend(\"parseArrow\", function (inner) {\n    return function (node) {\n      if (this.match(types.colon)) {\n        var state = this.state.clone();\n        try {\n          var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          var returnType = this.flowParseTypeAndPredicateAnnotation();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          // assign after it is clear it is an arrow\n          node.returnType = returnType;\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      return inner.call(this, node);\n    };\n  });\n\n  instance.extend(\"shouldParseArrow\", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n};\n\n// Adapted from String.fromcodepoint to export the function without modifying String\n/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\n\n// The MIT License (MIT)\n// Copyright (c) Mathias Bynens\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n// associated documentation files (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge, publish, distribute,\n// sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or\n// substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n// NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar fromCodePoint = String.fromCodePoint;\n\nif (!fromCodePoint) {\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n  fromCodePoint = function fromCodePoint() {\n    var MAX_SIZE = 0x4000;\n    var codeUnits = [];\n    var highSurrogate = void 0;\n    var lowSurrogate = void 0;\n    var index = -1;\n    var length = arguments.length;\n    if (!length) {\n      return \"\";\n    }\n    var result = \"\";\n    while (++index < length) {\n      var codePoint = Number(arguments[index]);\n      if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n      codePoint < 0 || // not a valid Unicode code point\n      codePoint > 0x10FFFF || // not a valid Unicode code point\n      floor(codePoint) != codePoint // not an integer\n      ) {\n          throw RangeError(\"Invalid code point: \" + codePoint);\n        }\n      if (codePoint <= 0xFFFF) {\n        // BMP code point\n        codeUnits.push(codePoint);\n      } else {\n        // Astral code point; split in surrogate halves\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        codePoint -= 0x10000;\n        highSurrogate = (codePoint >> 10) + 0xD800;\n        lowSurrogate = codePoint % 0x400 + 0xDC00;\n        codeUnits.push(highSurrogate, lowSurrogate);\n      }\n      if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n        result += stringFromCharCode.apply(null, codeUnits);\n        codeUnits.length = 0;\n      }\n    }\n    return result;\n  };\n}\n\nvar fromCodePoint$1 = fromCodePoint;\n\nvar XHTMLEntities = {\n  quot: \"\\\"\",\n  amp: \"&\",\n  apos: \"'\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\xA0\",\n  iexcl: \"\\xA1\",\n  cent: \"\\xA2\",\n  pound: \"\\xA3\",\n  curren: \"\\xA4\",\n  yen: \"\\xA5\",\n  brvbar: \"\\xA6\",\n  sect: \"\\xA7\",\n  uml: \"\\xA8\",\n  copy: \"\\xA9\",\n  ordf: \"\\xAA\",\n  laquo: \"\\xAB\",\n  not: \"\\xAC\",\n  shy: \"\\xAD\",\n  reg: \"\\xAE\",\n  macr: \"\\xAF\",\n  deg: \"\\xB0\",\n  plusmn: \"\\xB1\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  acute: \"\\xB4\",\n  micro: \"\\xB5\",\n  para: \"\\xB6\",\n  middot: \"\\xB7\",\n  cedil: \"\\xB8\",\n  sup1: \"\\xB9\",\n  ordm: \"\\xBA\",\n  raquo: \"\\xBB\",\n  frac14: \"\\xBC\",\n  frac12: \"\\xBD\",\n  frac34: \"\\xBE\",\n  iquest: \"\\xBF\",\n  Agrave: \"\\xC0\",\n  Aacute: \"\\xC1\",\n  Acirc: \"\\xC2\",\n  Atilde: \"\\xC3\",\n  Auml: \"\\xC4\",\n  Aring: \"\\xC5\",\n  AElig: \"\\xC6\",\n  Ccedil: \"\\xC7\",\n  Egrave: \"\\xC8\",\n  Eacute: \"\\xC9\",\n  Ecirc: \"\\xCA\",\n  Euml: \"\\xCB\",\n  Igrave: \"\\xCC\",\n  Iacute: \"\\xCD\",\n  Icirc: \"\\xCE\",\n  Iuml: \"\\xCF\",\n  ETH: \"\\xD0\",\n  Ntilde: \"\\xD1\",\n  Ograve: \"\\xD2\",\n  Oacute: \"\\xD3\",\n  Ocirc: \"\\xD4\",\n  Otilde: \"\\xD5\",\n  Ouml: \"\\xD6\",\n  times: \"\\xD7\",\n  Oslash: \"\\xD8\",\n  Ugrave: \"\\xD9\",\n  Uacute: \"\\xDA\",\n  Ucirc: \"\\xDB\",\n  Uuml: \"\\xDC\",\n  Yacute: \"\\xDD\",\n  THORN: \"\\xDE\",\n  szlig: \"\\xDF\",\n  agrave: \"\\xE0\",\n  aacute: \"\\xE1\",\n  acirc: \"\\xE2\",\n  atilde: \"\\xE3\",\n  auml: \"\\xE4\",\n  aring: \"\\xE5\",\n  aelig: \"\\xE6\",\n  ccedil: \"\\xE7\",\n  egrave: \"\\xE8\",\n  eacute: \"\\xE9\",\n  ecirc: \"\\xEA\",\n  euml: \"\\xEB\",\n  igrave: \"\\xEC\",\n  iacute: \"\\xED\",\n  icirc: \"\\xEE\",\n  iuml: \"\\xEF\",\n  eth: \"\\xF0\",\n  ntilde: \"\\xF1\",\n  ograve: \"\\xF2\",\n  oacute: \"\\xF3\",\n  ocirc: \"\\xF4\",\n  otilde: \"\\xF5\",\n  ouml: \"\\xF6\",\n  divide: \"\\xF7\",\n  oslash: \"\\xF8\",\n  ugrave: \"\\xF9\",\n  uacute: \"\\xFA\",\n  ucirc: \"\\xFB\",\n  uuml: \"\\xFC\",\n  yacute: \"\\xFD\",\n  thorn: \"\\xFE\",\n  yuml: \"\\xFF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  \"int\": \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nvar HEX_NUMBER = /^[\\da-fA-F]+$/;\nvar DECIMAL_NUMBER = /^\\d+$/;\n\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(types$1.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  var out = this.state.context.pop();\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nvar pp$9 = Parser.prototype;\n\n// Reads inline JSX contents token.\n\npp$9.jsxReadToken = function () {\n  var out = \"\";\n  var chunkStart = this.state.pos;\n  for (;;) {\n    if (this.state.pos >= this.input.length) {\n      this.raise(this.state.start, \"Unterminated JSX contents\");\n    }\n\n    var ch = this.input.charCodeAt(this.state.pos);\n\n    switch (ch) {\n      case 60: // \"<\"\n      case 123:\n        // \"{\"\n        if (this.state.pos === this.state.start) {\n          if (ch === 60 && this.state.exprAllowed) {\n            ++this.state.pos;\n            return this.finishToken(types.jsxTagStart);\n          }\n          return this.getTokenFromCode(ch);\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        return this.finishToken(types.jsxText, out);\n\n      case 38:\n        // \"&\"\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n        break;\n\n      default:\n        if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(true);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n    }\n  }\n};\n\npp$9.jsxReadNewLine = function (normalizeCRLF) {\n  var ch = this.input.charCodeAt(this.state.pos);\n  var out = void 0;\n  ++this.state.pos;\n  if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n    ++this.state.pos;\n    out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n  } else {\n    out = String.fromCharCode(ch);\n  }\n  ++this.state.curLine;\n  this.state.lineStart = this.state.pos;\n\n  return out;\n};\n\npp$9.jsxReadString = function (quote) {\n  var out = \"\";\n  var chunkStart = ++this.state.pos;\n  for (;;) {\n    if (this.state.pos >= this.input.length) {\n      this.raise(this.state.start, \"Unterminated string constant\");\n    }\n\n    var ch = this.input.charCodeAt(this.state.pos);\n    if (ch === quote) break;\n    if (ch === 38) {\n      // \"&\"\n      out += this.input.slice(chunkStart, this.state.pos);\n      out += this.jsxReadEntity();\n      chunkStart = this.state.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.state.pos);\n      out += this.jsxReadNewLine(false);\n      chunkStart = this.state.pos;\n    } else {\n      ++this.state.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.state.pos++);\n  return this.finishToken(types.string, out);\n};\n\npp$9.jsxReadEntity = function () {\n  var str = \"\";\n  var count = 0;\n  var entity = void 0;\n  var ch = this.input[this.state.pos];\n\n  var startPos = ++this.state.pos;\n  while (this.state.pos < this.input.length && count++ < 10) {\n    ch = this.input[this.state.pos++];\n    if (ch === \";\") {\n      if (str[0] === \"#\") {\n        if (str[1] === \"x\") {\n          str = str.substr(2);\n          if (HEX_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 16));\n        } else {\n          str = str.substr(1);\n          if (DECIMAL_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 10));\n        }\n      } else {\n        entity = XHTMLEntities[str];\n      }\n      break;\n    }\n    str += ch;\n  }\n  if (!entity) {\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  return entity;\n};\n\n// Read a JSX identifier (valid tag or attribute name).\n//\n// Optimized version since JSX identifiers can\"t contain\n// escape characters and so can be read as single slice.\n// Also assumes that first character was already checked\n// by isIdentifierStart in readToken.\n\npp$9.jsxReadWord = function () {\n  var ch = void 0;\n  var start = this.state.pos;\n  do {\n    ch = this.input.charCodeAt(++this.state.pos);\n  } while (isIdentifierChar(ch) || ch === 45); // \"-\"\n  return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n};\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n}\n\n// Parse next token as JSX identifier\n\npp$9.jsxParseIdentifier = function () {\n  var node = this.startNode();\n  if (this.match(types.jsxName)) {\n    node.name = this.state.value;\n  } else if (this.state.type.keyword) {\n    node.name = this.state.type.keyword;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  return this.finishNode(node, \"JSXIdentifier\");\n};\n\n// Parse namespaced identifier.\n\npp$9.jsxParseNamespacedName = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var name = this.jsxParseIdentifier();\n  if (!this.eat(types.colon)) return name;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.namespace = name;\n  node.name = this.jsxParseIdentifier();\n  return this.finishNode(node, \"JSXNamespacedName\");\n};\n\n// Parses element name in any form - namespaced, member\n// or single identifier.\n\npp$9.jsxParseElementName = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var node = this.jsxParseNamespacedName();\n  while (this.eat(types.dot)) {\n    var newNode = this.startNodeAt(startPos, startLoc);\n    newNode.object = node;\n    newNode.property = this.jsxParseIdentifier();\n    node = this.finishNode(newNode, \"JSXMemberExpression\");\n  }\n  return node;\n};\n\n// Parses any type of JSX attribute value.\n\npp$9.jsxParseAttributeValue = function () {\n  var node = void 0;\n  switch (this.state.type) {\n    case types.braceL:\n      node = this.jsxParseExpressionContainer();\n      if (node.expression.type === \"JSXEmptyExpression\") {\n        this.raise(node.start, \"JSX attributes must only be assigned a non-empty expression\");\n      } else {\n        return node;\n      }\n\n    case types.jsxTagStart:\n    case types.string:\n      node = this.parseExprAtom();\n      node.extra = null;\n      return node;\n\n    default:\n      this.raise(this.state.start, \"JSX value should be either an expression or a quoted JSX text\");\n  }\n};\n\n// JSXEmptyExpression is unique type since it doesn't actually parse anything,\n// and so it should start at the end of last read token (left brace) and finish\n// at the beginning of the next one (right brace).\n\npp$9.jsxParseEmptyExpression = function () {\n  var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n  return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n};\n\n// Parse JSX spread child\n\npp$9.jsxParseSpreadChild = function () {\n  var node = this.startNode();\n  this.expect(types.braceL);\n  this.expect(types.ellipsis);\n  node.expression = this.parseExpression();\n  this.expect(types.braceR);\n\n  return this.finishNode(node, \"JSXSpreadChild\");\n};\n\n// Parses JSX expression enclosed into curly brackets.\n\n\npp$9.jsxParseExpressionContainer = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.match(types.braceR)) {\n    node.expression = this.jsxParseEmptyExpression();\n  } else {\n    node.expression = this.parseExpression();\n  }\n  this.expect(types.braceR);\n  return this.finishNode(node, \"JSXExpressionContainer\");\n};\n\n// Parses following JSX attribute name-value pair.\n\npp$9.jsxParseAttribute = function () {\n  var node = this.startNode();\n  if (this.eat(types.braceL)) {\n    this.expect(types.ellipsis);\n    node.argument = this.parseMaybeAssign();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadAttribute\");\n  }\n  node.name = this.jsxParseNamespacedName();\n  node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n  return this.finishNode(node, \"JSXAttribute\");\n};\n\n// Parses JSX opening tag starting after \"<\".\n\npp$9.jsxParseOpeningElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.attributes = [];\n  node.name = this.jsxParseElementName();\n  while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n    node.attributes.push(this.jsxParseAttribute());\n  }\n  node.selfClosing = this.eat(types.slash);\n  this.expect(types.jsxTagEnd);\n  return this.finishNode(node, \"JSXOpeningElement\");\n};\n\n// Parses JSX closing tag starting after \"</\".\n\npp$9.jsxParseClosingElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.name = this.jsxParseElementName();\n  this.expect(types.jsxTagEnd);\n  return this.finishNode(node, \"JSXClosingElement\");\n};\n\n// Parses entire JSX element, including it\"s opening tag\n// (starting after \"<\"), attributes, contents and closing tag.\n\npp$9.jsxParseElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  var children = [];\n  var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n  var closingElement = null;\n\n  if (!openingElement.selfClosing) {\n    contents: for (;;) {\n      switch (this.state.type) {\n        case types.jsxTagStart:\n          startPos = this.state.start;startLoc = this.state.startLoc;\n          this.next();\n          if (this.eat(types.slash)) {\n            closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n            break contents;\n          }\n          children.push(this.jsxParseElementAt(startPos, startLoc));\n          break;\n\n        case types.jsxText:\n          children.push(this.parseExprAtom());\n          break;\n\n        case types.braceL:\n          if (this.lookahead().type === types.ellipsis) {\n            children.push(this.jsxParseSpreadChild());\n          } else {\n            children.push(this.jsxParseExpressionContainer());\n          }\n\n          break;\n\n        // istanbul ignore next - should never happen\n        default:\n          this.unexpected();\n      }\n    }\n\n    if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n      this.raise(closingElement.start, \"Expected corresponding JSX closing tag for <\" + getQualifiedJSXName(openingElement.name) + \">\");\n    }\n  }\n\n  node.openingElement = openingElement;\n  node.closingElement = closingElement;\n  node.children = children;\n  if (this.match(types.relational) && this.state.value === \"<\") {\n    this.raise(this.state.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n  }\n  return this.finishNode(node, \"JSXElement\");\n};\n\n// Parses entire JSX element from current position.\n\npp$9.jsxParseElement = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  this.next();\n  return this.jsxParseElementAt(startPos, startLoc);\n};\n\nvar jsxPlugin = function (instance) {\n  instance.extend(\"parseExprAtom\", function (inner) {\n    return function (refShortHandDefaultPos) {\n      if (this.match(types.jsxText)) {\n        var node = this.parseLiteral(this.state.value, \"JSXText\");\n        // https://github.com/babel/babel/issues/2078\n        node.extra = null;\n        return node;\n      } else if (this.match(types.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else {\n        return inner.call(this, refShortHandDefaultPos);\n      }\n    };\n  });\n\n  instance.extend(\"readToken\", function (inner) {\n    return function (code) {\n      if (this.state.inPropertyName) return inner.call(this, code);\n\n      var context = this.curContext();\n\n      if (context === types$1.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === types$1.j_oTag || context === types$1.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === 62) {\n          ++this.state.pos;\n          return this.finishToken(types.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (code === 60 && this.state.exprAllowed) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagStart);\n      }\n\n      return inner.call(this, code);\n    };\n  });\n\n  instance.extend(\"updateContext\", function (inner) {\n    return function (prevType) {\n      if (this.match(types.braceL)) {\n        var curContext = this.curContext();\n        if (curContext === types$1.j_oTag) {\n          this.state.context.push(types$1.braceExpression);\n        } else if (curContext === types$1.j_expr) {\n          this.state.context.push(types$1.templateQuasi);\n        } else {\n          inner.call(this, prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(types$1.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return inner.call(this, prevType);\n      }\n    };\n  });\n};\n\nplugins.estree = estreePlugin;\nplugins.flow = flowPlugin;\nplugins.jsx = jsxPlugin;\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse();\n}\n\nfunction parseExpression(input, options) {\n  var parser = new Parser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n"]}