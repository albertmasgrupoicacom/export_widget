{"version":3,"sources":["_formatLimit.js"],"names":["module","exports","generate__formatLimit","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$valid","format","$schemaFormat","$isDataFormat","$closingBraces","$schemaValueFormat","getData","dataPathArr","$format","$compare","formats","compare","$isMax","$exclusiveKeyword","$schemaExcl","$isDataExcl","$op","$result","$isData","$schemaValue","$schemaValueExcl","$exclusive","$opExpr","$opStr","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async","escapeQuotes"],"mappings":"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","file":"_formatLimit.js","sourcesContent":["'use strict';\nmodule.exports = function generate__formatLimit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  out += 'var ' + ($valid) + ' = undefined;';\n  if (it.opts.format === false) {\n    out += ' ' + ($valid) + ' = true; ';\n    return out;\n  }\n  var $schemaFormat = it.schema.format,\n    $isDataFormat = it.opts.$data && $schemaFormat.$data,\n    $closingBraces = '';\n  if ($isDataFormat) {\n    var $schemaValueFormat = it.util.getData($schemaFormat.$data, $dataLvl, it.dataPathArr),\n      $format = 'format' + $lvl,\n      $compare = 'compare' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValueFormat) + '] , ' + ($compare) + ' = ' + ($format) + ' && ' + ($format) + '.compare;';\n  } else {\n    var $format = it.formats[$schemaFormat];\n    if (!($format && $format.compare)) {\n      out += '  ' + ($valid) + ' = true; ';\n      return out;\n    }\n    var $compare = 'formats' + it.util.getProperty($schemaFormat) + '.compare';\n  }\n  var $isMax = $keyword == 'formatMaximum',\n    $exclusiveKeyword = 'formatExclusive' + ($isMax ? 'Maximum' : 'Minimum'),\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $result = 'result' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' if (typeof ' + ($schemaValueExcl) + ' != \\'boolean\\' && ' + ($schemaValueExcl) + ' !== undefined) { ' + ($valid) + ' = false; ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_formatExclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      $closingBraces += '}';\n      out += ' else { ';\n    }\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; var ' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true; if (' + ($valid) + ' === undefined) { ' + ($valid) + ' = ' + ($exclusive) + ' ? ' + ($result) + ' ' + ($op) + ' 0 : ' + ($result) + ' ' + ($op) + '= 0; } if (!' + ($valid) + ') var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\';';\n  } else {\n    var $exclusive = $schemaExcl === true,\n      $opStr = $op;\n    if (!$exclusive) $opStr += '=';\n    var $opExpr = '\\'' + $opStr + '\\'';\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; if (' + ($valid) + ' === undefined) ' + ($valid) + ' = ' + ($result) + ' ' + ($op);\n    if (!$exclusive) {\n      out += '=';\n    }\n    out += ' 0;';\n  }\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_formatLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' , exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '}';\n  return out;\n}\n"]}