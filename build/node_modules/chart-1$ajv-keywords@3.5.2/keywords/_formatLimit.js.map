{"version":3,"sources":["_formatLimit.js"],"names":["TIME","DATE_TIME_SEPARATOR","COMPARE_FORMATS","date","compareDate","time","compareTime","compareDateTime","$dataMetaSchema","type","required","properties","$data","anyOf","format","additionalProperties","module","exports","minMax","defFunc","ajv","definition","inline","require","statements","errors","dependencies","metaSchema","addKeyword","extendFormats","formats","_formats","name","RegExp","validate","compare","d1","d2","t1","t2","match","dt1","dt2","split","res","undefined"],"mappings":"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","file":"_formatLimit.js","sourcesContent":["'use strict';\n\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i;\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\n\nvar COMPARE_FORMATS = {\n  date: compareDate,\n  time: compareTime,\n  'date-time': compareDateTime\n};\n\nvar $dataMetaSchema = {\n  type: 'object',\n  required: [ '$data' ],\n  properties: {\n    $data: {\n      type: 'string',\n      anyOf: [\n        { format: 'relative-json-pointer' },\n        { format: 'json-pointer' }\n      ]\n    }\n  },\n  additionalProperties: false\n};\n\nmodule.exports = function (minMax) {\n  var keyword = 'format' + minMax;\n  return function defFunc(ajv) {\n    defFunc.definition = {\n      type: 'string',\n      inline: require('./dotjs/_formatLimit'),\n      statements: true,\n      errors: 'full',\n      dependencies: ['format'],\n      metaSchema: {\n        anyOf: [\n          {type: 'string'},\n          $dataMetaSchema\n        ]\n      }\n    };\n\n    ajv.addKeyword(keyword, defFunc.definition);\n    ajv.addKeyword('formatExclusive' + minMax, {\n      dependencies: ['format' + minMax],\n      metaSchema: {\n        anyOf: [\n          {type: 'boolean'},\n          $dataMetaSchema\n        ]\n      }\n    });\n    extendFormats(ajv);\n    return ajv;\n  };\n};\n\n\nfunction extendFormats(ajv) {\n  var formats = ajv._formats;\n  for (var name in COMPARE_FORMATS) {\n    var format = formats[name];\n    // the last condition is needed if it's RegExp from another window\n    if (typeof format != 'object' || format instanceof RegExp || !format.validate)\n      format = formats[name] = { validate: format };\n    if (!format.compare)\n      format.compare = COMPARE_FORMATS[name];\n  }\n}\n\n\nfunction compareDate(d1, d2) {\n  if (!(d1 && d2)) return;\n  if (d1 > d2) return 1;\n  if (d1 < d2) return -1;\n  if (d1 === d2) return 0;\n}\n\n\nfunction compareTime(t1, t2) {\n  if (!(t1 && t2)) return;\n  t1 = t1.match(TIME);\n  t2 = t2.match(TIME);\n  if (!(t1 && t2)) return;\n  t1 = t1[1] + t1[2] + t1[3] + (t1[4]||'');\n  t2 = t2[1] + t2[2] + t2[3] + (t2[4]||'');\n  if (t1 > t2) return 1;\n  if (t1 < t2) return -1;\n  if (t1 === t2) return 0;\n}\n\n\nfunction compareDateTime(dt1, dt2) {\n  if (!(dt1 && dt2)) return;\n  dt1 = dt1.split(DATE_TIME_SEPARATOR);\n  dt2 = dt2.split(DATE_TIME_SEPARATOR);\n  var res = compareDate(dt1[0], dt2[0]);\n  if (res === undefined) return;\n  return res || compareTime(dt1[1], dt2[1]);\n}\n"]}