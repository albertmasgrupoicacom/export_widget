{"version":3,"sources":["_arrayReduceRight.js"],"names":["arrayReduceRight","array","iteratee","accumulator","initAccum","length","module","exports"],"mappings":";;;;AAAA;;;;;;;;;;;;AAYA,aAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,WAA3C,EAAwDC,SAAxD,EAAmE;AACjE,UAAIC,SAASJ,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMI,MAAvC;AACA,UAAID,aAAaC,MAAjB,EAAyB;AACvBF,sBAAcF,MAAM,EAAEI,MAAR,CAAd;AACD;AACD,aAAOA,QAAP,EAAiB;AACfF,sBAAcD,SAASC,WAAT,EAAsBF,MAAMI,MAAN,CAAtB,EAAqCA,MAArC,EAA6CJ,KAA7C,CAAd;AACD;AACD,aAAOE,WAAP;AACD;;AAEDG,WAAOC,OAAP,GAAiBP,gBAAjB","file":"_arrayReduceRight.js","sourcesContent":["/**\n * A specialized version of `_.reduceRight` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the last element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduceRight(array, iteratee, accumulator, initAccum) {\n  var length = array == null ? 0 : array.length;\n  if (initAccum && length) {\n    accumulator = array[--length];\n  }\n  while (length--) {\n    accumulator = iteratee(accumulator, array[length], length, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduceRight;\n"]}