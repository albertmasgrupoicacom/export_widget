{"version":3,"sources":["unionBy.js"],"names":["baseFlatten","require","baseIteratee","baseRest","baseUniq","isArrayLikeObject","last","unionBy","arrays","iteratee","undefined","module","exports"],"mappings":";;;;AAAA,QAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,QACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,QAEIE,WAAWF,QAAQ,aAAR,CAFf;AAAA,QAGIG,WAAWH,QAAQ,aAAR,CAHf;AAAA,QAIII,oBAAoBJ,QAAQ,qBAAR,CAJxB;AAAA,QAKIK,OAAOL,QAAQ,QAAR,CALX;;AAOA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,QAAIM,UAAUJ,SAAS,UAASK,MAAT,EAAiB;AACtC,UAAIC,WAAWH,KAAKE,MAAL,CAAf;AACA,UAAIH,kBAAkBI,QAAlB,CAAJ,EAAiC;AAC/BA,mBAAWC,SAAX;AACD;AACD,aAAON,SAASJ,YAAYQ,MAAZ,EAAoB,CAApB,EAAuBH,iBAAvB,EAA0C,IAA1C,CAAT,EAA0DH,aAAaO,QAAb,EAAuB,CAAvB,CAA1D,CAAP;AACD,KANa,CAAd;;AAQAE,WAAOC,OAAP,GAAiBL,OAAjB","file":"unionBy.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. Result values are chosen from the first\n * array in which the value occurs. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nvar unionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));\n});\n\nmodule.exports = unionBy;\n"]}