{"version":3,"sources":["_assignValue.js"],"names":["baseAssignValue","require","eq","objectProto","Object","prototype","hasOwnProperty","assignValue","object","key","value","objValue","call","undefined","module","exports"],"mappings":";;;;AAAA,QAAIA,kBAAkBC,QAAQ,oBAAR,CAAtB;AAAA,QACIC,KAAKD,QAAQ,MAAR,CADT;;AAGA;AACA,QAAIE,cAAcC,OAAOC,SAAzB;;AAEA;AACA,QAAIC,iBAAiBH,YAAYG,cAAjC;;AAEA;;;;;;;;;;AAUA,aAASC,WAAT,CAAqBC,MAArB,EAA6BC,GAA7B,EAAkCC,KAAlC,EAAyC;AACvC,UAAIC,WAAWH,OAAOC,GAAP,CAAf;AACA,UAAI,EAAEH,eAAeM,IAAf,CAAoBJ,MAApB,EAA4BC,GAA5B,KAAoCP,GAAGS,QAAH,EAAaD,KAAb,CAAtC,KACCA,UAAUG,SAAV,IAAuB,EAAEJ,OAAOD,MAAT,CAD5B,EAC+C;AAC7CR,wBAAgBQ,MAAhB,EAAwBC,GAAxB,EAA6BC,KAA7B;AACD;AACF;;AAEDI,WAAOC,OAAP,GAAiBR,WAAjB","file":"_assignValue.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n"]}