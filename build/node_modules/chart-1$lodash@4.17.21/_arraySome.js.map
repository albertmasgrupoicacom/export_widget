{"version":3,"sources":["_arraySome.js"],"names":["arraySome","array","predicate","index","length","module","exports"],"mappings":";;;;AAAA;;;;;;;;;;AAUA,aAASA,SAAT,CAAmBC,KAAnB,EAA0BC,SAA1B,EAAqC;AACnC,UAAIC,QAAQ,CAAC,CAAb;AAAA,UACIC,SAASH,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMG,MADvC;;AAGA,aAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAIF,UAAUD,MAAME,KAAN,CAAV,EAAwBA,KAAxB,EAA+BF,KAA/B,CAAJ,EAA2C;AACzC,iBAAO,IAAP;AACD;AACF;AACD,aAAO,KAAP;AACD;;AAEDI,WAAOC,OAAP,GAAiBN,SAAjB","file":"_arraySome.js","sourcesContent":["/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n"]}