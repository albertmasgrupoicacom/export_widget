{"version":3,"sources":["concat.js"],"names":["arrayPush","require","baseFlatten","copyArray","isArray","concat","length","arguments","args","Array","array","index","module","exports"],"mappings":";;;;AAAA,QAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,QACIC,cAAcD,QAAQ,gBAAR,CADlB;AAAA,QAEIE,YAAYF,QAAQ,cAAR,CAFhB;AAAA,QAGIG,UAAUH,QAAQ,WAAR,CAHd;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAsBA,aAASI,MAAT,GAAkB;AAChB,UAAIC,SAASC,UAAUD,MAAvB;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAO,EAAP;AACD;AACD,UAAIE,OAAOC,MAAMH,SAAS,CAAf,CAAX;AAAA,UACII,QAAQH,UAAU,CAAV,CADZ;AAAA,UAEII,QAAQL,MAFZ;;AAIA,aAAOK,OAAP,EAAgB;AACdH,aAAKG,QAAQ,CAAb,IAAkBJ,UAAUI,KAAV,CAAlB;AACD;AACD,aAAOX,UAAUI,QAAQM,KAAR,IAAiBP,UAAUO,KAAV,CAAjB,GAAoC,CAACA,KAAD,CAA9C,EAAuDR,YAAYM,IAAZ,EAAkB,CAAlB,CAAvD,CAAP;AACD;;AAEDI,WAAOC,OAAP,GAAiBR,MAAjB","file":"concat.js","sourcesContent":["var arrayPush = require('./_arrayPush'),\n    baseFlatten = require('./_baseFlatten'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray');\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length;\n  if (!length) {\n    return [];\n  }\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nmodule.exports = concat;\n"]}