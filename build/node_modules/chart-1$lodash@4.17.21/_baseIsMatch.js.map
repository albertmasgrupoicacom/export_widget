{"version":3,"sources":["_baseIsMatch.js"],"names":["Stack","require","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","object","source","matchData","customizer","index","length","noCustomizer","Object","data","key","objValue","srcValue","undefined","stack","result","module","exports"],"mappings":";;;;AAAA,QAAIA,QAAQC,QAAQ,UAAR,CAAZ;AAAA,QACIC,cAAcD,QAAQ,gBAAR,CADlB;;AAGA;AACA,QAAIE,uBAAuB,CAA3B;AAAA,QACIC,yBAAyB,CAD7B;;AAGA;;;;;;;;;;AAUA,aAASC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4D;AAC1D,UAAIC,QAAQF,UAAUG,MAAtB;AAAA,UACIA,SAASD,KADb;AAAA,UAEIE,eAAe,CAACH,UAFpB;;AAIA,UAAIH,UAAU,IAAd,EAAoB;AAClB,eAAO,CAACK,MAAR;AACD;AACDL,eAASO,OAAOP,MAAP,CAAT;AACA,aAAOI,OAAP,EAAgB;AACd,YAAII,OAAON,UAAUE,KAAV,CAAX;AACA,YAAKE,gBAAgBE,KAAK,CAAL,CAAjB,GACIA,KAAK,CAAL,MAAYR,OAAOQ,KAAK,CAAL,CAAP,CADhB,GAEI,EAAEA,KAAK,CAAL,KAAWR,MAAb,CAFR,EAGM;AACJ,iBAAO,KAAP;AACD;AACF;AACD,aAAO,EAAEI,KAAF,GAAUC,MAAjB,EAAyB;AACvBG,eAAON,UAAUE,KAAV,CAAP;AACA,YAAIK,MAAMD,KAAK,CAAL,CAAV;AAAA,YACIE,WAAWV,OAAOS,GAAP,CADf;AAAA,YAEIE,WAAWH,KAAK,CAAL,CAFf;;AAIA,YAAIF,gBAAgBE,KAAK,CAAL,CAApB,EAA6B;AAC3B,cAAIE,aAAaE,SAAb,IAA0B,EAAEH,OAAOT,MAAT,CAA9B,EAAgD;AAC9C,mBAAO,KAAP;AACD;AACF,SAJD,MAIO;AACL,cAAIa,QAAQ,IAAInB,KAAJ,EAAZ;AACA,cAAIS,UAAJ,EAAgB;AACd,gBAAIW,SAASX,WAAWO,QAAX,EAAqBC,QAArB,EAA+BF,GAA/B,EAAoCT,MAApC,EAA4CC,MAA5C,EAAoDY,KAApD,CAAb;AACD;AACD,cAAI,EAAEC,WAAWF,SAAX,GACEhB,YAAYe,QAAZ,EAAsBD,QAAtB,EAAgCb,uBAAuBC,sBAAvD,EAA+EK,UAA/E,EAA2FU,KAA3F,CADF,GAEEC,MAFJ,CAAJ,EAGO;AACL,mBAAO,KAAP;AACD;AACF;AACF;AACD,aAAO,IAAP;AACD;;AAEDC,WAAOC,OAAP,GAAiBjB,WAAjB","file":"_baseIsMatch.js","sourcesContent":["var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n"]}