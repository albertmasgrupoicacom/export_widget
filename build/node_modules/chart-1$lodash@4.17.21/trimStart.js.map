{"version":3,"sources":["trimStart.js"],"names":["baseToString","require","castSlice","charsStartIndex","stringToArray","toString","reTrimStart","trimStart","string","chars","guard","undefined","replace","strSymbols","start","join","module","exports"],"mappings":";;;;AAAA,QAAIA,eAAeC,QAAQ,iBAAR,CAAnB;AAAA,QACIC,YAAYD,QAAQ,cAAR,CADhB;AAAA,QAEIE,kBAAkBF,QAAQ,oBAAR,CAFtB;AAAA,QAGIG,gBAAgBH,QAAQ,kBAAR,CAHpB;AAAA,QAIII,WAAWJ,QAAQ,YAAR,CAJf;;AAMA;AACA,QAAIK,cAAc,MAAlB;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,aAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AACvCF,eAASH,SAASG,MAAT,CAAT;AACA,UAAIA,WAAWE,SAASD,UAAUE,SAA9B,CAAJ,EAA8C;AAC5C,eAAOH,OAAOI,OAAP,CAAeN,WAAf,EAA4B,EAA5B,CAAP;AACD;AACD,UAAI,CAACE,MAAD,IAAW,EAAEC,QAAQT,aAAaS,KAAb,CAAV,CAAf,EAA+C;AAC7C,eAAOD,MAAP;AACD;AACD,UAAIK,aAAaT,cAAcI,MAAd,CAAjB;AAAA,UACIM,QAAQX,gBAAgBU,UAAhB,EAA4BT,cAAcK,KAAd,CAA5B,CADZ;;AAGA,aAAOP,UAAUW,UAAV,EAAsBC,KAAtB,EAA6BC,IAA7B,CAAkC,EAAlC,CAAP;AACD;;AAEDC,WAAOC,OAAP,GAAiBV,SAAjB","file":"trimStart.js","sourcesContent":["var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"]}