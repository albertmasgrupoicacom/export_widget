Liferay.Loader.define('chart-1$lodash@4.17.21/flatMap', ['module', 'exports', 'require', './_baseFlatten', './map'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    var baseFlatten = require('./_baseFlatten'),
        map = require('./map');

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    module.exports = flatMap;
  }
});
//# sourceMappingURL=flatMap.js.map