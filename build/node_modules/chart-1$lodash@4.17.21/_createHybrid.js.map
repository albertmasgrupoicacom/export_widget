{"version":3,"sources":["_createHybrid.js"],"names":["composeArgs","require","composeArgsRight","countHolders","createCtor","createRecurry","getHolder","reorder","replaceHolders","root","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_FLIP_FLAG","createHybrid","func","bitmask","thisArg","partials","holders","partialsRight","holdersRight","argPos","ary","arity","isBindKey","isCurried","Ctor","undefined","wrapper","length","arguments","args","Array","index","placeholder","holdersCount","newHolders","thisBinding","fn","reverse","apply","module","exports"],"mappings":";;;;AAAA,QAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,QACIC,mBAAmBD,QAAQ,qBAAR,CADvB;AAAA,QAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,QAGIG,aAAaH,QAAQ,eAAR,CAHjB;AAAA,QAIII,gBAAgBJ,QAAQ,kBAAR,CAJpB;AAAA,QAKIK,YAAYL,QAAQ,cAAR,CALhB;AAAA,QAMIM,UAAUN,QAAQ,YAAR,CANd;AAAA,QAOIO,iBAAiBP,QAAQ,mBAAR,CAPrB;AAAA,QAQIQ,OAAOR,QAAQ,SAAR,CARX;;AAUA;AACA,QAAIS,iBAAiB,CAArB;AAAA,QACIC,qBAAqB,CADzB;AAAA,QAEIC,kBAAkB,CAFtB;AAAA,QAGIC,wBAAwB,EAH5B;AAAA,QAIIC,gBAAgB,GAJpB;AAAA,QAKIC,iBAAiB,GALrB;;AAOA;;;;;;;;;;;;;;;;;;;AAmBA,aAASC,YAAT,CAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8CC,QAA9C,EAAwDC,OAAxD,EAAiEC,aAAjE,EAAgFC,YAAhF,EAA8FC,MAA9F,EAAsGC,GAAtG,EAA2GC,KAA3G,EAAkH;AAChH,UAEIC,YAAYT,UAAUP,kBAF1B;AAAA,UAGIiB,YAAYV,WAAWN,kBAAkBC,qBAA7B,CAHhB;AAAA,UAKIgB,OAAOF,YAAYG,SAAZ,GAAwB1B,WAAWa,IAAX,CALnC;;AAOA,eAASc,OAAT,GAAmB;AACjB,YAAIC,SAASC,UAAUD,MAAvB;AAAA,YACIE,OAAOC,MAAMH,MAAN,CADX;AAAA,YAEII,QAAQJ,MAFZ;;AAIA,eAAOI,OAAP,EAAgB;AACdF,eAAKE,KAAL,IAAcH,UAAUG,KAAV,CAAd;AACD;AACD,YAAIR,SAAJ,EAAe;AACb,cAAIS,cAAc/B,UAAUyB,OAAV,CAAlB;AAAA,cACIO,eAAenC,aAAa+B,IAAb,EAAmBG,WAAnB,CADnB;AAED;AACD,YAAIjB,QAAJ,EAAc;AACZc,iBAAOlC,YAAYkC,IAAZ,EAAkBd,QAAlB,EAA4BC,OAA5B,EAAqCO,SAArC,CAAP;AACD;AACD,YAAIN,aAAJ,EAAmB;AACjBY,iBAAOhC,iBAAiBgC,IAAjB,EAAuBZ,aAAvB,EAAsCC,YAAtC,EAAoDK,SAApD,CAAP;AACD;AACDI,kBAAUM,YAAV;AACA,YAAIV,aAAaI,SAASN,KAA1B,EAAiC;AAC/B,cAAIa,aAAa/B,eAAe0B,IAAf,EAAqBG,WAArB,CAAjB;AACA,iBAAOhC,cACLY,IADK,EACCC,OADD,EACUF,YADV,EACwBe,QAAQM,WADhC,EAC6ClB,OAD7C,EAELe,IAFK,EAECK,UAFD,EAEaf,MAFb,EAEqBC,GAFrB,EAE0BC,QAAQM,MAFlC,CAAP;AAID;AACD,YAAIQ,cAhCOtB,UAAUR,cAgCH,GAASS,OAAT,GAAmB,IAArC;AAAA,YACIsB,KAAKd,YAAYa,YAAYvB,IAAZ,CAAZ,GAAgCA,IADzC;;AAGAe,iBAASE,KAAKF,MAAd;AACA,YAAIR,MAAJ,EAAY;AACVU,iBAAO3B,QAAQ2B,IAAR,EAAcV,MAAd,CAAP;AACD,SAFD,MAEO,IAnCIN,UAAUH,cAmCV,IAAUiB,SAAS,CAAvB,EAA0B;AAC/BE,eAAKQ,OAAL;AACD;AACD,YA1CUxB,UAAUJ,aA0ChB,IAASW,MAAMO,MAAnB,EAA2B;AACzBE,eAAKF,MAAL,GAAcP,GAAd;AACD;AACD,YAAI,QAAQ,SAAShB,IAAjB,IAAyB,gBAAgBsB,OAA7C,EAAsD;AACpDU,eAAKZ,QAAQzB,WAAWqC,EAAX,CAAb;AACD;AACD,eAAOA,GAAGE,KAAH,CAASH,WAAT,EAAsBN,IAAtB,CAAP;AACD;AACD,aAAOH,OAAP;AACD;;AAEDa,WAAOC,OAAP,GAAiB7B,YAAjB","file":"_createHybrid.js","sourcesContent":["var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n"]}