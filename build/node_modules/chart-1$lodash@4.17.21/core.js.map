{"version":3,"sources":["core.js"],"names":["undefined","FUNC_ERROR_TEXT","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","MAX_SAFE_INTEGER","argsTag","arrayTag","boolTag","dateTag","numberTag","objectTag","regexpTag","stringTag","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","reIsUint","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","arrayPush","array","values","push","apply","baseFindIndex","predicate","fromIndex","fromRight","length","index","baseProperty","key","object","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","value","baseValues","props","baseMap","escapeHtmlChar","basePropertyOf","arrayProto","Array","prototype","objectProto","hasOwnProperty","idCounter","nativeObjectToString","toString","oldDash","_","objectCreate","create","propertyIsEnumerable","nativeIsFinite","isFinite","nativeKeys","overArg","func","transform","arg","keys","nativeMax","Math","max","lodash","LodashWrapper","baseCreate","proto","isObject","result","chainAll","__wrapped__","__actions__","__chain__","constructor","assignValue","objValue","call","eq","baseAssignValue","baseDelay","wait","args","TypeError","setTimeout","baseEach","createBaseEach","isArrayLike","iterable","baseForOwn","baseEvery","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","keysFunc","baseFunctions","isFunction","baseGetTag","objectToString","baseGt","other","baseIsArguments","noop","baseIsEqual","bitmask","customizer","stack","isObjectLike","baseIsEqualDeep","equalFunc","objIsArr","isArray","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objStack","find","entry","othStack","equalArrays","equalByTag","pop","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIteratee","identity","baseMatches","baseLt","basePick","reduce","baseRest","start","setToString","overRest","baseSlice","end","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","copyObject","isNew","newValue","createAssigner","assigner","sources","createCtor","Ctor","arguments","thisBinding","createPartial","partials","wrapper","argsIndex","argsLength","leftIndex","leftLength","fn","arrLength","othLength","arrStacked","get","othStacked","seen","arrValue","othValue","compared","othIndex","indexOf","tag","name","message","isPartial","objProps","objLength","othProps","objStacked","skipCtor","objCtor","othCtor","isArguments","isIndex","type","test","isIterateeCall","nativeKeysIn","otherArgs","flatten","head","createFind","findIndexFunc","findIndex","toInteger","forEach","before","n","bind","defer","delay","toNumber","isLength","isNumber","isString","Number","assign","assignIn","defaults","guard","keysIn","propsIndex","propsLength","pick","flatRest","paths","mixin","options","methodNames","chain","isFunc","methodName","uniqueId","prefix","id","compact","Boolean","concat","properties","filter","flattenDeep","map","matches","negate","once","slice","sortBy","sort","criteria","tap","interceptor","thru","toArray","extend","clone","escape","string","replace","every","has","path","isBoolean","isDate","baseIsDate","isEmpty","splice","isEqual","isNaN","isNull","isRegExp","baseIsRegExp","isUndefined","last","min","noConflict","defaultValue","size","some","each","first","VERSION","String","chainName","retUnwrapped","toJSON","valueOf","wrapperValue","define","amd"],"mappings":"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","file":"core.js","sourcesContent":["/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n      return arrStacked == other && othStacked == array;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n      return objStacked == other && othStacked == object;\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   *\n   * // Combining several predicates using `_.overEvery` or `_.overSome`.\n   * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n   * // => objects for ['fred', 'barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 30 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * **Note:** Multiple values can be checked by combining several matchers\n   * using `_.overSome`\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   *\n   * // Checking for several possible values\n   * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n   * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n"]}