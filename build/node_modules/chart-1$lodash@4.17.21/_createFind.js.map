{"version":3,"sources":["_createFind.js"],"names":["baseIteratee","require","isArrayLike","keys","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","Object","iteratee","key","index","undefined","module","exports"],"mappings":";;;;AAAA,QAAIA,eAAeC,QAAQ,iBAAR,CAAnB;AAAA,QACIC,cAAcD,QAAQ,eAAR,CADlB;AAAA,QAEIE,OAAOF,QAAQ,QAAR,CAFX;;AAIA;;;;;;;AAOA,aAASG,UAAT,CAAoBC,aAApB,EAAmC;AACjC,aAAO,UAASC,UAAT,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2C;AAChD,YAAIC,WAAWC,OAAOJ,UAAP,CAAf;AACA,YAAI,CAACJ,YAAYI,UAAZ,CAAL,EAA8B;AAC5B,cAAIK,WAAWX,aAAaO,SAAb,EAAwB,CAAxB,CAAf;AACAD,uBAAaH,KAAKG,UAAL,CAAb;AACAC,sBAAY,UAASK,GAAT,EAAc;AAAE,mBAAOD,SAASF,SAASG,GAAT,CAAT,EAAwBA,GAAxB,EAA6BH,QAA7B,CAAP;AAAgD,WAA5E;AACD;AACD,YAAII,QAAQR,cAAcC,UAAd,EAA0BC,SAA1B,EAAqCC,SAArC,CAAZ;AACA,eAAOK,QAAQ,CAAC,CAAT,GAAaJ,SAASE,WAAWL,WAAWO,KAAX,CAAX,GAA+BA,KAAxC,CAAb,GAA8DC,SAArE;AACD,OATD;AAUD;;AAEDC,WAAOC,OAAP,GAAiBZ,UAAjB","file":"_createFind.js","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n"]}