{"version":3,"sources":["invert.js"],"names":["constant","require","createInverter","identity","objectProto","Object","prototype","nativeObjectToString","toString","invert","result","value","key","call","module","exports"],"mappings":";;;;AAAA,QAAIA,WAAWC,QAAQ,YAAR,CAAf;AAAA,QACIC,iBAAiBD,QAAQ,mBAAR,CADrB;AAAA,QAEIE,WAAWF,QAAQ,YAAR,CAFf;;AAIA;AACA,QAAIG,cAAcC,OAAOC,SAAzB;;AAEA;;;;;AAKA,QAAIC,uBAAuBH,YAAYI,QAAvC;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,QAAIC,SAASP,eAAe,UAASQ,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AACvD,UAAID,SAAS,IAAT,IACA,OAAOA,MAAMH,QAAb,IAAyB,UAD7B,EACyC;AACvCG,gBAAQJ,qBAAqBM,IAArB,CAA0BF,KAA1B,CAAR;AACD;;AAEDD,aAAOC,KAAP,IAAgBC,GAAhB;AACD,KAPY,EAOVZ,SAASG,QAAT,CAPU,CAAb;;AASAW,WAAOC,OAAP,GAAiBN,MAAjB","file":"invert.js","sourcesContent":["var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n"]}