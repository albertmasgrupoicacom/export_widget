{"version":3,"sources":["_charsEndIndex.js"],"names":["baseIndexOf","require","charsEndIndex","strSymbols","chrSymbols","index","length","module","exports"],"mappings":";;;;AAAA,QAAIA,cAAcC,QAAQ,gBAAR,CAAlB;;AAEA;;;;;;;;;AASA,aAASC,aAAT,CAAuBC,UAAvB,EAAmCC,UAAnC,EAA+C;AAC7C,UAAIC,QAAQF,WAAWG,MAAvB;;AAEA,aAAOD,WAAWL,YAAYI,UAAZ,EAAwBD,WAAWE,KAAX,CAAxB,EAA2C,CAA3C,IAAgD,CAAC,CAAnE,EAAsE,CAAE;AACxE,aAAOA,KAAP;AACD;;AAEDE,WAAOC,OAAP,GAAiBN,aAAjB","file":"_charsEndIndex.js","sourcesContent":["var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsEndIndex;\n"]}