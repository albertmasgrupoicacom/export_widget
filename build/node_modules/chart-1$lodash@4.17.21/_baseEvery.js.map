{"version":3,"sources":["_baseEvery.js"],"names":["baseEach","require","baseEvery","collection","predicate","result","value","index","module","exports"],"mappings":";;;;AAAA,QAAIA,WAAWC,QAAQ,aAAR,CAAf;;AAEA;;;;;;;;;AASA,aAASC,SAAT,CAAmBC,UAAnB,EAA+BC,SAA/B,EAA0C;AACxC,UAAIC,SAAS,IAAb;AACAL,eAASG,UAAT,EAAqB,UAASG,KAAT,EAAgBC,KAAhB,EAAuBJ,UAAvB,EAAmC;AACtDE,iBAAS,CAAC,CAACD,UAAUE,KAAV,EAAiBC,KAAjB,EAAwBJ,UAAxB,CAAX;AACA,eAAOE,MAAP;AACD,OAHD;AAIA,aAAOA,MAAP;AACD;;AAEDG,WAAOC,OAAP,GAAiBP,SAAjB","file":"_baseEvery.js","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;\n"]}