{"version":3,"sources":["_baseRange.js"],"names":["nativeCeil","Math","ceil","nativeMax","max","baseRange","start","end","step","fromRight","index","length","result","Array","module","exports"],"mappings":";;;;AAAA;AACA,QAAIA,aAAaC,KAAKC,IAAtB;AAAA,QACIC,YAAYF,KAAKG,GADrB;;AAGA;;;;;;;;;;;AAWA,aAASC,SAAT,CAAmBC,KAAnB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,SAArC,EAAgD;AAC9C,UAAIC,QAAQ,CAAC,CAAb;AAAA,UACIC,SAASR,UAAUH,WAAW,CAACO,MAAMD,KAAP,KAAiBE,QAAQ,CAAzB,CAAX,CAAV,EAAmD,CAAnD,CADb;AAAA,UAEII,SAASC,MAAMF,MAAN,CAFb;;AAIA,aAAOA,QAAP,EAAiB;AACfC,eAAOH,YAAYE,MAAZ,GAAqB,EAAED,KAA9B,IAAuCJ,KAAvC;AACAA,iBAASE,IAAT;AACD;AACD,aAAOI,MAAP;AACD;;AAEDE,WAAOC,OAAP,GAAiBV,SAAjB","file":"_baseRange.js","sourcesContent":["/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n"]}