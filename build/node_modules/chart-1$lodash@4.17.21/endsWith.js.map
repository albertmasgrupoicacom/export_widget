{"version":3,"sources":["endsWith.js"],"names":["baseClamp","require","baseToString","toInteger","toString","endsWith","string","target","position","length","undefined","end","slice","module","exports"],"mappings":";;;;AAAA,QAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,QACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,QAEIE,YAAYF,QAAQ,aAAR,CAFhB;AAAA,QAGIG,WAAWH,QAAQ,YAAR,CAHf;;AAKA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,aAASI,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4C;AAC1CF,eAASF,SAASE,MAAT,CAAT;AACAC,eAASL,aAAaK,MAAb,CAAT;;AAEA,UAAIE,SAASH,OAAOG,MAApB;AACAD,iBAAWA,aAAaE,SAAb,GACPD,MADO,GAEPT,UAAUG,UAAUK,QAAV,CAAV,EAA+B,CAA/B,EAAkCC,MAAlC,CAFJ;;AAIA,UAAIE,MAAMH,QAAV;AACAA,kBAAYD,OAAOE,MAAnB;AACA,aAAOD,YAAY,CAAZ,IAAiBF,OAAOM,KAAP,CAAaJ,QAAb,EAAuBG,GAAvB,KAA+BJ,MAAvD;AACD;;AAEDM,WAAOC,OAAP,GAAiBT,QAAjB","file":"endsWith.js","sourcesContent":["var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nmodule.exports = endsWith;\n"]}