{"version":3,"sources":["toIterator.js"],"names":["wrapperToIterator","module","exports"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;AAkBA,aAASA,iBAAT,GAA6B;AAC3B,aAAO,IAAP;AACD;;AAEDC,WAAOC,OAAP,GAAiBF,iBAAjB","file":"toIterator.js","sourcesContent":["/**\n * Enables the wrapper to be iterable.\n *\n * @name Symbol.iterator\n * @memberOf _\n * @since 4.0.0\n * @category Seq\n * @returns {Object} Returns the wrapper object.\n * @example\n *\n * var wrapped = _([1, 2]);\n *\n * wrapped[Symbol.iterator]() === wrapped;\n * // => true\n *\n * Array.from(wrapped);\n * // => [1, 2]\n */\nfunction wrapperToIterator() {\n  return this;\n}\n\nmodule.exports = wrapperToIterator;\n"]}