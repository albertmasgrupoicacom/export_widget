{"version":3,"sources":["startsWith.js"],"names":["baseClamp","require","baseToString","toInteger","toString","startsWith","string","target","position","length","slice","module","exports"],"mappings":";;;;AAAA,QAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,QACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,QAEIE,YAAYF,QAAQ,aAAR,CAFhB;AAAA,QAGIG,WAAWH,QAAQ,YAAR,CAHf;;AAKA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,aAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAC5CF,eAASF,SAASE,MAAT,CAAT;AACAE,iBAAWA,YAAY,IAAZ,GACP,CADO,GAEPR,UAAUG,UAAUK,QAAV,CAAV,EAA+B,CAA/B,EAAkCF,OAAOG,MAAzC,CAFJ;;AAIAF,eAASL,aAAaK,MAAb,CAAT;AACA,aAAOD,OAAOI,KAAP,CAAaF,QAAb,EAAuBA,WAAWD,OAAOE,MAAzC,KAAoDF,MAA3D;AACD;;AAEDI,WAAOC,OAAP,GAAiBP,UAAjB","file":"startsWith.js","sourcesContent":["var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null\n    ? 0\n    : baseClamp(toInteger(position), 0, string.length);\n\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nmodule.exports = startsWith;\n"]}