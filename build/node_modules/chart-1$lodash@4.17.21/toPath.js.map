{"version":3,"sources":["toPath.js"],"names":["arrayMap","require","copyArray","isArray","isSymbol","stringToPath","toKey","toString","toPath","value","module","exports"],"mappings":";;;;AAAA,QAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,QACIC,YAAYD,QAAQ,cAAR,CADhB;AAAA,QAEIE,UAAUF,QAAQ,WAAR,CAFd;AAAA,QAGIG,WAAWH,QAAQ,YAAR,CAHf;AAAA,QAIII,eAAeJ,QAAQ,iBAAR,CAJnB;AAAA,QAKIK,QAAQL,QAAQ,UAAR,CALZ;AAAA,QAMIM,WAAWN,QAAQ,YAAR,CANf;;AAQA;;;;;;;;;;;;;;;;;AAiBA,aAASO,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,UAAIN,QAAQM,KAAR,CAAJ,EAAoB;AAClB,eAAOT,SAASS,KAAT,EAAgBH,KAAhB,CAAP;AACD;AACD,aAAOF,SAASK,KAAT,IAAkB,CAACA,KAAD,CAAlB,GAA4BP,UAAUG,aAAaE,SAASE,KAAT,CAAb,CAAV,CAAnC;AACD;;AAEDC,WAAOC,OAAP,GAAiBH,MAAjB","file":"toPath.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n"]}