{"version":3,"sources":["_cloneTypedArray.js"],"names":["cloneArrayBuffer","require","cloneTypedArray","typedArray","isDeep","buffer","constructor","byteOffset","length","module","exports"],"mappings":";;;;AAAA,QAAIA,mBAAmBC,QAAQ,qBAAR,CAAvB;;AAEA;;;;;;;;AAQA,aAASC,eAAT,CAAyBC,UAAzB,EAAqCC,MAArC,EAA6C;AAC3C,UAAIC,SAASD,SAASJ,iBAAiBG,WAAWE,MAA5B,CAAT,GAA+CF,WAAWE,MAAvE;AACA,aAAO,IAAIF,WAAWG,WAAf,CAA2BD,MAA3B,EAAmCF,WAAWI,UAA9C,EAA0DJ,WAAWK,MAArE,CAAP;AACD;;AAEDC,WAAOC,OAAP,GAAiBR,eAAjB","file":"_cloneTypedArray.js","sourcesContent":["var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n"]}