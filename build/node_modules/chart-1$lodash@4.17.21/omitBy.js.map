{"version":3,"sources":["omitBy.js"],"names":["baseIteratee","require","negate","pickBy","omitBy","object","predicate","module","exports"],"mappings":";;;;AAAA,QAAIA,eAAeC,QAAQ,iBAAR,CAAnB;AAAA,QACIC,SAASD,QAAQ,UAAR,CADb;AAAA,QAEIE,SAASF,QAAQ,UAAR,CAFb;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,aAASG,MAAT,CAAgBC,MAAhB,EAAwBC,SAAxB,EAAmC;AACjC,aAAOH,OAAOE,MAAP,EAAeH,OAAOF,aAAaM,SAAb,CAAP,CAAf,CAAP;AACD;;AAEDC,WAAOC,OAAP,GAAiBJ,MAAjB","file":"omitBy.js","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"]}