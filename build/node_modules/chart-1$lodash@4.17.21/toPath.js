Liferay.Loader.define('chart-1$lodash@4.17.21/toPath', ['module', 'exports', 'require', './_arrayMap', './_copyArray', './isArray', './isSymbol', './_stringToPath', './_toKey', './toString'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    var arrayMap = require('./_arrayMap'),
        copyArray = require('./_copyArray'),
        isArray = require('./isArray'),
        isSymbol = require('./isSymbol'),
        stringToPath = require('./_stringToPath'),
        toKey = require('./_toKey'),
        toString = require('./toString');

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    module.exports = toPath;
  }
});
//# sourceMappingURL=toPath.js.map