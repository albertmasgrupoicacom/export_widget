{"version":3,"sources":["_baseWrapperValue.js"],"names":["LazyWrapper","require","arrayPush","arrayReduce","baseWrapperValue","value","actions","result","action","func","apply","thisArg","args","module","exports"],"mappings":";;;;AAAA,QAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,QACIC,YAAYD,QAAQ,cAAR,CADhB;AAAA,QAEIE,cAAcF,QAAQ,gBAAR,CAFlB;;AAIA;;;;;;;;;;AAUA,aAASG,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AACxC,UAAIC,SAASF,KAAb;AACA,UAAIE,kBAAkBP,WAAtB,EAAmC;AACjCO,iBAASA,OAAOF,KAAP,EAAT;AACD;AACD,aAAOF,YAAYG,OAAZ,EAAqB,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACnD,eAAOA,OAAOC,IAAP,CAAYC,KAAZ,CAAkBF,OAAOG,OAAzB,EAAkCT,UAAU,CAACK,MAAD,CAAV,EAAoBC,OAAOI,IAA3B,CAAlC,CAAP;AACD,OAFM,EAEJL,MAFI,CAAP;AAGD;;AAEDM,WAAOC,OAAP,GAAiBV,gBAAjB","file":"_baseWrapperValue.js","sourcesContent":["var LazyWrapper = require('./_LazyWrapper'),\n    arrayPush = require('./_arrayPush'),\n    arrayReduce = require('./_arrayReduce');\n\n/**\n * The base implementation of `wrapperValue` which returns the result of\n * performing a sequence of actions on the unwrapped `value`, where each\n * successive action is supplied the return value of the previous.\n *\n * @private\n * @param {*} value The unwrapped value.\n * @param {Array} actions Actions to perform to resolve the unwrapped value.\n * @returns {*} Returns the resolved value.\n */\nfunction baseWrapperValue(value, actions) {\n  var result = value;\n  if (result instanceof LazyWrapper) {\n    result = result.value();\n  }\n  return arrayReduce(actions, function(result, action) {\n    return action.func.apply(action.thisArg, arrayPush([result], action.args));\n  }, result);\n}\n\nmodule.exports = baseWrapperValue;\n"]}