{"version":3,"sources":["_createFlow.js"],"names":["LodashWrapper","require","flatRest","getData","getFuncName","isArray","isLaziable","FUNC_ERROR_TEXT","WRAP_CURRY_FLAG","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","createFlow","fromRight","funcs","length","index","prereq","prototype","thru","reverse","func","TypeError","wrapper","funcName","data","undefined","apply","args","arguments","value","plant","result","call","module","exports"],"mappings":";;;;AAAA,QAAIA,gBAAgBC,QAAQ,kBAAR,CAApB;AAAA,QACIC,WAAWD,QAAQ,aAAR,CADf;AAAA,QAEIE,UAAUF,QAAQ,YAAR,CAFd;AAAA,QAGIG,cAAcH,QAAQ,gBAAR,CAHlB;AAAA,QAIII,UAAUJ,QAAQ,WAAR,CAJd;AAAA,QAKIK,aAAaL,QAAQ,eAAR,CALjB;;AAOA;AACA,QAAIM,kBAAkB,qBAAtB;;AAEA;AACA,QAAIC,kBAAkB,CAAtB;AAAA,QACIC,oBAAoB,EADxB;AAAA,QAEIC,gBAAgB,GAFpB;AAAA,QAGIC,kBAAkB,GAHtB;;AAKA;;;;;;;AAOA,aAASC,UAAT,CAAoBC,SAApB,EAA+B;AAC7B,aAAOX,SAAS,UAASY,KAAT,EAAgB;AAC9B,YAAIC,SAASD,MAAMC,MAAnB;AAAA,YACIC,QAAQD,MADZ;AAAA,YAEIE,SAASjB,cAAckB,SAAd,CAAwBC,IAFrC;;AAIA,YAAIN,SAAJ,EAAe;AACbC,gBAAMM,OAAN;AACD;AACD,eAAOJ,OAAP,EAAgB;AACd,cAAIK,OAAOP,MAAME,KAAN,CAAX;AACA,cAAI,OAAOK,IAAP,IAAe,UAAnB,EAA+B;AAC7B,kBAAM,IAAIC,SAAJ,CAAcf,eAAd,CAAN;AACD;AACD,cAAIU,UAAU,CAACM,OAAX,IAAsBnB,YAAYiB,IAAZ,KAAqB,SAA/C,EAA0D;AACxD,gBAAIE,UAAU,IAAIvB,aAAJ,CAAkB,EAAlB,EAAsB,IAAtB,CAAd;AACD;AACF;AACDgB,gBAAQO,UAAUP,KAAV,GAAkBD,MAA1B;AACA,eAAO,EAAEC,KAAF,GAAUD,MAAjB,EAAyB;AACvBM,iBAAOP,MAAME,KAAN,CAAP;;AAEA,cAAIQ,WAAWpB,YAAYiB,IAAZ,CAAf;AAAA,cACII,OAAOD,YAAY,SAAZ,GAAwBrB,QAAQkB,IAAR,CAAxB,GAAwCK,SADnD;;AAGA,cAAID,QAAQnB,WAAWmB,KAAK,CAAL,CAAX,CAAR,IACEA,KAAK,CAAL,MAAYf,gBAAgBF,eAAhB,GAAkCC,iBAAlC,GAAsDE,eAAlE,CADF,IAEE,CAACc,KAAK,CAAL,EAAQV,MAFX,IAEqBU,KAAK,CAAL,KAAW,CAFpC,EAGM;AACJF,sBAAUA,QAAQnB,YAAYqB,KAAK,CAAL,CAAZ,CAAR,EAA8BE,KAA9B,CAAoCJ,OAApC,EAA6CE,KAAK,CAAL,CAA7C,CAAV;AACD,WALD,MAKO;AACLF,sBAAWF,KAAKN,MAAL,IAAe,CAAf,IAAoBT,WAAWe,IAAX,CAArB,GACNE,QAAQC,QAAR,GADM,GAEND,QAAQJ,IAAR,CAAaE,IAAb,CAFJ;AAGD;AACF;AACD,eAAO,YAAW;AAChB,cAAIO,OAAOC,SAAX;AAAA,cACIC,QAAQF,KAAK,CAAL,CADZ;;AAGA,cAAIL,WAAWK,KAAKb,MAAL,IAAe,CAA1B,IAA+BV,QAAQyB,KAAR,CAAnC,EAAmD;AACjD,mBAAOP,QAAQQ,KAAR,CAAcD,KAAd,EAAqBA,KAArB,EAAP;AACD;AACD,cAAId,QAAQ,CAAZ;AAAA,cACIgB,SAASjB,SAASD,MAAME,KAAN,EAAaW,KAAb,CAAmB,IAAnB,EAAyBC,IAAzB,CAAT,GAA0CE,KADvD;;AAGA,iBAAO,EAAEd,KAAF,GAAUD,MAAjB,EAAyB;AACvBiB,qBAASlB,MAAME,KAAN,EAAaiB,IAAb,CAAkB,IAAlB,EAAwBD,MAAxB,CAAT;AACD;AACD,iBAAOA,MAAP;AACD,SAdD;AAeD,OAlDM,CAAP;AAmDD;;AAEDE,WAAOC,OAAP,GAAiBvB,UAAjB","file":"_createFlow.js","sourcesContent":["var LodashWrapper = require('./_LodashWrapper'),\n    flatRest = require('./_flatRest'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    isArray = require('./isArray'),\n    isLaziable = require('./_isLaziable');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nmodule.exports = createFlow;\n"]}