Liferay.Loader.define('chart-1$lodash@4.17.21/fp/convert', ['module', 'exports', 'require', './_baseConvert', './_util'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    var baseConvert = require('./_baseConvert'),
        util = require('./_util');

    /**
     * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
     * version with conversion `options` applied. If `name` is an object its methods
     * will be converted.
     *
     * @param {string} name The name of the function to wrap.
     * @param {Function} [func] The function to wrap.
     * @param {Object} [options] The options object. See `baseConvert` for more details.
     * @returns {Function|Object} Returns the converted function or object.
     */
    function convert(name, func, options) {
      return baseConvert(util, name, func, options);
    }

    module.exports = convert;
  }
});
//# sourceMappingURL=convert.js.map