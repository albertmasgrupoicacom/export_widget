{"version":3,"sources":["_getRawTag.js"],"names":["Symbol","require","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","getRawTag","value","isOwn","call","tag","unmasked","e","result","module","exports"],"mappings":";;;;AAAA,QAAIA,SAASC,QAAQ,WAAR,CAAb;;AAEA;AACA,QAAIC,cAAcC,OAAOC,SAAzB;;AAEA;AACA,QAAIC,iBAAiBH,YAAYG,cAAjC;;AAEA;;;;;AAKA,QAAIC,uBAAuBJ,YAAYK,QAAvC;;AAEA;AACA,QAAIC,iBAAiBR,SAASA,OAAOS,WAAhB,GAA8BC,SAAnD;;AAEA;;;;;;;AAOA,aAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,UAAIC,QAAQR,eAAeS,IAAf,CAAoBF,KAApB,EAA2BJ,cAA3B,CAAZ;AAAA,UACIO,MAAMH,MAAMJ,cAAN,CADV;;AAGA,UAAI;AACFI,cAAMJ,cAAN,IAAwBE,SAAxB;AACA,YAAIM,WAAW,IAAf;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU,CAAE;;AAEd,UAAIC,SAASZ,qBAAqBQ,IAArB,CAA0BF,KAA1B,CAAb;AACA,UAAII,QAAJ,EAAc;AACZ,YAAIH,KAAJ,EAAW;AACTD,gBAAMJ,cAAN,IAAwBO,GAAxB;AACD,SAFD,MAEO;AACL,iBAAOH,MAAMJ,cAAN,CAAP;AACD;AACF;AACD,aAAOU,MAAP;AACD;;AAEDC,WAAOC,OAAP,GAAiBT,SAAjB","file":"_getRawTag.js","sourcesContent":["var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n"]}