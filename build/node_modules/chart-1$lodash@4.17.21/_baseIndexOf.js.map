{"version":3,"sources":["_baseIndexOf.js"],"names":["baseFindIndex","require","baseIsNaN","strictIndexOf","baseIndexOf","array","value","fromIndex","module","exports"],"mappings":";;;;AAAA,YAAIA,gBAAgBC,QAAQ,kBAAR,CAApB;AAAA,YACIC,YAAYD,QAAQ,cAAR,CADhB;AAAA,YAEIE,gBAAgBF,QAAQ,kBAAR,CAFpB;;AAIA;;;;;;;;;AASA,iBAASG,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8C;AAC5C,mBAAOD,UAAUA,KAAV,GACHH,cAAcE,KAAd,EAAqBC,KAArB,EAA4BC,SAA5B,CADG,GAEHP,cAAcK,KAAd,EAAqBH,SAArB,EAAgCK,SAAhC,CAFJ;AAGD;;AAEDC,eAAOC,OAAP,GAAiBL,WAAjB","file":"_baseIndexOf.js","sourcesContent":["var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n"]}