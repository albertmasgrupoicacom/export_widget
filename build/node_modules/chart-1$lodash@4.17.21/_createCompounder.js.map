{"version":3,"sources":["_createCompounder.js"],"names":["arrayReduce","require","deburr","words","rsApos","reApos","RegExp","createCompounder","callback","string","replace","module","exports"],"mappings":";;;;AAAA,QAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,QACIC,SAASD,QAAQ,UAAR,CADb;AAAA,QAEIE,QAAQF,QAAQ,SAAR,CAFZ;;AAIA;AACA,QAAIG,SAAS,WAAb;;AAEA;AACA,QAAIC,SAASC,OAAOF,MAAP,EAAe,GAAf,CAAb;;AAEA;;;;;;;AAOA,aAASG,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,aAAO,UAASC,MAAT,EAAiB;AACtB,eAAOT,YAAYG,MAAMD,OAAOO,MAAP,EAAeC,OAAf,CAAuBL,MAAvB,EAA+B,EAA/B,CAAN,CAAZ,EAAuDG,QAAvD,EAAiE,EAAjE,CAAP;AACD,OAFD;AAGD;;AAEDG,WAAOC,OAAP,GAAiBL,gBAAjB","file":"_createCompounder.js","sourcesContent":["var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n"]}