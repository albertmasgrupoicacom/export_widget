{"version":3,"sources":["_baseFilter.js"],"names":["baseEach","require","baseFilter","collection","predicate","result","value","index","push","module","exports"],"mappings":";;;;AAAA,QAAIA,WAAWC,QAAQ,aAAR,CAAf;;AAEA;;;;;;;;AAQA,aAASC,UAAT,CAAoBC,UAApB,EAAgCC,SAAhC,EAA2C;AACzC,UAAIC,SAAS,EAAb;AACAL,eAASG,UAAT,EAAqB,UAASG,KAAT,EAAgBC,KAAhB,EAAuBJ,UAAvB,EAAmC;AACtD,YAAIC,UAAUE,KAAV,EAAiBC,KAAjB,EAAwBJ,UAAxB,CAAJ,EAAyC;AACvCE,iBAAOG,IAAP,CAAYF,KAAZ;AACD;AACF,OAJD;AAKA,aAAOD,MAAP;AACD;;AAEDI,WAAOC,OAAP,GAAiBR,UAAjB","file":"_baseFilter.js","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"]}