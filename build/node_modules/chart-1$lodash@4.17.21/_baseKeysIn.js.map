{"version":3,"sources":["_baseKeysIn.js"],"names":["isObject","require","isPrototype","nativeKeysIn","objectProto","Object","prototype","hasOwnProperty","baseKeysIn","object","isProto","result","key","call","push","module","exports"],"mappings":";;;;AAAA,QAAIA,WAAWC,QAAQ,YAAR,CAAf;AAAA,QACIC,cAAcD,QAAQ,gBAAR,CADlB;AAAA,QAEIE,eAAeF,QAAQ,iBAAR,CAFnB;;AAIA;AACA,QAAIG,cAAcC,OAAOC,SAAzB;;AAEA;AACA,QAAIC,iBAAiBH,YAAYG,cAAjC;;AAEA;;;;;;;AAOA,aAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,UAAI,CAACT,SAASS,MAAT,CAAL,EAAuB;AACrB,eAAON,aAAaM,MAAb,CAAP;AACD;AACD,UAAIC,UAAUR,YAAYO,MAAZ,CAAd;AAAA,UACIE,SAAS,EADb;;AAGA,WAAK,IAAIC,GAAT,IAAgBH,MAAhB,EAAwB;AACtB,YAAI,EAAEG,OAAO,aAAP,KAAyBF,WAAW,CAACH,eAAeM,IAAf,CAAoBJ,MAApB,EAA4BG,GAA5B,CAArC,CAAF,CAAJ,EAA+E;AAC7ED,iBAAOG,IAAP,CAAYF,GAAZ;AACD;AACF;AACD,aAAOD,MAAP;AACD;;AAEDI,WAAOC,OAAP,GAAiBR,UAAjB","file":"_baseKeysIn.js","sourcesContent":["var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n"]}