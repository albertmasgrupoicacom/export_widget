{"version":3,"sources":["isString.js"],"names":["baseGetTag","require","isArray","isObjectLike","stringTag","isString","value","module","exports"],"mappings":";;;;AAAA,YAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,YACIC,UAAUD,QAAQ,WAAR,CADd;AAAA,YAEIE,eAAeF,QAAQ,gBAAR,CAFnB;;AAIA;AACA,YAAIG,YAAY,iBAAhB;;AAEA;;;;;;;;;;;;;;;;;AAiBA,iBAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,mBAAO,OAAOA,KAAP,IAAgB,QAAhB,IACJ,CAACJ,QAAQI,KAAR,CAAD,IAAmBH,aAAaG,KAAb,CAAnB,IAA0CN,WAAWM,KAAX,KAAqBF,SADlE;AAED;;AAEDG,eAAOC,OAAP,GAAiBH,QAAjB","file":"isString.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n"]}