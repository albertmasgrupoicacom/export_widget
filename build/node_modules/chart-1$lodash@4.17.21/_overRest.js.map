{"version":3,"sources":["_overRest.js"],"names":["apply","require","nativeMax","Math","max","overRest","func","start","transform","undefined","length","args","arguments","index","array","Array","otherArgs","module","exports"],"mappings":";;;;AAAA,QAAIA,QAAQC,QAAQ,UAAR,CAAZ;;AAEA;AACA,QAAIC,YAAYC,KAAKC,GAArB;;AAEA;;;;;;;;;AASA,aAASC,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;AACxCD,cAAQL,UAAUK,UAAUE,SAAV,GAAuBH,KAAKI,MAAL,GAAc,CAArC,GAA0CH,KAApD,EAA2D,CAA3D,CAAR;AACA,aAAO,YAAW;AAChB,YAAII,OAAOC,SAAX;AAAA,YACIC,QAAQ,CAAC,CADb;AAAA,YAEIH,SAASR,UAAUS,KAAKD,MAAL,GAAcH,KAAxB,EAA+B,CAA/B,CAFb;AAAA,YAGIO,QAAQC,MAAML,MAAN,CAHZ;;AAKA,eAAO,EAAEG,KAAF,GAAUH,MAAjB,EAAyB;AACvBI,gBAAMD,KAAN,IAAeF,KAAKJ,QAAQM,KAAb,CAAf;AACD;AACDA,gBAAQ,CAAC,CAAT;AACA,YAAIG,YAAYD,MAAMR,QAAQ,CAAd,CAAhB;AACA,eAAO,EAAEM,KAAF,GAAUN,KAAjB,EAAwB;AACtBS,oBAAUH,KAAV,IAAmBF,KAAKE,KAAL,CAAnB;AACD;AACDG,kBAAUT,KAAV,IAAmBC,UAAUM,KAAV,CAAnB;AACA,eAAOd,MAAMM,IAAN,EAAY,IAAZ,EAAkBU,SAAlB,CAAP;AACD,OAhBD;AAiBD;;AAEDC,WAAOC,OAAP,GAAiBb,QAAjB","file":"_overRest.js","sourcesContent":["var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n"]}