{"version":3,"sources":["isArguments.js"],"names":["baseIsArguments","require","isObjectLike","objectProto","Object","prototype","hasOwnProperty","propertyIsEnumerable","isArguments","arguments","value","call","module","exports"],"mappings":";;;;AAAA,YAAIA,kBAAkBC,QAAQ,oBAAR,CAAtB;AAAA,YACIC,eAAeD,QAAQ,gBAAR,CADnB;;AAGA;AACA,YAAIE,cAAcC,OAAOC,SAAzB;;AAEA;AACA,YAAIC,iBAAiBH,YAAYG,cAAjC;;AAEA;AACA,YAAIC,uBAAuBJ,YAAYI,oBAAvC;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,YAAIC,cAAcR,gBAAgB,YAAW;AAAE,mBAAOS,SAAP;AAAmB,SAAhC,EAAhB,IAAsDT,eAAtD,GAAwE,UAASU,KAAT,EAAgB;AACxG,mBAAOR,aAAaQ,KAAb,KAAuBJ,eAAeK,IAAf,CAAoBD,KAApB,EAA2B,QAA3B,CAAvB,IACL,CAACH,qBAAqBI,IAArB,CAA0BD,KAA1B,EAAiC,QAAjC,CADH;AAED,SAHD;;AAKAE,eAAOC,OAAP,GAAiBL,WAAjB","file":"isArguments.js","sourcesContent":["var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n"]}