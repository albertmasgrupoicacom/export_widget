{"version":3,"sources":["_baseSortedIndexBy.js"],"names":["isSymbol","require","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","nativeFloor","Math","floor","nativeMin","min","baseSortedIndexBy","array","value","iteratee","retHighest","low","high","length","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","undefined","mid","computed","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","module","exports"],"mappings":";;;;AAAA,QAAIA,WAAWC,QAAQ,YAAR,CAAf;;AAEA;AACA,QAAIC,mBAAmB,UAAvB;AAAA,QACIC,kBAAkBD,mBAAmB,CADzC;;AAGA;AACA,QAAIE,cAAcC,KAAKC,KAAvB;AAAA,QACIC,YAAYF,KAAKG,GADrB;;AAGA;;;;;;;;;;;;;AAaA,aAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+D;AAC7D,UAAIC,MAAM,CAAV;AAAA,UACIC,OAAOL,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMM,MADrC;AAEA,UAAID,SAAS,CAAb,EAAgB;AACd,eAAO,CAAP;AACD;;AAEDJ,cAAQC,SAASD,KAAT,CAAR;AACA,UAAIM,WAAWN,UAAUA,KAAzB;AAAA,UACIO,YAAYP,UAAU,IAD1B;AAAA,UAEIQ,cAAcnB,SAASW,KAAT,CAFlB;AAAA,UAGIS,iBAAiBT,UAAUU,SAH/B;;AAKA,aAAOP,MAAMC,IAAb,EAAmB;AACjB,YAAIO,MAAMlB,YAAY,CAACU,MAAMC,IAAP,IAAe,CAA3B,CAAV;AAAA,YACIQ,WAAWX,SAASF,MAAMY,GAAN,CAAT,CADf;AAAA,YAEIE,eAAeD,aAAaF,SAFhC;AAAA,YAGII,YAAYF,aAAa,IAH7B;AAAA,YAIIG,iBAAiBH,aAAaA,QAJlC;AAAA,YAKII,cAAc3B,SAASuB,QAAT,CALlB;;AAOA,YAAIN,QAAJ,EAAc;AACZ,cAAIW,SAASf,cAAca,cAA3B;AACD,SAFD,MAEO,IAAIN,cAAJ,EAAoB;AACzBQ,mBAASF,mBAAmBb,cAAcW,YAAjC,CAAT;AACD,SAFM,MAEA,IAAIN,SAAJ,EAAe;AACpBU,mBAASF,kBAAkBF,YAAlB,KAAmCX,cAAc,CAACY,SAAlD,CAAT;AACD,SAFM,MAEA,IAAIN,WAAJ,EAAiB;AACtBS,mBAASF,kBAAkBF,YAAlB,IAAkC,CAACC,SAAnC,KAAiDZ,cAAc,CAACc,WAAhE,CAAT;AACD,SAFM,MAEA,IAAIF,aAAaE,WAAjB,EAA8B;AACnCC,mBAAS,KAAT;AACD,SAFM,MAEA;AACLA,mBAASf,aAAcU,YAAYZ,KAA1B,GAAoCY,WAAWZ,KAAxD;AACD;AACD,YAAIiB,MAAJ,EAAY;AACVd,gBAAMQ,MAAM,CAAZ;AACD,SAFD,MAEO;AACLP,iBAAOO,GAAP;AACD;AACF;AACD,aAAOf,UAAUQ,IAAV,EAAgBZ,eAAhB,CAAP;AACD;;AAED0B,WAAOC,OAAP,GAAiBrB,iBAAjB","file":"_baseSortedIndexBy.js","sourcesContent":["var isSymbol = require('./isSymbol');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  var low = 0,\n      high = array == null ? 0 : array.length;\n  if (high === 0) {\n    return 0;\n  }\n\n  value = iteratee(value);\n  var valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nmodule.exports = baseSortedIndexBy;\n"]}