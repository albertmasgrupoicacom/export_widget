{"version":3,"sources":["isFunction.js"],"names":["baseGetTag","require","isObject","asyncTag","funcTag","genTag","proxyTag","isFunction","value","tag","module","exports"],"mappings":";;;;AAAA,YAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,YACIC,WAAWD,QAAQ,YAAR,CADf;;AAGA;AACA,YAAIE,WAAW,wBAAf;AAAA,YACIC,UAAU,mBADd;AAAA,YAEIC,SAAS,4BAFb;AAAA,YAGIC,WAAW,gBAHf;;AAKA;;;;;;;;;;;;;;;;;AAiBA,iBAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,gBAAI,CAACN,SAASM,KAAT,CAAL,EAAsB;AACpB,uBAAO,KAAP;AACD;AACD;AACA;AACA,gBAAIC,MAAMT,WAAWQ,KAAX,CAAV;AACA,mBAAOC,OAAOL,OAAP,IAAkBK,OAAOJ,MAAzB,IAAmCI,OAAON,QAA1C,IAAsDM,OAAOH,QAApE;AACD;;AAEDI,eAAOC,OAAP,GAAiBJ,UAAjB","file":"isFunction.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n"]}