{"version":3,"sources":["overArgs.js"],"names":["apply","require","arrayMap","baseFlatten","baseIteratee","baseRest","baseUnary","castRest","isArray","nativeMin","Math","min","overArgs","func","transforms","length","funcsLength","args","index","call","module","exports"],"mappings":";;;;AAAA,QAAIA,QAAQC,QAAQ,UAAR,CAAZ;AAAA,QACIC,WAAWD,QAAQ,aAAR,CADf;AAAA,QAEIE,cAAcF,QAAQ,gBAAR,CAFlB;AAAA,QAGIG,eAAeH,QAAQ,iBAAR,CAHnB;AAAA,QAIII,WAAWJ,QAAQ,aAAR,CAJf;AAAA,QAKIK,YAAYL,QAAQ,cAAR,CALhB;AAAA,QAMIM,WAAWN,QAAQ,aAAR,CANf;AAAA,QAOIO,UAAUP,QAAQ,WAAR,CAPd;;AASA;AACA,QAAIQ,YAAYC,KAAKC,GAArB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,QAAIC,WAAWL,SAAS,UAASM,IAAT,EAAeC,UAAf,EAA2B;AACjDA,mBAAcA,WAAWC,MAAX,IAAqB,CAArB,IAA0BP,QAAQM,WAAW,CAAX,CAAR,CAA3B,GACTZ,SAASY,WAAW,CAAX,CAAT,EAAwBR,UAAUF,YAAV,CAAxB,CADS,GAETF,SAASC,YAAYW,UAAZ,EAAwB,CAAxB,CAAT,EAAqCR,UAAUF,YAAV,CAArC,CAFJ;;AAIA,UAAIY,cAAcF,WAAWC,MAA7B;AACA,aAAOV,SAAS,UAASY,IAAT,EAAe;AAC7B,YAAIC,QAAQ,CAAC,CAAb;AAAA,YACIH,SAASN,UAAUQ,KAAKF,MAAf,EAAuBC,WAAvB,CADb;;AAGA,eAAO,EAAEE,KAAF,GAAUH,MAAjB,EAAyB;AACvBE,eAAKC,KAAL,IAAcJ,WAAWI,KAAX,EAAkBC,IAAlB,CAAuB,IAAvB,EAA6BF,KAAKC,KAAL,CAA7B,CAAd;AACD;AACD,eAAOlB,MAAMa,IAAN,EAAY,IAAZ,EAAkBI,IAAlB,CAAP;AACD,OARM,CAAP;AASD,KAfc,CAAf;;AAiBAG,WAAOC,OAAP,GAAiBT,QAAjB","file":"overArgs.js","sourcesContent":["var apply = require('./_apply'),\n    arrayMap = require('./_arrayMap'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    baseUnary = require('./_baseUnary'),\n    castRest = require('./_castRest'),\n    isArray = require('./isArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nmodule.exports = overArgs;\n"]}