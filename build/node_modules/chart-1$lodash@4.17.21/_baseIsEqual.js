Liferay.Loader.define('chart-1$lodash@4.17.21/_baseIsEqual', ['module', 'exports', 'require', './_baseIsEqualDeep', './isObjectLike'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    var baseIsEqualDeep = require('./_baseIsEqualDeep'),
        isObjectLike = require('./isObjectLike');

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    module.exports = baseIsEqual;
  }
});
//# sourceMappingURL=_baseIsEqual.js.map