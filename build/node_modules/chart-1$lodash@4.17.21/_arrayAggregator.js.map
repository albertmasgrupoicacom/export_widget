{"version":3,"sources":["_arrayAggregator.js"],"names":["arrayAggregator","array","setter","iteratee","accumulator","index","length","value","module","exports"],"mappings":";;;;AAAA;;;;;;;;;;AAUA,aAASA,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkDC,WAAlD,EAA+D;AAC7D,UAAIC,QAAQ,CAAC,CAAb;AAAA,UACIC,SAASL,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMK,MADvC;;AAGA,aAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAIC,QAAQN,MAAMI,KAAN,CAAZ;AACAH,eAAOE,WAAP,EAAoBG,KAApB,EAA2BJ,SAASI,KAAT,CAA3B,EAA4CN,KAA5C;AACD;AACD,aAAOG,WAAP;AACD;;AAEDI,WAAOC,OAAP,GAAiBT,eAAjB","file":"_arrayAggregator.js","sourcesContent":["/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n"]}