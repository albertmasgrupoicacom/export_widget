{"version":3,"sources":["isPlainObject.js"],"names":["baseGetTag","require","getPrototype","isObjectLike","objectTag","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","isPlainObject","value","proto","Ctor","constructor","module","exports"],"mappings":";;;;AAAA,QAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,QACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,QAEIE,eAAeF,QAAQ,gBAAR,CAFnB;;AAIA;AACA,QAAIG,YAAY,iBAAhB;;AAEA;AACA,QAAIC,YAAYC,SAASC,SAAzB;AAAA,QACIC,cAAcC,OAAOF,SADzB;;AAGA;AACA,QAAIG,eAAeL,UAAUM,QAA7B;;AAEA;AACA,QAAIC,iBAAiBJ,YAAYI,cAAjC;;AAEA;AACA,QAAIC,mBAAmBH,aAAaI,IAAb,CAAkBL,MAAlB,CAAvB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,aAASM,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,UAAI,CAACb,aAAaa,KAAb,CAAD,IAAwBhB,WAAWgB,KAAX,KAAqBZ,SAAjD,EAA4D;AAC1D,eAAO,KAAP;AACD;AACD,UAAIa,QAAQf,aAAac,KAAb,CAAZ;AACA,UAAIC,UAAU,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;AACD,UAAIC,OAAON,eAAeE,IAAf,CAAoBG,KAApB,EAA2B,aAA3B,KAA6CA,MAAME,WAA9D;AACA,aAAO,OAAOD,IAAP,IAAe,UAAf,IAA6BA,gBAAgBA,IAA7C,IACLR,aAAaI,IAAb,CAAkBI,IAAlB,KAA2BL,gBAD7B;AAED;;AAEDO,WAAOC,OAAP,GAAiBN,aAAjB","file":"isPlainObject.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n"]}