{"version":3,"sources":["fromPairs.js"],"names":["fromPairs","pairs","index","length","result","pair","module","exports"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;AAeA,aAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,UAAIC,QAAQ,CAAC,CAAb;AAAA,UACIC,SAASF,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAME,MADvC;AAAA,UAEIC,SAAS,EAFb;;AAIA,aAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAIE,OAAOJ,MAAMC,KAAN,CAAX;AACAE,eAAOC,KAAK,CAAL,CAAP,IAAkBA,KAAK,CAAL,CAAlB;AACD;AACD,aAAOD,MAAP;AACD;;AAEDE,WAAOC,OAAP,GAAiBP,SAAjB","file":"fromPairs.js","sourcesContent":["/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['a', 1], ['b', 2]]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs == null ? 0 : pairs.length,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nmodule.exports = fromPairs;\n"]}