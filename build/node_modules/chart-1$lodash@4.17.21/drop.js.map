{"version":3,"sources":["drop.js"],"names":["baseSlice","require","toInteger","drop","array","n","guard","length","undefined","module","exports"],"mappings":";;;;AAAA,QAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,QACIC,YAAYD,QAAQ,aAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,aAASE,IAAT,CAAcC,KAAd,EAAqBC,CAArB,EAAwBC,KAAxB,EAA+B;AAC7B,UAAIC,SAASH,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMG,MAAvC;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAO,EAAP;AACD;AACDF,UAAKC,SAASD,MAAMG,SAAhB,GAA6B,CAA7B,GAAiCN,UAAUG,CAAV,CAArC;AACA,aAAOL,UAAUI,KAAV,EAAiBC,IAAI,CAAJ,GAAQ,CAAR,GAAYA,CAA7B,EAAgCE,MAAhC,CAAP;AACD;;AAEDE,WAAOC,OAAP,GAAiBP,IAAjB","file":"drop.js","sourcesContent":["var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nmodule.exports = drop;\n"]}