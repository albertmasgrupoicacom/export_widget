Liferay.Loader.define('chart-1$lodash@4.17.21/_hasPath', ['module', 'exports', 'require', './_castPath', './isArguments', './isArray', './_isIndex', './isLength', './_toKey'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    var castPath = require('./_castPath'),
        isArguments = require('./isArguments'),
        isArray = require('./isArray'),
        isIndex = require('./_isIndex'),
        isLength = require('./isLength'),
        toKey = require('./_toKey');

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }

    module.exports = hasPath;
  }
});
//# sourceMappingURL=_hasPath.js.map