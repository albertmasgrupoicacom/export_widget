{"version":3,"sources":["224.b130b37f.js"],"names":["window","webpackJsonp","push","t","n","e","r","a","l","Object","$createElement","_self","_c","attrs","$parent","slotKey","id","staticClass","href","_v","code","to","default","exports"],"mappings":";;;;AAAA,KAACA,OAAOC,YAAP,GAAoBD,OAAOC,YAAP,IAAqB,EAA1C,EAA8CC,IAA9C,CAAmD,CAAC,CAAC,GAAD,CAAD,EAAO,EAAC,KAAI,UAASC,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAe;AAAC;AAAaA,UAAEC,CAAF,CAAIF,CAAJ,EAAO,IAAIG,IAAEF,EAAE,CAAF,CAAN;AAAA,YAAWG,IAAEC,OAAOF,EAAEA,CAAT,EAAY,EAAZ,EAAgB,YAAU;AAAC,cAAIJ,IAAE,IAAN;AAAA,cAAWC,IAAED,EAAEO,cAAf;AAAA,cAA8BL,IAAEF,EAAEQ,KAAF,CAAQC,EAAR,IAAYR,CAA5C,CAA8C,OAAOC,EAAE,yBAAF,EAA4B,EAACQ,OAAM,EAAC,YAAWV,EAAEW,OAAF,CAAUC,OAAtB,EAAP,EAA5B,EAAmE,CAACV,EAAE,IAAF,EAAO,EAACQ,OAAM,EAACG,IAAG,kBAAJ,EAAP,EAAP,EAAuC,CAACX,EAAE,GAAF,EAAM,EAACY,aAAY,eAAb,EAA6BJ,OAAM,EAACK,MAAK,mBAAN,EAAnC,EAAN,EAAqE,CAACf,EAAEgB,EAAF,CAAK,GAAL,CAAD,CAArE,CAAD,EAAmFhB,EAAEgB,EAAF,CAAK,mBAAL,CAAnF,CAAvC,CAAD,EAAuJhB,EAAEgB,EAAF,CAAK,GAAL,CAAvJ,EAAiKd,EAAE,cAAF,EAAiB,EAACQ,OAAM,EAACO,MAAK,+tFAAN,EAAP,EAAjB,CAAjK,EAAk6Ff,EAAE,IAAF,EAAO,EAACQ,OAAM,EAACG,IAAG,MAAJ,EAAP,EAAP,EAA2B,CAACX,EAAE,GAAF,EAAM,EAACY,aAAY,eAAb,EAA6BJ,OAAM,EAACK,MAAK,OAAN,EAAnC,EAAN,EAAyD,CAACf,EAAEgB,EAAF,CAAK,GAAL,CAAD,CAAzD,CAAD,EAAuEhB,EAAEgB,EAAF,CAAK,OAAL,CAAvE,CAA3B,CAAl6F,EAAohGhB,EAAEgB,EAAF,CAAK,GAAL,CAAphG,EAA8hGd,EAAE,IAAF,EAAO,CAACA,EAAE,IAAF,EAAO,CAACA,EAAE,YAAF,EAAe,EAACQ,OAAM,EAACQ,IAAG,uBAAJ,EAAP,EAAf,EAAoD,CAAClB,EAAEgB,EAAF,CAAK,yBAAL,CAAD,CAApD,CAAD,CAAP,EAAgG,CAAhG,CAAD,EAAoGhB,EAAEgB,EAAF,CAAK,GAAL,CAApG,EAA8Gd,EAAE,IAAF,EAAO,CAACA,EAAE,YAAF,EAAe,EAACQ,OAAM,EAACQ,IAAG,uBAAJ,EAAP,EAAf,EAAoD,CAAClB,EAAEgB,EAAF,CAAK,SAAL,CAAD,CAApD,CAAD,EAAwEhB,EAAEgB,EAAF,CAAK,GAAL,CAAxE,EAAkFd,EAAE,IAAF,EAAO,CAACA,EAAE,IAAF,EAAO,CAACA,EAAE,YAAF,EAAe,EAACQ,OAAM,EAACQ,IAAG,0CAAJ,EAAP,EAAf,EAAuE,CAAClB,EAAEgB,EAAF,CAAK,oBAAL,CAAD,CAAvE,CAAD,CAAP,EAA8G,CAA9G,CAAD,CAAP,CAAlF,CAAP,EAAqN,CAArN,CAA9G,CAAP,CAA9hG,CAAnE,EAAi7G,CAAj7G,CAAP;AAA27G,SAApgH,EAAsgH,EAAtgH,EAAygH,CAAC,CAA1gH,EAA4gH,IAA5gH,EAAihH,IAAjhH,EAAshH,IAAthH,CAAb,CAAyiHf,EAAEkB,OAAF,GAAUd,EAAEe,OAAZ;AAAoB,OAAtmH,EAAP,CAAnD","file":"224.b130b37f.js","sourcesContent":["(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{555:function(t,n,e){\"use strict\";e.r(n);var a=e(6),l=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"multi-series-pie\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#multi-series-pie\"}},[t._v(\"#\")]),t._v(\" Multi Series Pie\")]),t._v(\" \"),e(\"chart-editor\",{attrs:{code:\"// <block:setup:1>\\nconst DATA_COUNT = 5;\\nconst NUMBER_CFG = {count: DATA_COUNT, min: 0, max: 100};\\n\\nconst labels = Utils.months({count: 7});\\nconst data = {\\n  labels: ['Overall Yay', 'Overall Nay', 'Group A Yay', 'Group A Nay', 'Group B Yay', 'Group B Nay', 'Group C Yay', 'Group C Nay'],\\n  datasets: [\\n    {\\n      backgroundColor: ['#AAA', '#777'],\\n      data: [21, 79]\\n    },\\n    {\\n      backgroundColor: ['hsl(0, 100%, 60%)', 'hsl(0, 100%, 35%)'],\\n      data: [33, 67]\\n    },\\n    {\\n      backgroundColor: ['hsl(100, 100%, 60%)', 'hsl(100, 100%, 35%)'],\\n      data: [20, 80]\\n    },\\n    {\\n      backgroundColor: ['hsl(180, 100%, 60%)', 'hsl(180, 100%, 35%)'],\\n      data: [10, 90]\\n    }\\n  ]\\n};\\n// </block:setup>\\n\\n// <block:config:0>\\nconst config = {\\n  type: 'pie',\\n  data: data,\\n  options: {\\n    responsive: true,\\n    plugins: {\\n      legend: {\\n        labels: {\\n          generateLabels: function(chart) {\\n            // Get the default label list\\n            const original = Chart.overrides.pie.plugins.legend.labels.generateLabels;\\n            const labelsOriginal = original.call(this, chart);\\n\\n            // Build an array of colors used in the datasets of the chart\\n            let datasetColors = chart.data.datasets.map(function(e) {\\n              return e.backgroundColor;\\n            });\\n            datasetColors = datasetColors.flat();\\n\\n            // Modify the color and hide state of each label\\n            labelsOriginal.forEach(label => {\\n              // There are twice as many labels as there are datasets. This converts the label index into the corresponding dataset index\\n              label.datasetIndex = (label.index - label.index % 2) / 2;\\n\\n              // The hidden state must match the dataset's hidden state\\n              label.hidden = !chart.isDatasetVisible(label.datasetIndex);\\n\\n              // Change the color to match the dataset\\n              label.fillStyle = datasetColors[label.index];\\n            });\\n\\n            return labelsOriginal;\\n          }\\n        },\\n        onClick: function(mouseEvent, legendItem, legend) {\\n          // toggle the visibility of the dataset from what it currently is\\n          legend.chart.getDatasetMeta(\\n            legendItem.datasetIndex\\n          ).hidden = legend.chart.isDatasetVisible(legendItem.datasetIndex);\\n          legend.chart.update();\\n        }\\n      },\\n      tooltip: {\\n        callbacks: {\\n          label: function(context) {\\n            const labelIndex = (context.datasetIndex * 2) + context.dataIndex;\\n            return context.chart.data.labels[labelIndex] + ': ' + context.formattedValue;\\n          }\\n        }\\n      }\\n    }\\n  },\\n};\\n// </block:config>\\n\\nmodule.exports = {\\n  config: config,\\n};\\n\"}}),e(\"h2\",{attrs:{id:\"docs\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#docs\"}},[t._v(\"#\")]),t._v(\" Docs\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"RouterLink\",{attrs:{to:\"/charts/doughnut.html\"}},[t._v(\"Doughnut and Pie Charts\")])],1),t._v(\" \"),e(\"li\",[e(\"RouterLink\",{attrs:{to:\"/general/options.html\"}},[t._v(\"Options\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"RouterLink\",{attrs:{to:\"/general/options.html#scriptable-options\"}},[t._v(\"Scriptable Options\")])],1)])],1)])],1)}),[],!1,null,null,null);n.default=l.exports}}]);"]}