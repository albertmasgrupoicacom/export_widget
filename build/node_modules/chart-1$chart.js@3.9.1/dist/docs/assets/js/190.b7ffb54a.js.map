{"version":3,"sources":["190.b7ffb54a.js"],"names":["window","webpackJsonp","push","t","n","a","r","e","s","Object","$createElement","_self","_c","attrs","$parent","slotKey","id","staticClass","href","_v","staticStyle","width","max","value","code","to","default","exports"],"mappings":"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","file":"190.b7ffb54a.js","sourcesContent":["(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{520:function(t,n,a){\"use strict\";a.r(n);var e=a(6),s=Object(e.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"animation-progress-bar\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#animation-progress-bar\"}},[t._v(\"#\")]),t._v(\" Animation Progress Bar\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"initial-animation\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#initial-animation\"}},[t._v(\"#\")]),t._v(\" Initial animation\")]),t._v(\" \"),a(\"p\",[a(\"progress\",{staticStyle:{width:\"100%\"},attrs:{id:\"initialProgress\",max:\"1\",value:\"0\"}})]),t._v(\" \"),a(\"h2\",{attrs:{id:\"other-animations\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#other-animations\"}},[t._v(\"#\")]),t._v(\" Other animations\")]),t._v(\" \"),a(\"p\",[a(\"progress\",{staticStyle:{width:\"100%\"},attrs:{id:\"animationProgress\",max:\"1\",value:\"0\"}})]),t._v(\" \"),a(\"chart-editor\",{attrs:{code:\"// <block:actions:2>\\nconst actions = [\\n  {\\n    name: 'Randomize',\\n    handler(chart) {\\n      chart.data.datasets.forEach(dataset => {\\n        dataset.data = Utils.numbers({count: chart.data.labels.length, min: -100, max: 100});\\n      });\\n      chart.update();\\n    }\\n  },\\n  {\\n    name: 'Add Dataset',\\n    handler(chart) {\\n      const data = chart.data;\\n      const dsColor = Utils.namedColor(chart.data.datasets.length);\\n      const newDataset = {\\n        label: 'Dataset ' + (data.datasets.length + 1),\\n        backgroundColor: Utils.transparentize(dsColor, 0.5),\\n        borderColor: dsColor,\\n        data: Utils.numbers({count: data.labels.length, min: -100, max: 100}),\\n      };\\n      chart.data.datasets.push(newDataset);\\n      chart.update();\\n    }\\n  },\\n  {\\n    name: 'Add Data',\\n    handler(chart) {\\n      const data = chart.data;\\n      if (data.datasets.length > 0) {\\n        data.labels = Utils.months({count: data.labels.length + 1});\\n\\n        for (let index = 0; index < data.datasets.length; ++index) {\\n          data.datasets[index].data.push(Utils.rand(-100, 100));\\n        }\\n\\n        chart.update();\\n      }\\n    }\\n  },\\n  {\\n    name: 'Remove Dataset',\\n    handler(chart) {\\n      chart.data.datasets.pop();\\n      chart.update();\\n    }\\n  },\\n  {\\n    name: 'Remove Data',\\n    handler(chart) {\\n      chart.data.labels.splice(-1, 1); // remove the label first\\n\\n      chart.data.datasets.forEach(dataset => {\\n        dataset.data.pop();\\n      });\\n\\n      chart.update();\\n    }\\n  }\\n];\\n// </block:actions>\\n\\n// <block:setup:1>\\nconst initProgress = document.getElementById('initialProgress');\\nconst progress = document.getElementById('animationProgress');\\n\\nconst DATA_COUNT = 7;\\nconst NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\\n\\nconst labels = Utils.months({count: 7});\\nconst data = {\\n  labels: labels,\\n  datasets: [\\n    {\\n      label: 'Dataset 1',\\n      data: Utils.numbers(NUMBER_CFG),\\n      borderColor: Utils.CHART_COLORS.red,\\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\\n    },\\n    {\\n      label: 'Dataset 2',\\n      data: Utils.numbers(NUMBER_CFG),\\n      borderColor: Utils.CHART_COLORS.blue,\\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\\n    }\\n  ]\\n};\\n// </block:setup>\\n\\n// <block:config:0>\\nconst config = {\\n  type: 'line',\\n  data: data,\\n  options: {\\n    animation: {\\n      duration: 2000,\\n      onProgress: function(context) {\\n        if (context.initial) {\\n          initProgress.value = context.currentStep / context.numSteps;\\n        } else {\\n          progress.value = context.currentStep / context.numSteps;\\n        }\\n      },\\n      onComplete: function(context) {\\n        if (context.initial) {\\n          console.log('Initial animation finished');\\n        } else {\\n          console.log('animation finished');\\n        }\\n      }\\n    },\\n    interaction: {\\n      mode: 'nearest',\\n      axis: 'x',\\n      intersect: false\\n    },\\n    plugins: {\\n      title: {\\n        display: true,\\n        text: 'Chart.js Line Chart - Animation Progress Bar'\\n      }\\n    },\\n  },\\n};\\n// </block:config>\\n\\nmodule.exports = {\\n  actions: actions,\\n  config: config,\\n  output: 'console.log output is displayed here'\\n};\\n\"}}),a(\"h2\",{attrs:{id:\"docs\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#docs\"}},[t._v(\"#\")]),t._v(\" Docs\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/configuration/animations.html\"}},[t._v(\"Animations\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/configuration/animations.html#animation-callbacks\"}},[t._v(\"Animation Callbacks\")])],1)])],1),t._v(\" \"),a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/general/data-structures.html\"}},[t._v(\"Data structures (\"),a(\"code\",[t._v(\"labels\")]),t._v(\")\")])],1),t._v(\" \"),a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/charts/line.html\"}},[t._v(\"Line\")])],1),t._v(\" \"),a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/general/options.html\"}},[t._v(\"Options\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/general/options.html#scriptable-options\"}},[t._v(\"Scriptable Options\")])],1)])],1)])],1)}),[],!1,null,null,null);n.default=s.exports}}]);"]}