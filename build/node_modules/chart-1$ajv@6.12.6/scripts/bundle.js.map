{"version":3,"sources":["bundle.js"],"names":["fs","require","path","browserify","uglify","pkg","process","argv","standalone","compress","packageDir","join","__dirname","json","distDir","existsSync","mkdirSync","bOpts","main","expose","name","bundle","err","buf","console","error","exit","outputFile","uglifyOpts","warnings","output","preamble","version","description","compressOpts","split","i","il","length","pair","sourceMap","filename","url","result","minify","toString","writeFileSync","code","map","j","jl","warn"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nvar fs = require('fs')\n  , path = require('path')\n  , browserify = require('browserify')\n  , uglify = require('uglify-js');\n\nvar pkg = process.argv[2]\n  , standalone = process.argv[3]\n  , compress = process.argv[4];\n\nvar packageDir = path.join(__dirname, '..');\nif (pkg != '.') packageDir = path.join(packageDir, 'node_modules', pkg);\n\nvar json = require(path.join(packageDir, 'package.json'));\n\nvar distDir = path.join(__dirname, '..', 'dist');\nif (!fs.existsSync(distDir)) fs.mkdirSync(distDir);\n\nvar bOpts = {};\nif (standalone) bOpts.standalone = standalone;\n\nbrowserify(bOpts)\n.require(path.join(packageDir, json.main), {expose: json.name})\n.bundle(function (err, buf) {\n  if (err) {\n    console.error('browserify error:', err);\n    process.exit(1);\n  }\n\n  var outputFile = path.join(distDir, json.name);\n  var uglifyOpts = {\n    warnings: true,\n    compress: {},\n    output: {\n      preamble: '/* ' + json.name + ' ' + json.version + ': ' + json.description + ' */'\n    }\n  };\n  if (compress) {\n    var compressOpts = compress.split(',');\n    for (var i=0, il = compressOpts.length; i<il; ++i) {\n      var pair = compressOpts[i].split('=');\n      uglifyOpts.compress[pair[0]] = pair.length < 1 || pair[1] != 'false';\n    }\n  }\n  if (standalone) {\n    uglifyOpts.sourceMap = {\n      filename: json.name + '.min.js',\n      url: json.name + '.min.js.map'\n    };\n  }\n\n  var result = uglify.minify(buf.toString(), uglifyOpts);\n  fs.writeFileSync(outputFile + '.min.js', result.code);\n  if (result.map) fs.writeFileSync(outputFile + '.min.js.map', result.map);\n  if (standalone) fs.writeFileSync(outputFile + '.bundle.js', buf);\n  if (result.warnings) {\n    for (var j=0, jl = result.warnings.length; j<jl; ++j)\n      console.warn('UglifyJS warning:', result.warnings[j]);\n  }\n});\n"]}