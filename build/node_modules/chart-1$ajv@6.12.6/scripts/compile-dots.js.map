{"version":3,"sources":["compile-dots.js"],"names":["glob","require","fs","path","doT","beautify","js_beautify","defsRootPath","process","argv","join","__dirname","defs","defFiles","sync","cwd","forEach","f","name","basename","readFileSync","filesRootPath","files","dotjsPath","mkdirSync","e","console","log","FUNCTION_NAME","OUT_EMPTY_STRING","ISTANBUL","ERROR_KEYWORD","ERROR_KEYWORD_OR","VARS","keyword","targetPath","template","code","compile","toString","replace","removeAlwaysFalsyInOr","removeUnusedVar","indent_size","writeFileSync","v","regexp","RegExp","count","occurrences","countUsed","countOr","match","length"],"mappings":"AAAA;AACA;;;;;;AAEA,QAAIA,OAAOC,QAAQ,cAAR,CAAX;AAAA,QACIC,KAAKD,QAAQ,YAAR,CADT;AAAA,QAEIE,OAAOF,QAAQ,cAAR,CAFX;AAAA,QAGIG,MAAMH,QAAQ,aAAR,CAHV;AAAA,QAIII,WAAWJ,QAAQ,qBAAR,EAAuBK,WAJtC;;AAMA,QAAIC,eAAeC,QAAQC,IAAR,CAAa,CAAb,KAAmBN,KAAKO,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAtC;;AAEA,QAAIC,OAAO,EAAX;AACA,QAAIC,WAAWb,KAAKc,IAAL,CAAU,gBAAV,EAA4B,EAAEC,KAAKR,YAAP,EAA5B,CAAf;AACAM,aAASG,OAAT,CAAiB,UAAUC,CAAV,EAAa;AAC5B,UAAIC,OAAOf,KAAKgB,QAAL,CAAcF,CAAd,EAAiB,MAAjB,CAAX;AACAL,WAAKM,IAAL,IAAahB,GAAGkB,YAAH,CAAgBjB,KAAKO,IAAL,CAAUH,YAAV,EAAwBU,CAAxB,CAAhB,CAAb;AACD,KAHD;;AAKA,QAAII,gBAAgBb,QAAQC,IAAR,CAAa,CAAb,KAAmBN,KAAKO,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAvC;AACA,QAAIW,QAAQtB,KAAKc,IAAL,CAAU,gBAAV,EAA4B,EAAEC,KAAKM,aAAP,EAA5B,CAAZ;;AAEA,QAAIE,YAAYpB,KAAKO,IAAL,CAAUW,aAAV,EAAyB,SAAzB,CAAhB;AACA,QAAI;AAAEnB,SAAGsB,SAAH,CAAaD,SAAb;AAA0B,KAAhC,CAAiC,OAAME,CAAN,EAAS,CAAE;;AAE5CC,YAAQC,GAAR,CAAY,gBAAZ;;AAEA,QAAIC,gBAAgB,wCAApB;AACA,QAAIC,mBAAmB,qBAAvB;AACA,QAAIC,WAAW,qBAAf;AACA,QAAIC,gBAAgB,iBAApB;AACA,QAAIC,mBAAmB,wBAAvB;AACA,QAAIC,OAAO,CACT,OADS,EACA,QADA,EACU,MADV,EACkB,OADlB,EAC2B,UAD3B,EAET,eAFS,EAEQ,gBAFR,EAE0B,aAF1B,EAGT,WAHS,CAAX;;AAMAX,UAAMN,OAAN,CAAc,UAAUC,CAAV,EAAa;AACzB,UAAIiB,UAAU/B,KAAKgB,QAAL,CAAcF,CAAd,EAAiB,MAAjB,CAAd;AACA,UAAIkB,aAAahC,KAAKO,IAAL,CAAUa,SAAV,EAAqBW,UAAU,KAA/B,CAAjB;AACA,UAAIE,WAAWlC,GAAGkB,YAAH,CAAgBjB,KAAKO,IAAL,CAAUW,aAAV,EAAyBJ,CAAzB,CAAhB,CAAf;AACA,UAAIoB,OAAOjC,IAAIkC,OAAJ,CAAYF,QAAZ,EAAsBxB,IAAtB,CAAX;AACAyB,aAAOA,KAAKE,QAAL,GACKC,OADL,CACaX,gBADb,EAC+B,EAD/B,EAEKW,OAFL,CAEaZ,aAFb,EAE4B,uBAAuBM,OAAvB,GAAiC,6BAF7D,EAGKM,OAHL,CAGaV,QAHb,EAGuB,UAHvB,CAAP;AAIAW;AACAR,WAAKjB,OAAL,CAAa0B,eAAb;AACAL,aAAO,qCAAqCA,IAA5C;AACAA,aAAOhC,SAASgC,IAAT,EAAe,EAAEM,aAAa,CAAf,EAAf,IAAqC,IAA5C;AACAzC,SAAG0C,aAAH,CAAiBT,UAAjB,EAA6BE,IAA7B;AACAX,cAAQC,GAAR,CAAY,UAAZ,EAAwBO,OAAxB;;AAEA,eAASQ,eAAT,CAAyBG,CAAzB,EAA4B;AAC1BA,YAAIA,EAAEL,OAAF,CAAU,KAAV,EAAiB,MAAjB,CAAJ;AACA,YAAIM,SAAS,IAAIC,MAAJ,CAAWF,IAAI,gBAAf,EAAiC,GAAjC,CAAb;AACA,YAAIG,QAAQC,YAAYH,MAAZ,CAAZ;AACA,YAAIE,SAAS,CAAb,EAAgB;AACdF,mBAAS,IAAIC,MAAJ,CAAW,YAAYF,CAAZ,GAAgB,qBAAhB,GAAwCA,CAAxC,GAA4C,GAAvD,CAAT;AACAR,iBAAOA,KAAKG,OAAL,CAAaM,MAAb,EAAqB,EAArB,CAAP;AACD;AACF;;AAED,eAASL,qBAAT,GAAiC;AAC/B,YAAIS,YAAYD,YAAYlB,aAAZ,CAAhB;AACA,YAAIoB,UAAUF,YAAYjB,gBAAZ,CAAd;AACA,YAAIkB,aAAaC,UAAU,CAA3B,EAA8Bd,OAAOA,KAAKG,OAAL,CAAaR,gBAAb,EAA+B,EAA/B,CAAP;AAC/B;;AAED,eAASiB,WAAT,CAAqBH,MAArB,EAA6B;AAC3B,eAAO,CAACT,KAAKe,KAAL,CAAWN,MAAX,KAAsB,EAAvB,EAA2BO,MAAlC;AACD;AACF,KAnCD","file":"compile-dots.js","sourcesContent":["//compile doT templates to js functions\n'use strict';\n\nvar glob = require('glob')\n  , fs = require('fs')\n  , path = require('path')\n  , doT = require('dot')\n  , beautify = require('js-beautify').js_beautify;\n\nvar defsRootPath = process.argv[2] || path.join(__dirname, '../lib');\n\nvar defs = {};\nvar defFiles = glob.sync('./dot/**/*.def', { cwd: defsRootPath });\ndefFiles.forEach(function (f) {\n  var name = path.basename(f, '.def');\n  defs[name] = fs.readFileSync(path.join(defsRootPath, f));\n});\n\nvar filesRootPath = process.argv[3] || path.join(__dirname, '../lib');\nvar files = glob.sync('./dot/**/*.jst', { cwd: filesRootPath });\n\nvar dotjsPath = path.join(filesRootPath, './dotjs');\ntry { fs.mkdirSync(dotjsPath); } catch(e) {}\n\nconsole.log('\\n\\nCompiling:');\n\nvar FUNCTION_NAME = /function\\s+anonymous\\s*\\(it[^)]*\\)\\s*{/;\nvar OUT_EMPTY_STRING = /out\\s*\\+=\\s*'\\s*';/g;\nvar ISTANBUL = /'(istanbul[^']+)';/g;\nvar ERROR_KEYWORD = /\\$errorKeyword/g;\nvar ERROR_KEYWORD_OR = /\\$errorKeyword\\s+\\|\\|/g;\nvar VARS = [\n  '$errs', '$valid', '$lvl', '$data', '$dataLvl',\n  '$errorKeyword', '$closingBraces', '$schemaPath',\n  '$validate'\n];\n\nfiles.forEach(function (f) {\n  var keyword = path.basename(f, '.jst');\n  var targetPath = path.join(dotjsPath, keyword + '.js');\n  var template = fs.readFileSync(path.join(filesRootPath, f));\n  var code = doT.compile(template, defs);\n  code = code.toString()\n             .replace(OUT_EMPTY_STRING, '')\n             .replace(FUNCTION_NAME, 'function generate_' + keyword + '(it, $keyword, $ruleType) {')\n             .replace(ISTANBUL, '/* $1 */');\n  removeAlwaysFalsyInOr();\n  VARS.forEach(removeUnusedVar);\n  code = \"'use strict';\\nmodule.exports = \" + code;\n  code = beautify(code, { indent_size: 2 }) + '\\n';\n  fs.writeFileSync(targetPath, code);\n  console.log('compiled', keyword);\n\n  function removeUnusedVar(v) {\n    v = v.replace(/\\$/g, '\\\\$$');\n    var regexp = new RegExp(v + '[^A-Za-z0-9_$]', 'g');\n    var count = occurrences(regexp);\n    if (count == 1) {\n      regexp = new RegExp('var\\\\s+' + v + '\\\\s*=[^;]+;|var\\\\s+' + v + ';');\n      code = code.replace(regexp, '');\n    }\n  }\n\n  function removeAlwaysFalsyInOr() {\n    var countUsed = occurrences(ERROR_KEYWORD);\n    var countOr = occurrences(ERROR_KEYWORD_OR);\n    if (countUsed == countOr + 1) code = code.replace(ERROR_KEYWORD_OR, '');\n  }\n\n  function occurrences(regexp) {\n    return (code.match(regexp) || []).length;\n  }\n});\n"]}