{"version":3,"sources":["util.js"],"names":["module","exports","copy","checkDataType","checkDataTypes","coerceToTypes","toHash","getProperty","escapeQuotes","equal","require","ucs2length","varOccurences","varReplace","schemaHasRules","schemaHasRulesExcept","schemaUnknownRules","toQuotedString","getPathExpr","getPath","getData","unescapeFragment","unescapeJsonPointer","escapeFragment","escapeJsonPointer","o","to","key","dataType","data","strictNumbers","negate","EQUAL","AND","OK","NOT","dataTypes","length","code","types","array","object","null","number","integer","t","COERCE_TO_TYPES","optionCoerceTypes","Array","isArray","i","arr","hash","IDENTIFIER","SINGLE_QUOTE","test","str","replace","dataVar","matches","match","RegExp","expr","schema","rules","exceptKeyword","currentPath","jsonPointers","isNumber","path","joinPaths","prop","JSON_POINTER","RELATIVE_JSON_POINTER","$data","lvl","paths","up","jsonPointer","Error","segments","split","segment","a","b","decodeURIComponent","encodeURIComponent"],"mappings":"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","file":"util.js","sourcesContent":["'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, strictNumbers, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data +\n                           (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    case 'number': return '(typeof ' + data + EQUAL + '\"' + dataType + '\"' +\n                          (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data, strictNumbers) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, strictNumbers, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, strictNumbers, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/([^\\\\])' \\+ '/g, '$1');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n"]}