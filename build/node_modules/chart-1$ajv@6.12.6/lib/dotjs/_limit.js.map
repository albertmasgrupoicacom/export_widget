{"version":3,"sources":["_limit.js"],"names":["module","exports","generate__limit","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$isData","$schemaValue","getData","dataPathArr","$isMax","$exclusiveKeyword","$schemaExcl","$isDataExcl","$op","$notOp","undefined","Error","$schemaValueExcl","$exclusive","$exclType","$exclIsNumber","$opExpr","$opStr","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async","Math"],"mappings":"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","file":"_limit.js","sourcesContent":["'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if (!($isData || typeof $schema == 'number' || $schema === undefined)) {\n    throw new Error($keyword + ' must be number');\n  }\n  if (!($isDataExcl || $schemaExcl === undefined || typeof $schemaExcl == 'number' || typeof $schemaExcl == 'boolean')) {\n    throw new Error($exclusiveKeyword + ' must be number or boolean');\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}