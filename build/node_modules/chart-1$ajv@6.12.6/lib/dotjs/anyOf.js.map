{"version":3,"sources":["anyOf.js"],"names":["module","exports","generate_anyOf","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$valid","$errs","$it","copy","$closingBraces","$nextValid","$noEmptySchema","every","$sch","strictKeywords","Object","keys","length","schemaHasRules","RULES","all","$currentBaseId","baseId","$wasComposite","compositeRule","arr1","$i","l1","validate","createErrors","errorPath","toQuotedString","messages","verbose","async"],"mappings":"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","file":"anyOf.js","sourcesContent":["'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return (it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all));\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n"]}