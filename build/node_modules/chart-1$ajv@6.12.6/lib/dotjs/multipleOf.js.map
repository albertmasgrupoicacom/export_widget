{"version":3,"sources":["multipleOf.js"],"names":["module","exports","generate_multipleOf","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$isData","$schemaValue","getData","dataPathArr","Error","multipleOfPrecision","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async"],"mappings":"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","file":"multipleOf.js","sourcesContent":["'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}