{"version":3,"sources":["properties.js"],"names":["module","exports","generate_properties","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$errs","$it","copy","$closingBraces","$nextValid","$key","$idx","$dataNxt","$nextData","$dataProperties","$schemaKeys","Object","keys","filter","notProto","$pProperties","patternProperties","$pPropertyKeys","$aProperties","additionalProperties","$someProperties","length","$noAdditional","$additionalIsSchema","$removeAdditional","removeAdditional","$ownProperties","ownProperties","$currentBaseId","baseId","$required","required","loopRequired","$requiredHash","toHash","p","arr1","$propertyKey","i1","l1","toQuotedString","arr2","$pProperty","$i","l2","usePattern","$currentErrorPath","errorPath","_errorDataPathProperty","getPathExpr","jsonPointers","$currErrSchemaPath","$$outStack","push","createErrors","messages","verbose","__err","pop","compositeRule","async","$wasComposite","$passData","dataPathArr","$code","validate","varOccurences","varReplace","$useDefaults","useDefaults","arr3","i3","l3","$sch","strictKeywords","schemaHasRules","RULES","all","$prop","$hasDefault","default","undefined","escapeFragment","getPath","$useData","escapeQuotes","$missingProperty","arr4","i4","l4"],"mappings":"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","file":"properties.js","sourcesContent":["'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}).filter(notProto),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties).filter(notProto),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {\n    var $requiredHash = it.util.toHash($required);\n  }\n\n  function notProto(p) {\n    return p !== '__proto__';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n"]}