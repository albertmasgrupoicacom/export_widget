{"version":3,"sources":["not.js"],"names":["module","exports","generate_not","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$errs","$it","copy","$nextValid","strictKeywords","Object","keys","length","schemaHasRules","RULES","all","$wasComposite","compositeRule","createErrors","$allErrorsOption","validate","$$outStack","push","errorPath","toQuotedString","messages","verbose","__err","pop","async"],"mappings":"AAAA;;;;;;AACAA,WAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+C;AAC9D,UAAIC,MAAM,GAAV;AACA,UAAIC,OAAOJ,GAAGK,KAAd;AACA,UAAIC,WAAWN,GAAGO,SAAlB;AACA,UAAIC,UAAUR,GAAGS,MAAH,CAAUR,QAAV,CAAd;AACA,UAAIS,cAAcV,GAAGW,UAAH,GAAgBX,GAAGY,IAAH,CAAQC,WAAR,CAAoBZ,QAApB,CAAlC;AACA,UAAIa,iBAAiBd,GAAGe,aAAH,GAAmB,GAAnB,GAAyBd,QAA9C;AACA,UAAIe,gBAAgB,CAAChB,GAAGiB,IAAH,CAAQC,SAA7B;AACA,UAAIC,QAAQ,UAAUb,YAAY,EAAtB,CAAZ;AACA,UAAIc,QAAQ,WAAWhB,IAAvB;AACA,UAAIiB,MAAMrB,GAAGY,IAAH,CAAQU,IAAR,CAAatB,EAAb,CAAV;AACAqB,UAAIhB,KAAJ;AACA,UAAIkB,aAAa,UAAUF,IAAIhB,KAA/B;AACA,UAAKL,GAAGiB,IAAH,CAAQO,cAAR,GAA0B,OAAOhB,OAAP,IAAkB,QAAlB,IAA8BiB,OAAOC,IAAP,CAAYlB,OAAZ,EAAqBmB,MAArB,GAA8B,CAA7D,IAAmEnB,YAAY,KAAxG,GAAgHR,GAAGY,IAAH,CAAQgB,cAAR,CAAuBpB,OAAvB,EAAgCR,GAAG6B,KAAH,CAASC,GAAzC,CAArH,EAAqK;AACnKT,YAAIZ,MAAJ,GAAaD,OAAb;AACAa,YAAIV,UAAJ,GAAiBD,WAAjB;AACAW,YAAIN,aAAJ,GAAoBD,cAApB;AACAX,eAAO,UAAWiB,KAAX,GAAoB,cAA3B;AACA,YAAIW,gBAAgB/B,GAAGgC,aAAvB;AACAhC,WAAGgC,aAAH,GAAmBX,IAAIW,aAAJ,GAAoB,IAAvC;AACAX,YAAIY,YAAJ,GAAmB,KAAnB;AACA,YAAIC,gBAAJ;AACA,YAAIb,IAAIJ,IAAJ,CAASC,SAAb,EAAwB;AACtBgB,6BAAmBb,IAAIJ,IAAJ,CAASC,SAA5B;AACAG,cAAIJ,IAAJ,CAASC,SAAT,GAAqB,KAArB;AACD;AACDf,eAAO,MAAOH,GAAGmC,QAAH,CAAYd,GAAZ,CAAP,GAA2B,GAAlC;AACAA,YAAIY,YAAJ,GAAmB,IAAnB;AACA,YAAIC,gBAAJ,EAAsBb,IAAIJ,IAAJ,CAASC,SAAT,GAAqBgB,gBAArB;AACtBlC,WAAGgC,aAAH,GAAmBX,IAAIW,aAAJ,GAAoBD,aAAvC;AACA5B,eAAO,UAAWoB,UAAX,GAAyB,QAAhC;AACA,YAAIa,aAAaA,cAAc,EAA/B;AACAA,mBAAWC,IAAX,CAAgBlC,GAAhB;AACAA,cAAM,EAAN,CApBmK,CAoBzJ;AACV,YAAIH,GAAGiC,YAAH,KAAoB,KAAxB,EAA+B;AAC7B9B,iBAAO,mBAAoB,KAApB,GAA6B,sCAA7B,GAAuEH,GAAGsC,SAA1E,GAAuF,iBAAvF,GAA4GtC,GAAGY,IAAH,CAAQ2B,cAAR,CAAuBzB,cAAvB,CAA5G,GAAsJ,gBAA7J;AACA,cAAId,GAAGiB,IAAH,CAAQuB,QAAR,KAAqB,KAAzB,EAAgC;AAC9BrC,mBAAO,sCAAP;AACD;AACD,cAAIH,GAAGiB,IAAH,CAAQwB,OAAZ,EAAqB;AACnBtC,mBAAO,+BAAgCO,WAAhC,GAA+C,kCAA/C,GAAqFV,GAAGW,UAAxF,GAAsG,WAAtG,GAAqHQ,KAArH,GAA8H,GAArI;AACD;AACDhB,iBAAO,KAAP;AACD,SATD,MASO;AACLA,iBAAO,MAAP;AACD;AACD,YAAIuC,QAAQvC,GAAZ;AACAA,cAAMiC,WAAWO,GAAX,EAAN;AACA,YAAI,CAAC3C,GAAGgC,aAAJ,IAAqBhB,aAAzB,EAAwC;AACtC;AACA,cAAIhB,GAAG4C,KAAP,EAAc;AACZzC,mBAAO,iCAAkCuC,KAAlC,GAA2C,MAAlD;AACD,WAFD,MAEO;AACLvC,mBAAO,yBAA0BuC,KAA1B,GAAmC,mBAA1C;AACD;AACF,SAPD,MAOO;AACLvC,iBAAO,gBAAiBuC,KAAjB,GAA0B,8EAAjC;AACD;AACDvC,eAAO,yBAA0BiB,KAA1B,GAAmC,gCAAnC,GAAuEA,KAAvE,GAAgF,qBAAhF,GAAyGA,KAAzG,GAAkH,2BAAzH;AACA,YAAIpB,GAAGiB,IAAH,CAAQC,SAAZ,EAAuB;AACrBf,iBAAO,KAAP;AACD;AACF,OAjDD,MAiDO;AACLA,eAAO,gBAAP,CADK,CACoB;AACzB,YAAIH,GAAGiC,YAAH,KAAoB,KAAxB,EAA+B;AAC7B9B,iBAAO,mBAAoB,KAApB,GAA6B,sCAA7B,GAAuEH,GAAGsC,SAA1E,GAAuF,iBAAvF,GAA4GtC,GAAGY,IAAH,CAAQ2B,cAAR,CAAuBzB,cAAvB,CAA5G,GAAsJ,gBAA7J;AACA,cAAId,GAAGiB,IAAH,CAAQuB,QAAR,KAAqB,KAAzB,EAAgC;AAC9BrC,mBAAO,sCAAP;AACD;AACD,cAAIH,GAAGiB,IAAH,CAAQwB,OAAZ,EAAqB;AACnBtC,mBAAO,+BAAgCO,WAAhC,GAA+C,kCAA/C,GAAqFV,GAAGW,UAAxF,GAAsG,WAAtG,GAAqHQ,KAArH,GAA8H,GAArI;AACD;AACDhB,iBAAO,KAAP;AACD,SATD,MASO;AACLA,iBAAO,MAAP;AACD;AACDA,eAAO,8EAAP;AACA,YAAIa,aAAJ,EAAmB;AACjBb,iBAAO,gBAAP;AACD;AACF;AACD,aAAOA,GAAP;AACD,KAlFD","file":"not.js","sourcesContent":["'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n"]}