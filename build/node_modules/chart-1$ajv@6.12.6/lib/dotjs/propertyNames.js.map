{"version":3,"sources":["propertyNames.js"],"names":["module","exports","generate_propertyNames","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$errs","$it","copy","$nextValid","strictKeywords","Object","keys","length","schemaHasRules","RULES","all","$key","$idx","$i","$invalidName","$dataNxt","$nextData","$dataProperties","$ownProperties","ownProperties","$currentBaseId","baseId","$passData","$wasComposite","compositeRule","$code","validate","varOccurences","varReplace","createErrors","errorPath","toQuotedString","messages","verbose","async"],"mappings":"AAAA;;;;;;AACAA,WAAOC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,EAAhC,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyD;AACxE,UAAIC,MAAM,GAAV;AACA,UAAIC,OAAOJ,GAAGK,KAAd;AACA,UAAIC,WAAWN,GAAGO,SAAlB;AACA,UAAIC,UAAUR,GAAGS,MAAH,CAAUR,QAAV,CAAd;AACA,UAAIS,cAAcV,GAAGW,UAAH,GAAgBX,GAAGY,IAAH,CAAQC,WAAR,CAAoBZ,QAApB,CAAlC;AACA,UAAIa,iBAAiBd,GAAGe,aAAH,GAAmB,GAAnB,GAAyBd,QAA9C;AACA,UAAIe,gBAAgB,CAAChB,GAAGiB,IAAH,CAAQC,SAA7B;AACA,UAAIC,QAAQ,UAAUb,YAAY,EAAtB,CAAZ;AACA,UAAIc,QAAQ,WAAWhB,IAAvB;AACA,UAAIiB,MAAMrB,GAAGY,IAAH,CAAQU,IAAR,CAAatB,EAAb,CAAV;;AAEAqB,UAAIhB,KAAJ;AACA,UAAIkB,aAAa,UAAUF,IAAIhB,KAA/B;AACAF,aAAO,SAAUiB,KAAV,GAAmB,YAA1B;AACA,UAAKpB,GAAGiB,IAAH,CAAQO,cAAR,GAA0B,OAAOhB,OAAP,IAAkB,QAAlB,IAA8BiB,OAAOC,IAAP,CAAYlB,OAAZ,EAAqBmB,MAArB,GAA8B,CAA7D,IAAmEnB,YAAY,KAAxG,GAAgHR,GAAGY,IAAH,CAAQgB,cAAR,CAAuBpB,OAAvB,EAAgCR,GAAG6B,KAAH,CAASC,GAAzC,CAArH,EAAqK;AACnKT,YAAIZ,MAAJ,GAAaD,OAAb;AACAa,YAAIV,UAAJ,GAAiBD,WAAjB;AACAW,YAAIN,aAAJ,GAAoBD,cAApB;AACA,YAAIiB,OAAO,QAAQ3B,IAAnB;AAAA,YACE4B,OAAO,QAAQ5B,IADjB;AAAA,YAEE6B,KAAK,MAAM7B,IAFb;AAAA,YAGE8B,eAAe,UAAUH,IAAV,GAAiB,OAHlC;AAAA,YAIEI,WAAWd,IAAId,SAAJ,GAAgBP,GAAGO,SAAH,GAAe,CAJ5C;AAAA,YAKE6B,YAAY,SAASD,QALvB;AAAA,YAMEE,kBAAkB,mBAAmBjC,IANvC;AAAA,YAOEkC,iBAAiBtC,GAAGiB,IAAH,CAAQsB,aAP3B;AAAA,YAQEC,iBAAiBxC,GAAGyC,MARtB;AASA,YAAIH,cAAJ,EAAoB;AAClBnC,iBAAO,UAAWkC,eAAX,GAA8B,gBAArC;AACD;AACD,YAAIC,cAAJ,EAAoB;AAClBnC,iBAAO,MAAOkC,eAAP,GAA0B,KAA1B,GAAmCA,eAAnC,GAAsD,kBAAtD,GAA4ElB,KAA5E,GAAqF,cAArF,GAAuGa,IAAvG,GAA+G,MAA/G,GAAyHA,IAAzH,GAAiI,GAAjI,GAAwIK,eAAxI,GAA2J,WAA3J,GAA0KL,IAA1K,GAAkL,YAAlL,GAAkMD,IAAlM,GAA0M,KAA1M,GAAmNM,eAAnN,GAAsO,GAAtO,GAA6OL,IAA7O,GAAqP,KAA5P;AACD,SAFD,MAEO;AACL7B,iBAAO,eAAgB4B,IAAhB,GAAwB,MAAxB,GAAkCZ,KAAlC,GAA2C,MAAlD;AACD;AACDhB,eAAO,mBAAoBC,IAApB,GAA4B,aAAnC;AACA,YAAIsC,YAAYX,IAAhB;AACA,YAAIY,gBAAgB3C,GAAG4C,aAAvB;AACA5C,WAAG4C,aAAH,GAAmBvB,IAAIuB,aAAJ,GAAoB,IAAvC;AACA,YAAIC,QAAQ7C,GAAG8C,QAAH,CAAYzB,GAAZ,CAAZ;AACAA,YAAIoB,MAAJ,GAAaD,cAAb;AACA,YAAIxC,GAAGY,IAAH,CAAQmC,aAAR,CAAsBF,KAAtB,EAA6BT,SAA7B,IAA0C,CAA9C,EAAiD;AAC/CjC,iBAAO,MAAOH,GAAGY,IAAH,CAAQoC,UAAR,CAAmBH,KAAnB,EAA0BT,SAA1B,EAAqCM,SAArC,CAAP,GAA0D,GAAjE;AACD,SAFD,MAEO;AACLvC,iBAAO,UAAWiC,SAAX,GAAwB,KAAxB,GAAiCM,SAAjC,GAA8C,IAA9C,GAAsDG,KAAtD,GAA+D,GAAtE;AACD;AACD7C,WAAG4C,aAAH,GAAmBvB,IAAIuB,aAAJ,GAAoBD,aAAvC;AACAxC,eAAO,WAAYoB,UAAZ,GAA0B,eAA1B,GAA6CU,EAA7C,GAAmD,YAAnD,GAAmE7B,IAAnE,GAA2E,IAA3E,GAAmF6B,EAAnF,GAAyF,WAAzF,GAAwGA,EAAxG,GAA8G,gBAA9G,GAAkIA,EAAlI,GAAwI,mBAAxI,GAA+JF,IAA/J,GAAuK,oBAA9K,CAjCmK,CAiCiC;AACpM,YAAI/B,GAAGiD,YAAH,KAAoB,KAAxB,EAA+B;AAC7B9C,iBAAO,mBAAoB,eAApB,GAAuC,sCAAvC,GAAiFH,GAAGkD,SAApF,GAAiG,iBAAjG,GAAsHlD,GAAGY,IAAH,CAAQuC,cAAR,CAAuBrC,cAAvB,CAAtH,GAAgK,+BAAhK,GAAmMoB,YAAnM,GAAmN,OAA1N;AACA,cAAIlC,GAAGiB,IAAH,CAAQmC,QAAR,KAAqB,KAAzB,EAAgC;AAC9BjD,mBAAO,qCAAsC+B,YAAtC,GAAsD,oBAA7D;AACD;AACD,cAAIlC,GAAGiB,IAAH,CAAQoC,OAAZ,EAAqB;AACnBlD,mBAAO,+BAAgCO,WAAhC,GAA+C,kCAA/C,GAAqFV,GAAGW,UAAxF,GAAsG,WAAtG,GAAqHQ,KAArH,GAA8H,GAArI;AACD;AACDhB,iBAAO,KAAP;AACD,SATD,MASO;AACLA,iBAAO,MAAP;AACD;AACDA,eAAO,8EAAP;AACA,YAAI,CAACH,GAAG4C,aAAJ,IAAqB5B,aAAzB,EAAwC;AACtC;AACA,cAAIhB,GAAGsD,KAAP,EAAc;AACZnD,mBAAO,uCAAP;AACD,WAFD,MAEO;AACLA,mBAAO,4CAAP;AACD;AACF;AACD,YAAIa,aAAJ,EAAmB;AACjBb,iBAAO,UAAP;AACD;AACDA,eAAO,MAAP;AACD;AACD,UAAIa,aAAJ,EAAmB;AACjBb,eAAO,MAjEY,EAiEZ,GAAyB,OAAzB,GAAoCiB,KAApC,GAA6C,eAApD;AACD;AACD,aAAOjB,GAAP;AACD,KA/ED","file":"propertyNames.js","sourcesContent":["'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;';\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n"]}