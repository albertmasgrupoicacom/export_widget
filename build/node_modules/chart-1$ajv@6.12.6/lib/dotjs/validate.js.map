{"version":3,"sources":["validate.js"],"names":["module","exports","generate_validate","it","$keyword","$ruleType","out","$async","schema","$refKeywords","util","schemaHasRulesExcept","RULES","all","$id","self","_getId","opts","strictKeywords","$unknownKwd","schemaUnknownRules","keywords","$keywordsMsg","logger","warn","Error","isTop","async","sourceCode","processCode","$ref","$lvl","level","$dataLvl","dataLevel","$schema","$schemaPath","schemaPath","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","allErrors","$errorKeyword","$data","$valid","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","$top","rootId","resolve","fullPath","root","baseId","dataPathArr","default","undefined","useDefaults","strictDefaults","$defaultMsg","url","$closingBraces1","$closingBraces2","$typeSchema","type","$typeIsArray","Array","isArray","nullable","indexOf","concat","length","extendRefs","$comment","code","coerceTypes","$coerceToTypes","coerceToTypes","$rulesGroup","types","$shouldUseGroup","$method","strictNumbers","$dataType","$coerced","checkDataType","arr1","$type","$i","l1","join","$parentData","$parentDataProperty","arr2","i2","l2","properties","$schemaKeys","Object","keys","arr3","$propertyKey","i3","l3","$sch","$passData","useDefault","JSON","stringify","items","arr4","l4","arr5","rules","$rule","i5","l5","$shouldUseRule","$code","keyword","i","implements","$ruleImplementsSomeKeyword","impl"],"mappings":"AAAA;;;;;;AACAA,WAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoD;AACnE,UAAIC,MAAM,EAAV;AACA,UAAIC,SAASJ,GAAGK,MAAH,CAAUD,MAAV,KAAqB,IAAlC;AAAA,UACEE,eAAeN,GAAGO,IAAH,CAAQC,oBAAR,CAA6BR,GAAGK,MAAhC,EAAwCL,GAAGS,KAAH,CAASC,GAAjD,EAAsD,MAAtD,CADjB;AAAA,UAEEC,MAAMX,GAAGY,IAAH,CAAQC,MAAR,CAAeb,GAAGK,MAAlB,CAFR;AAGA,UAAIL,GAAGc,IAAH,CAAQC,cAAZ,EAA4B;AAC1B,YAAIC,cAAchB,GAAGO,IAAH,CAAQU,kBAAR,CAA2BjB,GAAGK,MAA9B,EAAsCL,GAAGS,KAAH,CAASS,QAA/C,CAAlB;AACA,YAAIF,WAAJ,EAAiB;AACf,cAAIG,eAAe,sBAAsBH,WAAzC;AACA,cAAIhB,GAAGc,IAAH,CAAQC,cAAR,KAA2B,KAA/B,EAAsCf,GAAGoB,MAAH,CAAUC,IAAV,CAAeF,YAAf,EAAtC,KACK,MAAM,IAAIG,KAAJ,CAAUH,YAAV,CAAN;AACN;AACF;AACD,UAAInB,GAAGuB,KAAP,EAAc;AACZpB,eAAO,kBAAP;AACA,YAAIC,MAAJ,EAAY;AACVJ,aAAGwB,KAAH,GAAW,IAAX;AACArB,iBAAO,QAAP;AACD;AACDA,eAAO,uFAAP;AACA,YAAIQ,QAAQX,GAAGc,IAAH,CAAQW,UAAR,IAAsBzB,GAAGc,IAAH,CAAQY,WAAtC,CAAJ,EAAwD;AACtDvB,iBAAO,OAAO,oBAAoBQ,GAApB,GAA0B,KAAjC,IAA0C,GAAjD;AACD;AACF;AACD,UAAI,OAAOX,GAAGK,MAAV,IAAoB,SAApB,IAAiC,EAAEC,gBAAgBN,GAAGK,MAAH,CAAUsB,IAA5B,CAArC,EAAwE;AACtE,YAAI1B,WAAW,cAAf;AACA,YAAI2B,OAAO5B,GAAG6B,KAAd;AACA,YAAIC,WAAW9B,GAAG+B,SAAlB;AACA,YAAIC,UAAUhC,GAAGK,MAAH,CAAUJ,QAAV,CAAd;AACA,YAAIgC,cAAcjC,GAAGkC,UAAH,GAAgBlC,GAAGO,IAAH,CAAQ4B,WAAR,CAAoBlC,QAApB,CAAlC;AACA,YAAImC,iBAAiBpC,GAAGqC,aAAH,GAAmB,GAAnB,GAAyBpC,QAA9C;AACA,YAAIqC,gBAAgB,CAACtC,GAAGc,IAAH,CAAQyB,SAA7B;AACA,YAAIC,aAAJ;AACA,YAAIC,QAAQ,UAAUX,YAAY,EAAtB,CAAZ;AACA,YAAIY,SAAS,UAAUd,IAAvB;AACA,YAAI5B,GAAGK,MAAH,KAAc,KAAlB,EAAyB;AACvB,cAAIL,GAAGuB,KAAP,EAAc;AACZe,4BAAgB,IAAhB;AACD,WAFD,MAEO;AACLnC,mBAAO,UAAWuC,MAAX,GAAqB,YAA5B;AACD;AACD,cAAIC,aAAaA,cAAc,EAA/B;AACAA,qBAAWC,IAAX,CAAgBzC,GAAhB;AACAA,gBAAM,EAAN,CARuB,CAQb;AACV,cAAIH,GAAG6C,YAAH,KAAoB,KAAxB,EAA+B;AAC7B1C,mBAAO,oBAAoBqC,iBAAiB,cAArC,IAAuD,sCAAvD,GAAiGxC,GAAG8C,SAApG,GAAiH,iBAAjH,GAAsI9C,GAAGO,IAAH,CAAQwC,cAAR,CAAuBX,cAAvB,CAAtI,GAAgL,gBAAvL;AACA,gBAAIpC,GAAGc,IAAH,CAAQkC,QAAR,KAAqB,KAAzB,EAAgC;AAC9B7C,qBAAO,0CAAP;AACD;AACD,gBAAIH,GAAGc,IAAH,CAAQmC,OAAZ,EAAqB;AACnB9C,qBAAO,qDAAsDH,GAAGkC,UAAzD,GAAuE,WAAvE,GAAsFO,KAAtF,GAA+F,GAAtG;AACD;AACDtC,mBAAO,KAAP;AACD,WATD,MASO;AACLA,mBAAO,MAAP;AACD;AACD,cAAI+C,QAAQ/C,GAAZ;AACAA,gBAAMwC,WAAWQ,GAAX,EAAN;AACA,cAAI,CAACnD,GAAGoD,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,gBAAItC,GAAGwB,KAAP,EAAc;AACZrB,qBAAO,iCAAkC+C,KAAlC,GAA2C,MAAlD;AACD,aAFD,MAEO;AACL/C,qBAAO,yBAA0B+C,KAA1B,GAAmC,mBAA1C;AACD;AACF,WAPD,MAOO;AACL/C,mBAAO,gBAAiB+C,KAAjB,GAA0B,8EAAjC;AACD;AACF,SAjCD,MAiCO;AACL,cAAIlD,GAAGuB,KAAP,EAAc;AACZ,gBAAInB,MAAJ,EAAY;AACVD,qBAAO,gBAAP;AACD,aAFD,MAEO;AACLA,qBAAO,wCAAP;AACD;AACF,WAND,MAMO;AACLA,mBAAO,UAAWuC,MAAX,GAAqB,WAA5B;AACD;AACF;AACD,YAAI1C,GAAGuB,KAAP,EAAc;AACZpB,iBAAO,uBAAP;AACD;AACD,eAAOA,GAAP;AACD;AACD,UAAIH,GAAGuB,KAAP,EAAc;AACZ,YAAI8B,OAAOrD,GAAGuB,KAAd;AAAA,YACEK,OAAO5B,GAAG6B,KAAH,GAAW,CADpB;AAAA,YAEEC,WAAW9B,GAAG+B,SAAH,GAAe,CAF5B;AAAA,YAGEU,QAAQ,MAHV;AAIAzC,WAAGsD,MAAH,GAAYtD,GAAGuD,OAAH,CAAWC,QAAX,CAAoBxD,GAAGY,IAAH,CAAQC,MAAR,CAAeb,GAAGyD,IAAH,CAAQpD,MAAvB,CAApB,CAAZ;AACAL,WAAG0D,MAAH,GAAY1D,GAAG0D,MAAH,IAAa1D,GAAGsD,MAA5B;AACA,eAAOtD,GAAGuB,KAAV;AACAvB,WAAG2D,WAAH,GAAiB,CAAC,EAAD,CAAjB;AACA,YAAI3D,GAAGK,MAAH,CAAUuD,OAAV,KAAsBC,SAAtB,IAAmC7D,GAAGc,IAAH,CAAQgD,WAA3C,IAA0D9D,GAAGc,IAAH,CAAQiD,cAAtE,EAAsF;AACpF,cAAIC,cAAc,uCAAlB;AACA,cAAIhE,GAAGc,IAAH,CAAQiD,cAAR,KAA2B,KAA/B,EAAsC/D,GAAGoB,MAAH,CAAUC,IAAV,CAAe2C,WAAf,EAAtC,KACK,MAAM,IAAI1C,KAAJ,CAAU0C,WAAV,CAAN;AACN;AACD7D,eAAO,uBAAP;AACAA,eAAO,uBAAP;AACAA,eAAO,gDAAP;AACD,OAjBD,MAiBO;AACL,YAAIyB,OAAO5B,GAAG6B,KAAd;AAAA,YACEC,WAAW9B,GAAG+B,SADhB;AAAA,YAEEU,QAAQ,UAAUX,YAAY,EAAtB,CAFV;AAGA,YAAInB,GAAJ,EAASX,GAAG0D,MAAH,GAAY1D,GAAGuD,OAAH,CAAWU,GAAX,CAAejE,GAAG0D,MAAlB,EAA0B/C,GAA1B,CAAZ;AACT,YAAIP,UAAU,CAACJ,GAAGwB,KAAlB,EAAyB,MAAM,IAAIF,KAAJ,CAAU,6BAAV,CAAN;AACzBnB,eAAO,eAAgByB,IAAhB,GAAwB,YAA/B;AACD;AACD,UAAIc,SAAS,UAAUd,IAAvB;AAAA,UACEU,gBAAgB,CAACtC,GAAGc,IAAH,CAAQyB,SAD3B;AAAA,UAEE2B,kBAAkB,EAFpB;AAAA,UAGEC,kBAAkB,EAHpB;AAIA,UAAI3B,aAAJ;AACA,UAAI4B,cAAcpE,GAAGK,MAAH,CAAUgE,IAA5B;AAAA,UACEC,eAAeC,MAAMC,OAAN,CAAcJ,WAAd,CADjB;AAEA,UAAIA,eAAepE,GAAGc,IAAH,CAAQ2D,QAAvB,IAAmCzE,GAAGK,MAAH,CAAUoE,QAAV,KAAuB,IAA9D,EAAoE;AAClE,YAAIH,YAAJ,EAAkB;AAChB,cAAIF,YAAYM,OAAZ,CAAoB,MAApB,KAA+B,CAAC,CAApC,EAAuCN,cAAcA,YAAYO,MAAZ,CAAmB,MAAnB,CAAd;AACxC,SAFD,MAEO,IAAIP,eAAe,MAAnB,EAA2B;AAChCA,wBAAc,CAACA,WAAD,EAAc,MAAd,CAAd;AACAE,yBAAe,IAAf;AACD;AACF;AACD,UAAIA,gBAAgBF,YAAYQ,MAAZ,IAAsB,CAA1C,EAA6C;AAC3CR,sBAAcA,YAAY,CAAZ,CAAd;AACAE,uBAAe,KAAf;AACD;AACD,UAAItE,GAAGK,MAAH,CAAUsB,IAAV,IAAkBrB,YAAtB,EAAoC;AAClC,YAAIN,GAAGc,IAAH,CAAQ+D,UAAR,IAAsB,MAA1B,EAAkC;AAChC,gBAAM,IAAIvD,KAAJ,CAAU,uDAAuDtB,GAAGqC,aAA1D,GAA0E,2BAApF,CAAN;AACD,SAFD,MAEO,IAAIrC,GAAGc,IAAH,CAAQ+D,UAAR,KAAuB,IAA3B,EAAiC;AACtCvE,yBAAe,KAAf;AACAN,aAAGoB,MAAH,CAAUC,IAAV,CAAe,+CAA+CrB,GAAGqC,aAAlD,GAAkE,GAAjF;AACD;AACF;AACD,UAAIrC,GAAGK,MAAH,CAAUyE,QAAV,IAAsB9E,GAAGc,IAAH,CAAQgE,QAAlC,EAA4C;AAC1C3E,eAAO,MAAOH,GAAGS,KAAH,CAASC,GAAT,CAAaoE,QAAb,CAAsBC,IAAtB,CAA2B/E,EAA3B,EAA+B,UAA/B,CAAd;AACD;AACD,UAAIoE,WAAJ,EAAiB;AACf,YAAIpE,GAAGc,IAAH,CAAQkE,WAAZ,EAAyB;AACvB,cAAIC,iBAAiBjF,GAAGO,IAAH,CAAQ2E,aAAR,CAAsBlF,GAAGc,IAAH,CAAQkE,WAA9B,EAA2CZ,WAA3C,CAArB;AACD;AACD,YAAIe,cAAcnF,GAAGS,KAAH,CAAS2E,KAAT,CAAehB,WAAf,CAAlB;AACA,YAAIa,kBAAkBX,YAAlB,IAAkCa,gBAAgB,IAAlD,IAA2DA,eAAe,CAACE,gBAAgBF,WAAhB,CAA/E,EAA8G;AAC5G,cAAIlD,cAAcjC,GAAGkC,UAAH,GAAgB,OAAlC;AAAA,cACEE,iBAAiBpC,GAAGqC,aAAH,GAAmB,OADtC;AAEA,cAAIJ,cAAcjC,GAAGkC,UAAH,GAAgB,OAAlC;AAAA,cACEE,iBAAiBpC,GAAGqC,aAAH,GAAmB,OADtC;AAAA,cAEEiD,UAAUhB,eAAe,gBAAf,GAAkC,eAF9C;AAGAnE,iBAAO,UAAWH,GAAGO,IAAH,CAAQ+E,OAAR,EAAiBlB,WAAjB,EAA8B3B,KAA9B,EAAqCzC,GAAGc,IAAH,CAAQyE,aAA7C,EAA4D,IAA5D,CAAX,GAAgF,MAAvF;AACA,cAAIN,cAAJ,EAAoB;AAClB,gBAAIO,YAAY,aAAa5D,IAA7B;AAAA,gBACE6D,WAAW,YAAY7D,IADzB;AAEAzB,mBAAO,UAAWqF,SAAX,GAAwB,YAAxB,GAAwC/C,KAAxC,GAAiD,QAAjD,GAA6DgD,QAA7D,GAAyE,gBAAhF;AACA,gBAAIzF,GAAGc,IAAH,CAAQkE,WAAR,IAAuB,OAA3B,EAAoC;AAClC7E,qBAAO,UAAWqF,SAAX,GAAwB,kCAAxB,GAA8D/C,KAA9D,GAAuE,OAAvE,GAAkFA,KAAlF,GAA2F,kBAA3F,GAAiHA,KAAjH,GAA0H,KAA1H,GAAmIA,KAAnI,GAA4I,OAA5I,GAAuJ+C,SAAvJ,GAAoK,YAApK,GAAoL/C,KAApL,GAA6L,QAA7L,GAAyMzC,GAAGO,IAAH,CAAQmF,aAAR,CAAsB1F,GAAGK,MAAH,CAAUgE,IAAhC,EAAsC5B,KAAtC,EAA6CzC,GAAGc,IAAH,CAAQyE,aAArD,CAAzM,GAAgR,IAAhR,GAAwRE,QAAxR,GAAoS,KAApS,GAA6ShD,KAA7S,GAAsT,MAA7T;AACD;AACDtC,mBAAO,UAAWsF,QAAX,GAAuB,oBAA9B;AACA,gBAAIE,OAAOV,cAAX;AACA,gBAAIU,IAAJ,EAAU;AACR,kBAAIC,KAAJ;AAAA,kBAAWC,KAAK,CAAC,CAAjB;AAAA,kBACEC,KAAKH,KAAKf,MAAL,GAAc,CADrB;AAEA,qBAAOiB,KAAKC,EAAZ,EAAgB;AACdF,wBAAQD,KAAKE,MAAM,CAAX,CAAR;AACA,oBAAID,SAAS,QAAb,EAAuB;AACrBzF,yBAAO,eAAgBqF,SAAhB,GAA6B,oBAA7B,GAAqDA,SAArD,GAAkE,mBAAlE,GAAyFC,QAAzF,GAAqG,YAArG,GAAqHhD,KAArH,GAA8H,aAA9H,GAA+IA,KAA/I,GAAwJ,aAAxJ,GAAyKgD,QAAzK,GAAqL,WAA5L;AACD,iBAFD,MAEO,IAAIG,SAAS,QAAT,IAAqBA,SAAS,SAAlC,EAA6C;AAClDzF,yBAAO,eAAgBqF,SAAhB,GAA6B,qBAA7B,GAAsD/C,KAAtD,GAA+D,gBAA/D,GAAmF+C,SAAnF,GAAgG,oBAAhG,GAAwH/C,KAAxH,GAAiI,MAAjI,GAA2IA,KAA3I,GAAoJ,OAApJ,GAA+JA,KAA/J,GAAwK,GAA/K;AACA,sBAAImD,SAAS,SAAb,EAAwB;AACtBzF,2BAAO,WAAYsC,KAAZ,GAAqB,OAA5B;AACD;AACDtC,yBAAO,QAASsF,QAAT,GAAqB,MAArB,GAA+BhD,KAA/B,GAAwC,IAA/C;AACD,iBANM,MAMA,IAAImD,SAAS,SAAb,EAAwB;AAC7BzF,yBAAO,eAAgBsC,KAAhB,GAAyB,oBAAzB,GAAiDA,KAAjD,GAA0D,YAA1D,GAA0EA,KAA1E,GAAmF,aAAnF,GAAoGgD,QAApG,GAAgH,qBAAhH,GAAyIhD,KAAzI,GAAkJ,mBAAlJ,GAAyKA,KAAzK,GAAkL,UAAlL,GAAgMgD,QAAhM,GAA4M,WAAnN;AACD,iBAFM,MAEA,IAAIG,SAAS,MAAb,EAAqB;AAC1BzF,yBAAO,eAAgBsC,KAAhB,GAAyB,eAAzB,GAA4CA,KAA5C,GAAqD,YAArD,GAAqEA,KAArE,GAA8E,cAA9E,GAAgGgD,QAAhG,GAA4G,WAAnH;AACD,iBAFM,MAEA,IAAIzF,GAAGc,IAAH,CAAQkE,WAAR,IAAuB,OAAvB,IAAkCY,SAAS,OAA/C,EAAwD;AAC7DzF,yBAAO,eAAgBqF,SAAhB,GAA6B,oBAA7B,GAAqDA,SAArD,GAAkE,oBAAlE,GAA0FA,SAA1F,GAAuG,qBAAvG,GAAgI/C,KAAhI,GAAyI,YAAzI,GAAyJgD,QAAzJ,GAAqK,MAArK,GAA+KhD,KAA/K,GAAwL,KAA/L;AACD;AACF;AACF;AACDtC,mBAAO,YAAP;AACA,gBAAIwC,aAAaA,cAAc,EAA/B;AACAA,uBAAWC,IAAX,CAAgBzC,GAAhB;AACAA,kBAAM,EAAN,CAlCkB,CAkCR;AACV,gBAAIH,GAAG6C,YAAH,KAAoB,KAAxB,EAA+B;AAC7B1C,qBAAO,oBAAoBqC,iBAAiB,MAArC,IAA+C,sCAA/C,GAAyFxC,GAAG8C,SAA5F,GAAyG,iBAAzG,GAA8H9C,GAAGO,IAAH,CAAQwC,cAAR,CAAuBX,cAAvB,CAA9H,GAAwK,uBAA/K;AACA,kBAAIkC,YAAJ,EAAkB;AAChBnE,uBAAO,KAAMiE,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,eAFD,MAEO;AACL5F,uBAAO,KAAMiE,WAAb;AACD;AACDjE,qBAAO,OAAP;AACA,kBAAIH,GAAGc,IAAH,CAAQkC,QAAR,KAAqB,KAAzB,EAAgC;AAC9B7C,uBAAO,0BAAP;AACA,oBAAImE,YAAJ,EAAkB;AAChBnE,yBAAO,KAAMiE,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,iBAFD,MAEO;AACL5F,yBAAO,KAAMiE,WAAb;AACD;AACDjE,uBAAO,KAAP;AACD;AACD,kBAAIH,GAAGc,IAAH,CAAQmC,OAAZ,EAAqB;AACnB9C,uBAAO,+BAAgC8B,WAAhC,GAA+C,kCAA/C,GAAqFjC,GAAGkC,UAAxF,GAAsG,WAAtG,GAAqHO,KAArH,GAA8H,GAArI;AACD;AACDtC,qBAAO,KAAP;AACD,aArBD,MAqBO;AACLA,qBAAO,MAAP;AACD;AACD,gBAAI+C,QAAQ/C,GAAZ;AACAA,kBAAMwC,WAAWQ,GAAX,EAAN;AACA,gBAAI,CAACnD,GAAGoD,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,kBAAItC,GAAGwB,KAAP,EAAc;AACZrB,uBAAO,iCAAkC+C,KAAlC,GAA2C,MAAlD;AACD,eAFD,MAEO;AACL/C,uBAAO,yBAA0B+C,KAA1B,GAAmC,mBAA1C;AACD;AACF,aAPD,MAOO;AACL/C,qBAAO,gBAAiB+C,KAAjB,GAA0B,8EAAjC;AACD;AACD/C,mBAAO,YAAasF,QAAb,GAAyB,qBAAhC;AACA,gBAAIO,cAAclE,WAAW,UAAWA,WAAW,CAAZ,IAAkB,EAA5B,CAAX,GAA6C,YAA/D;AAAA,gBACEmE,sBAAsBnE,WAAW9B,GAAG2D,WAAH,CAAe7B,QAAf,CAAX,GAAsC,oBAD9D;AAEA3B,mBAAO,MAAOsC,KAAP,GAAgB,KAAhB,GAAyBgD,QAAzB,GAAqC,IAA5C;AACA,gBAAI,CAAC3D,QAAL,EAAe;AACb3B,qBAAO,SAAU6F,WAAV,GAAyB,iBAAhC;AACD;AACD7F,mBAAO,MAAO6F,WAAP,GAAsB,GAAtB,GAA6BC,mBAA7B,GAAoD,MAApD,GAA8DR,QAA9D,GAA0E,MAAjF;AACD,WA/ED,MA+EO;AACL,gBAAI9C,aAAaA,cAAc,EAA/B;AACAA,uBAAWC,IAAX,CAAgBzC,GAAhB;AACAA,kBAAM,EAAN,CAHK,CAGK;AACV,gBAAIH,GAAG6C,YAAH,KAAoB,KAAxB,EAA+B;AAC7B1C,qBAAO,oBAAoBqC,iBAAiB,MAArC,IAA+C,sCAA/C,GAAyFxC,GAAG8C,SAA5F,GAAyG,iBAAzG,GAA8H9C,GAAGO,IAAH,CAAQwC,cAAR,CAAuBX,cAAvB,CAA9H,GAAwK,uBAA/K;AACA,kBAAIkC,YAAJ,EAAkB;AAChBnE,uBAAO,KAAMiE,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,eAFD,MAEO;AACL5F,uBAAO,KAAMiE,WAAb;AACD;AACDjE,qBAAO,OAAP;AACA,kBAAIH,GAAGc,IAAH,CAAQkC,QAAR,KAAqB,KAAzB,EAAgC;AAC9B7C,uBAAO,0BAAP;AACA,oBAAImE,YAAJ,EAAkB;AAChBnE,yBAAO,KAAMiE,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,iBAFD,MAEO;AACL5F,yBAAO,KAAMiE,WAAb;AACD;AACDjE,uBAAO,KAAP;AACD;AACD,kBAAIH,GAAGc,IAAH,CAAQmC,OAAZ,EAAqB;AACnB9C,uBAAO,+BAAgC8B,WAAhC,GAA+C,kCAA/C,GAAqFjC,GAAGkC,UAAxF,GAAsG,WAAtG,GAAqHO,KAArH,GAA8H,GAArI;AACD;AACDtC,qBAAO,KAAP;AACD,aArBD,MAqBO;AACLA,qBAAO,MAAP;AACD;AACD,gBAAI+C,QAAQ/C,GAAZ;AACAA,kBAAMwC,WAAWQ,GAAX,EAAN;AACA,gBAAI,CAACnD,GAAGoD,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,kBAAItC,GAAGwB,KAAP,EAAc;AACZrB,uBAAO,iCAAkC+C,KAAlC,GAA2C,MAAlD;AACD,eAFD,MAEO;AACL/C,uBAAO,yBAA0B+C,KAA1B,GAAmC,mBAA1C;AACD;AACF,aAPD,MAOO;AACL/C,qBAAO,gBAAiB+C,KAAjB,GAA0B,8EAAjC;AACD;AACF;AACD/C,iBAAO,KAAP;AACD;AACF;AACD,UAAIH,GAAGK,MAAH,CAAUsB,IAAV,IAAkB,CAACrB,YAAvB,EAAqC;AACnCH,eAAO,MAAOH,GAAGS,KAAH,CAASC,GAAT,CAAaiB,IAAb,CAAkBoD,IAAlB,CAAuB/E,EAAvB,EAA2B,MAA3B,CAAP,GAA6C,GAApD;AACA,YAAIsC,aAAJ,EAAmB;AACjBnC,iBAAO,oBAAP;AACA,cAAIkD,IAAJ,EAAU;AACRlD,mBAAO,GAAP;AACD,WAFD,MAEO;AACLA,mBAAO,UAAWyB,IAAlB;AACD;AACDzB,iBAAO,MAAP;AACAgE,6BAAmB,GAAnB;AACD;AACF,OAZD,MAYO;AACL,YAAI+B,OAAOlG,GAAGS,KAAd;AACA,YAAIyF,IAAJ,EAAU;AACR,cAAIf,WAAJ;AAAA,cAAiBgB,KAAK,CAAC,CAAvB;AAAA,cACEC,KAAKF,KAAKtB,MAAL,GAAc,CADrB;AAEA,iBAAOuB,KAAKC,EAAZ,EAAgB;AACdjB,0BAAce,KAAKC,MAAM,CAAX,CAAd;AACA,gBAAId,gBAAgBF,WAAhB,CAAJ,EAAkC;AAChC,kBAAIA,YAAYd,IAAhB,EAAsB;AACpBlE,uBAAO,UAAWH,GAAGO,IAAH,CAAQmF,aAAR,CAAsBP,YAAYd,IAAlC,EAAwC5B,KAAxC,EAA+CzC,GAAGc,IAAH,CAAQyE,aAAvD,CAAX,GAAoF,MAA3F;AACD;AACD,kBAAIvF,GAAGc,IAAH,CAAQgD,WAAZ,EAAyB;AACvB,oBAAIqB,YAAYd,IAAZ,IAAoB,QAApB,IAAgCrE,GAAGK,MAAH,CAAUgG,UAA9C,EAA0D;AACxD,sBAAIrE,UAAUhC,GAAGK,MAAH,CAAUgG,UAAxB;AAAA,sBACEC,cAAcC,OAAOC,IAAP,CAAYxE,OAAZ,CADhB;AAEA,sBAAIyE,OAAOH,WAAX;AACA,sBAAIG,IAAJ,EAAU;AACR,wBAAIC,YAAJ;AAAA,wBAAkBC,KAAK,CAAC,CAAxB;AAAA,wBACEC,KAAKH,KAAK7B,MAAL,GAAc,CADrB;AAEA,2BAAO+B,KAAKC,EAAZ,EAAgB;AACdF,qCAAeD,KAAKE,MAAM,CAAX,CAAf;AACA,0BAAIE,OAAO7E,QAAQ0E,YAAR,CAAX;AACA,0BAAIG,KAAKjD,OAAL,KAAiBC,SAArB,EAAgC;AAC9B,4BAAIiD,YAAYrE,QAAQzC,GAAGO,IAAH,CAAQ4B,WAAR,CAAoBuE,YAApB,CAAxB;AACA,4BAAI1G,GAAGoD,aAAP,EAAsB;AACpB,8BAAIpD,GAAGc,IAAH,CAAQiD,cAAZ,EAA4B;AAC1B,gCAAIC,cAAc,6BAA6B8C,SAA/C;AACA,gCAAI9G,GAAGc,IAAH,CAAQiD,cAAR,KAA2B,KAA/B,EAAsC/D,GAAGoB,MAAH,CAAUC,IAAV,CAAe2C,WAAf,EAAtC,KACK,MAAM,IAAI1C,KAAJ,CAAU0C,WAAV,CAAN;AACN;AACF,yBAND,MAMO;AACL7D,iCAAO,UAAW2G,SAAX,GAAwB,iBAA/B;AACA,8BAAI9G,GAAGc,IAAH,CAAQgD,WAAR,IAAuB,OAA3B,EAAoC;AAClC3D,mCAAO,SAAU2G,SAAV,GAAuB,eAAvB,GAA0CA,SAA1C,GAAuD,YAA9D;AACD;AACD3G,iCAAO,QAAS2G,SAAT,GAAsB,KAA7B;AACA,8BAAI9G,GAAGc,IAAH,CAAQgD,WAAR,IAAuB,QAA3B,EAAqC;AACnC3D,mCAAO,MAAOH,GAAG+G,UAAH,CAAcF,KAAKjD,OAAnB,CAAP,GAAsC,GAA7C;AACD,2BAFD,MAEO;AACLzD,mCAAO,MAAO6G,KAAKC,SAAL,CAAeJ,KAAKjD,OAApB,CAAP,GAAuC,GAA9C;AACD;AACDzD,iCAAO,IAAP;AACD;AACF;AACF;AACF;AACF,iBAlCD,MAkCO,IAAIgF,YAAYd,IAAZ,IAAoB,OAApB,IAA+BE,MAAMC,OAAN,CAAcxE,GAAGK,MAAH,CAAU6G,KAAxB,CAAnC,EAAmE;AACxE,sBAAIC,OAAOnH,GAAGK,MAAH,CAAU6G,KAArB;AACA,sBAAIC,IAAJ,EAAU;AACR,wBAAIN,IAAJ;AAAA,wBAAUhB,KAAK,CAAC,CAAhB;AAAA,wBACEuB,KAAKD,KAAKvC,MAAL,GAAc,CADrB;AAEA,2BAAOiB,KAAKuB,EAAZ,EAAgB;AACdP,6BAAOM,KAAKtB,MAAM,CAAX,CAAP;AACA,0BAAIgB,KAAKjD,OAAL,KAAiBC,SAArB,EAAgC;AAC9B,4BAAIiD,YAAYrE,QAAQ,GAAR,GAAcoD,EAAd,GAAmB,GAAnC;AACA,4BAAI7F,GAAGoD,aAAP,EAAsB;AACpB,8BAAIpD,GAAGc,IAAH,CAAQiD,cAAZ,EAA4B;AAC1B,gCAAIC,cAAc,6BAA6B8C,SAA/C;AACA,gCAAI9G,GAAGc,IAAH,CAAQiD,cAAR,KAA2B,KAA/B,EAAsC/D,GAAGoB,MAAH,CAAUC,IAAV,CAAe2C,WAAf,EAAtC,KACK,MAAM,IAAI1C,KAAJ,CAAU0C,WAAV,CAAN;AACN;AACF,yBAND,MAMO;AACL7D,iCAAO,UAAW2G,SAAX,GAAwB,iBAA/B;AACA,8BAAI9G,GAAGc,IAAH,CAAQgD,WAAR,IAAuB,OAA3B,EAAoC;AAClC3D,mCAAO,SAAU2G,SAAV,GAAuB,eAAvB,GAA0CA,SAA1C,GAAuD,YAA9D;AACD;AACD3G,iCAAO,QAAS2G,SAAT,GAAsB,KAA7B;AACA,8BAAI9G,GAAGc,IAAH,CAAQgD,WAAR,IAAuB,QAA3B,EAAqC;AACnC3D,mCAAO,MAAOH,GAAG+G,UAAH,CAAcF,KAAKjD,OAAnB,CAAP,GAAsC,GAA7C;AACD,2BAFD,MAEO;AACLzD,mCAAO,MAAO6G,KAAKC,SAAL,CAAeJ,KAAKjD,OAApB,CAAP,GAAuC,GAA9C;AACD;AACDzD,iCAAO,IAAP;AACD;AACF;AACF;AACF;AACF;AACF;AACD,kBAAIkH,OAAOlC,YAAYmC,KAAvB;AACA,kBAAID,IAAJ,EAAU;AACR,oBAAIE,KAAJ;AAAA,oBAAWC,KAAK,CAAC,CAAjB;AAAA,oBACEC,KAAKJ,KAAKzC,MAAL,GAAc,CADrB;AAEA,uBAAO4C,KAAKC,EAAZ,EAAgB;AACdF,0BAAQF,KAAKG,MAAM,CAAX,CAAR;AACA,sBAAIE,eAAeH,KAAf,CAAJ,EAA2B;AACzB,wBAAII,QAAQJ,MAAMxC,IAAN,CAAW/E,EAAX,EAAeuH,MAAMK,OAArB,EAA8BzC,YAAYd,IAA1C,CAAZ;AACA,wBAAIsD,KAAJ,EAAW;AACTxH,6BAAO,MAAOwH,KAAP,GAAgB,GAAvB;AACA,0BAAIrF,aAAJ,EAAmB;AACjB4B,2CAAmB,GAAnB;AACD;AACF;AACF;AACF;AACF;AACD,kBAAI5B,aAAJ,EAAmB;AACjBnC,uBAAO,MAAO+D,eAAP,GAA0B,GAAjC;AACAA,kCAAkB,EAAlB;AACD;AACD,kBAAIiB,YAAYd,IAAhB,EAAsB;AACpBlE,uBAAO,KAAP;AACA,oBAAIiE,eAAeA,gBAAgBe,YAAYd,IAA3C,IAAmD,CAACY,cAAxD,EAAwE;AACtE9E,yBAAO,UAAP;AACA,sBAAI8B,cAAcjC,GAAGkC,UAAH,GAAgB,OAAlC;AAAA,sBACEE,iBAAiBpC,GAAGqC,aAAH,GAAmB,OADtC;AAEA,sBAAIM,aAAaA,cAAc,EAA/B;AACAA,6BAAWC,IAAX,CAAgBzC,GAAhB;AACAA,wBAAM,EAAN,CANsE,CAM5D;AACV,sBAAIH,GAAG6C,YAAH,KAAoB,KAAxB,EAA+B;AAC7B1C,2BAAO,oBAAoBqC,iBAAiB,MAArC,IAA+C,sCAA/C,GAAyFxC,GAAG8C,SAA5F,GAAyG,iBAAzG,GAA8H9C,GAAGO,IAAH,CAAQwC,cAAR,CAAuBX,cAAvB,CAA9H,GAAwK,uBAA/K;AACA,wBAAIkC,YAAJ,EAAkB;AAChBnE,6BAAO,KAAMiE,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,qBAFD,MAEO;AACL5F,6BAAO,KAAMiE,WAAb;AACD;AACDjE,2BAAO,OAAP;AACA,wBAAIH,GAAGc,IAAH,CAAQkC,QAAR,KAAqB,KAAzB,EAAgC;AAC9B7C,6BAAO,0BAAP;AACA,0BAAImE,YAAJ,EAAkB;AAChBnE,+BAAO,KAAMiE,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,uBAFD,MAEO;AACL5F,+BAAO,KAAMiE,WAAb;AACD;AACDjE,6BAAO,KAAP;AACD;AACD,wBAAIH,GAAGc,IAAH,CAAQmC,OAAZ,EAAqB;AACnB9C,6BAAO,+BAAgC8B,WAAhC,GAA+C,kCAA/C,GAAqFjC,GAAGkC,UAAxF,GAAsG,WAAtG,GAAqHO,KAArH,GAA8H,GAArI;AACD;AACDtC,2BAAO,KAAP;AACD,mBArBD,MAqBO;AACLA,2BAAO,MAAP;AACD;AACD,sBAAI+C,QAAQ/C,GAAZ;AACAA,wBAAMwC,WAAWQ,GAAX,EAAN;AACA,sBAAI,CAACnD,GAAGoD,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,wBAAItC,GAAGwB,KAAP,EAAc;AACZrB,6BAAO,iCAAkC+C,KAAlC,GAA2C,MAAlD;AACD,qBAFD,MAEO;AACL/C,6BAAO,yBAA0B+C,KAA1B,GAAmC,mBAA1C;AACD;AACF,mBAPD,MAOO;AACL/C,2BAAO,gBAAiB+C,KAAjB,GAA0B,8EAAjC;AACD;AACD/C,yBAAO,KAAP;AACD;AACF;AACD,kBAAImC,aAAJ,EAAmB;AACjBnC,uBAAO,kBAAP;AACA,oBAAIkD,IAAJ,EAAU;AACRlD,yBAAO,GAAP;AACD,iBAFD,MAEO;AACLA,yBAAO,UAAWyB,IAAlB;AACD;AACDzB,uBAAO,MAAP;AACAgE,mCAAmB,GAAnB;AACD;AACF;AACF;AACF;AACF;AACD,UAAI7B,aAAJ,EAAmB;AACjBnC,eAAO,MAAOgE,eAAP,GAA0B,GAAjC;AACD;AACD,UAAId,IAAJ,EAAU;AACR,YAAIjD,MAAJ,EAAY;AACVD,iBAAO,4CAAP;AACAA,iBAAO,4CAAP;AACD,SAHD,MAGO;AACLA,iBAAO,8BAAP;AACAA,iBAAO,8BAAP;AACD;AACDA,eAAO,sBAAP;AACD,OATD,MASO;AACLA,eAAO,UAAWuC,MAAX,GAAqB,qBAArB,GAA8Cd,IAA9C,GAAsD,GAA7D;AACD;;AAED,eAASyD,eAAT,CAAyBF,WAAzB,EAAsC;AACpC,YAAImC,QAAQnC,YAAYmC,KAAxB;AACA,aAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIP,MAAM1C,MAA1B,EAAkCiD,GAAlC,EACE,IAAIH,eAAeJ,MAAMO,CAAN,CAAf,CAAJ,EAA8B,OAAO,IAAP;AACjC;;AAED,eAASH,cAAT,CAAwBH,KAAxB,EAA+B;AAC7B,eAAOvH,GAAGK,MAAH,CAAUkH,MAAMK,OAAhB,MAA6B/D,SAA7B,IAA2C0D,MAAMO,UAAN,IAAoBC,2BAA2BR,KAA3B,CAAtE;AACD;;AAED,eAASQ,0BAAT,CAAoCR,KAApC,EAA2C;AACzC,YAAIS,OAAOT,MAAMO,UAAjB;AACA,aAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIG,KAAKpD,MAAzB,EAAiCiD,GAAjC,EACE,IAAI7H,GAAGK,MAAH,CAAU2H,KAAKH,CAAL,CAAV,MAAuBhE,SAA3B,EAAsC,OAAO,IAAP;AACzC;AACD,aAAO1D,GAAP;AACD,KAheD","file":"validate.js","sourcesContent":["'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [\"\"];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, it.opts.strictNumbers, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; var ' + ($coerced) + ' = undefined; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ') && ' + ($data) + '.length == 1) { ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + '; if (' + (it.util.checkDataType(it.schema.type, $data, it.opts.strictNumbers)) + ') ' + ($coerced) + ' = ' + ($data) + '; } ';\n        }\n        out += ' if (' + ($coerced) + ' !== undefined) ; ';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($type == 'string') {\n              out += ' else if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' else if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' else if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' else if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' else if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' else {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } if (' + ($coerced) + ' !== undefined) {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data, it.opts.strictNumbers)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n"]}