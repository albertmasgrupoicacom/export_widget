{"version":3,"sources":["const.js"],"names":["module","exports","generate_const","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$isData","getData","dataPathArr","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async"],"mappings":"AAAA;;;;;;AACAA,WAAOC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,EAAxB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiD;AAChE,UAAIC,MAAM,GAAV;AACA,UAAIC,OAAOJ,GAAGK,KAAd;AACA,UAAIC,WAAWN,GAAGO,SAAlB;AACA,UAAIC,UAAUR,GAAGS,MAAH,CAAUR,QAAV,CAAd;AACA,UAAIS,cAAcV,GAAGW,UAAH,GAAgBX,GAAGY,IAAH,CAAQC,WAAR,CAAoBZ,QAApB,CAAlC;AACA,UAAIa,iBAAiBd,GAAGe,aAAH,GAAmB,GAAnB,GAAyBd,QAA9C;AACA,UAAIe,gBAAgB,CAAChB,GAAGiB,IAAH,CAAQC,SAA7B;AACA,UAAIC,QAAQ,UAAUb,YAAY,EAAtB,CAAZ;AACA,UAAIc,SAAS,UAAUhB,IAAvB;AACA,UAAIiB,UAAUrB,GAAGiB,IAAH,CAAQE,KAAR,IAAiBX,OAAjB,IAA4BA,QAAQW,KAAlD;AAEA,UAAIE,OAAJ,EAAa;AACXlB,eAAO,gBAAiBC,IAAjB,GAAyB,KAAzB,GAAkCJ,GAAGY,IAAH,CAAQU,OAAR,CAAgBd,QAAQW,KAAxB,EAA+Bb,QAA/B,EAAyCN,GAAGuB,WAA5C,CAAlC,GAA8F,IAArG;AAED,OAHD,MAGO,CAEN;AACD,UAAI,CAACF,OAAL,EAAc;AACZlB,eAAO,gBAAiBC,IAAjB,GAAyB,oBAAzB,GAAiDM,WAAjD,GAAgE,GAAvE;AACD;AACDP,aAAO,SAAUiB,MAAV,GAAoB,WAApB,GAAmCD,KAAnC,GAA4C,UAA5C,GAA0Df,IAA1D,GAAkE,UAAlE,GAAgFgB,MAAhF,GAA0F,QAAjG;AACA,UAAII,aAAaA,cAAc,EAA/B;AACAA,iBAAWC,IAAX,CAAgBtB,GAAhB;AACAA,YAAM,EAAN,CAxBgE,CAwBtD;AACV,UAAIH,GAAG0B,YAAH,KAAoB,KAAxB,EAA+B;AAC7BvB,eAAO,mBAAoB,OAApB,GAA+B,sCAA/B,GAAyEH,GAAG2B,SAA5E,GAAyF,iBAAzF,GAA8G3B,GAAGY,IAAH,CAAQgB,cAAR,CAAuBd,cAAvB,CAA9G,GAAwJ,mCAAxJ,GAA+LV,IAA/L,GAAuM,KAA9M;AACA,YAAIJ,GAAGiB,IAAH,CAAQY,QAAR,KAAqB,KAAzB,EAAgC;AAC9B1B,iBAAO,8CAAP;AACD;AACD,YAAIH,GAAGiB,IAAH,CAAQa,OAAZ,EAAqB;AACnB3B,iBAAO,+BAAgCO,WAAhC,GAA+C,kCAA/C,GAAqFV,GAAGW,UAAxF,GAAsG,WAAtG,GAAqHQ,KAArH,GAA8H,GAArI;AACD;AACDhB,eAAO,KAAP;AACD,OATD,MASO;AACLA,eAAO,MAAP;AACD;AACD,UAAI4B,QAAQ5B,GAAZ;AACAA,YAAMqB,WAAWQ,GAAX,EAAN;AACA,UAAI,CAAChC,GAAGiC,aAAJ,IAAqBjB,aAAzB,EAAwC;AACtC;AACA,YAAIhB,GAAGkC,KAAP,EAAc;AACZ/B,iBAAO,iCAAkC4B,KAAlC,GAA2C,MAAlD;AACD,SAFD,MAEO;AACL5B,iBAAO,yBAA0B4B,KAA1B,GAAmC,mBAA1C;AACD;AACF,OAPD,MAOO;AACL5B,eAAO,gBAAiB4B,KAAjB,GAA0B,8EAAjC;AACD;AACD5B,aAAO,IAAP;AACA,UAAIa,aAAJ,EAAmB;AACjBb,eAAO,UAAP;AACD;AACD,aAAOA,GAAP;AACD,KAtDD","file":"const.js","sourcesContent":["'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}