{"version":3,"sources":["contains.js"],"names":["module","exports","generate_contains","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$errs","$it","copy","$nextValid","$idx","$dataNxt","$nextData","$currentBaseId","baseId","$nonEmptySchema","strictKeywords","Object","keys","length","schemaHasRules","RULES","all","$wasComposite","compositeRule","errorPath","getPathExpr","jsonPointers","$passData","dataPathArr","$code","validate","varOccurences","varReplace","$$outStack","push","createErrors","toQuotedString","messages","verbose","__err","pop","async"],"mappings":"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","file":"contains.js","sourcesContent":["'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = (it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all));\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n"]}