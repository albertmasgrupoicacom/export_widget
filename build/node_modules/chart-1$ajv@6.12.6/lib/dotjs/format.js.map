{"version":3,"sources":["format.js"],"names":["module","exports","generate_format","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","format","$isData","$schemaValue","getData","dataPathArr","$unknownFormats","unknownFormats","$allowUnknown","Array","isArray","$format","$isObject","$formatType","async","formats","logger","warn","indexOf","Error","RegExp","validate","type","$async","$formatRef","$$outStack","push","createErrors","errorPath","toQuotedString","messages","escapeQuotes","verbose","__err","pop","compositeRule"],"mappings":"AAAA;;;;;;AACAA,WAAOC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,EAAzB,EAA6BC,QAA7B,EAAuCC,SAAvC,EAAkD;AACjE,UAAIC,MAAM,GAAV;AACA,UAAIC,OAAOJ,GAAGK,KAAd;AACA,UAAIC,WAAWN,GAAGO,SAAlB;AACA,UAAIC,UAAUR,GAAGS,MAAH,CAAUR,QAAV,CAAd;AACA,UAAIS,cAAcV,GAAGW,UAAH,GAAgBX,GAAGY,IAAH,CAAQC,WAAR,CAAoBZ,QAApB,CAAlC;AACA,UAAIa,iBAAiBd,GAAGe,aAAH,GAAmB,GAAnB,GAAyBd,QAA9C;AACA,UAAIe,gBAAgB,CAAChB,GAAGiB,IAAH,CAAQC,SAA7B;AACA,UAAIC,QAAQ,UAAUb,YAAY,EAAtB,CAAZ;AACA,UAAIN,GAAGiB,IAAH,CAAQG,MAAR,KAAmB,KAAvB,EAA8B;AAC5B,YAAIJ,aAAJ,EAAmB;AACjBb,iBAAO,eAAP;AACD;AACD,eAAOA,GAAP;AACD;AACD,UAAIkB,UAAUrB,GAAGiB,IAAH,CAAQE,KAAR,IAAiBX,OAAjB,IAA4BA,QAAQW,KAAlD;AAAA,UACEG,YADF;AAEA,UAAID,OAAJ,EAAa;AACXlB,eAAO,gBAAiBC,IAAjB,GAAyB,KAAzB,GAAkCJ,GAAGY,IAAH,CAAQW,OAAR,CAAgBf,QAAQW,KAAxB,EAA+Bb,QAA/B,EAAyCN,GAAGwB,WAA5C,CAAlC,GAA8F,IAArG;AACAF,uBAAe,WAAWlB,IAA1B;AACD,OAHD,MAGO;AACLkB,uBAAed,OAAf;AACD;AACD,UAAIiB,kBAAkBzB,GAAGiB,IAAH,CAAQS,cAA9B;AAAA,UACEC,gBAAgBC,MAAMC,OAAN,CAAcJ,eAAd,CADlB;AAEA,UAAIJ,OAAJ,EAAa;AACX,YAAIS,UAAU,WAAW1B,IAAzB;AAAA,YACE2B,YAAY,aAAa3B,IAD3B;AAAA,YAEE4B,cAAc,eAAe5B,IAF/B;AAGAD,eAAO,UAAW2B,OAAX,GAAsB,aAAtB,GAAuCR,YAAvC,GAAuD,SAAvD,GAAoES,SAApE,GAAiF,YAAjF,GAAiGD,OAAjG,GAA4G,sBAA5G,GAAsIA,OAAtI,GAAiJ,yBAAjJ,GAA8KA,OAA9K,GAAyL,iBAAzL,GAA8ME,WAA9M,GAA6N,KAA7N,GAAsOD,SAAtO,GAAmP,MAAnP,GAA6PD,OAA7P,GAAwQ,2BAAxQ,GAAuSC,SAAvS,GAAoT,MAA3T;AACA,YAAI/B,GAAGiC,KAAP,EAAc;AACZ9B,iBAAO,eAAgBC,IAAhB,GAAwB,KAAxB,GAAiC0B,OAAjC,GAA4C,UAAnD;AACD;AACD3B,eAAO,MAAO2B,OAAP,GAAkB,KAAlB,GAA2BA,OAA3B,GAAsC,qBAA7C;AACA,YAAIT,OAAJ,EAAa;AACXlB,iBAAO,OAAQmB,YAAR,GAAwB,2BAAxB,GAAuDA,YAAvD,GAAuE,qBAA9E;AACD;AACDnB,eAAO,IAAP;AACA,YAAIsB,mBAAmB,QAAvB,EAAiC;AAC/BtB,iBAAO,OAAQmB,YAAR,GAAwB,OAAxB,GAAmCQ,OAAnC,GAA8C,GAArD;AACA,cAAIH,aAAJ,EAAmB;AACjBxB,mBAAO,2CAA4CmB,YAA5C,GAA4D,UAAnE;AACD;AACDnB,iBAAO,OAAP;AACD;AACDA,eAAO,OAAQ2B,OAAR,GAAmB,MAAnB,GAA6BE,WAA7B,GAA4C,QAA5C,GAAwD9B,SAAxD,GAAqE,iBAArE,GAA0F4B,OAA1F,GAAqG,qBAA5G;AACA,YAAI9B,GAAGiC,KAAP,EAAc;AACZ9B,iBAAO,YAAaC,IAAb,GAAqB,WAArB,GAAoC0B,OAApC,GAA+C,GAA/C,GAAsDX,KAAtD,GAA+D,MAA/D,GAAyEW,OAAzE,GAAoF,GAApF,GAA2FX,KAA3F,GAAoG,KAA3G;AACD,SAFD,MAEO;AACLhB,iBAAO,MAAO2B,OAAP,GAAkB,GAAlB,GAAyBX,KAAzB,GAAkC,IAAzC;AACD;AACDhB,eAAO,QAAS2B,OAAT,GAAoB,QAApB,GAAgCX,KAAhC,GAAyC,SAAhD;AACD,OA3BD,MA2BO;AACL,YAAIW,UAAU9B,GAAGkC,OAAH,CAAW1B,OAAX,CAAd;AACA,YAAI,CAACsB,OAAL,EAAc;AACZ,cAAIL,mBAAmB,QAAvB,EAAiC;AAC/BzB,eAAGmC,MAAH,CAAUC,IAAV,CAAe,qBAAqB5B,OAArB,GAA+B,+BAA/B,GAAiER,GAAGe,aAApE,GAAoF,GAAnG;AACA,gBAAIC,aAAJ,EAAmB;AACjBb,qBAAO,eAAP;AACD;AACD,mBAAOA,GAAP;AACD,WAND,MAMO,IAAIwB,iBAAiBF,gBAAgBY,OAAhB,CAAwB7B,OAAxB,KAAoC,CAAzD,EAA4D;AACjE,gBAAIQ,aAAJ,EAAmB;AACjBb,qBAAO,eAAP;AACD;AACD,mBAAOA,GAAP;AACD,WALM,MAKA;AACL,kBAAM,IAAImC,KAAJ,CAAU,qBAAqB9B,OAArB,GAA+B,+BAA/B,GAAiER,GAAGe,aAApE,GAAoF,GAA9F,CAAN;AACD;AACF;AACD,YAAIgB,YAAY,OAAOD,OAAP,IAAkB,QAAlB,IAA8B,EAAEA,mBAAmBS,MAArB,CAA9B,IAA8DT,QAAQU,QAAtF;AACA,YAAIR,cAAcD,aAAaD,QAAQW,IAArB,IAA6B,QAA/C;AACA,YAAIV,SAAJ,EAAe;AACb,cAAIW,SAASZ,QAAQG,KAAR,KAAkB,IAA/B;AACAH,oBAAUA,QAAQU,QAAlB;AACD;AACD,YAAIR,eAAe9B,SAAnB,EAA8B;AAC5B,cAAIc,aAAJ,EAAmB;AACjBb,mBAAO,eAAP;AACD;AACD,iBAAOA,GAAP;AACD;AACD,YAAIuC,MAAJ,EAAY;AACV,cAAI,CAAC1C,GAAGiC,KAAR,EAAe,MAAM,IAAIK,KAAJ,CAAU,6BAAV,CAAN;AACf,cAAIK,aAAa,YAAY3C,GAAGY,IAAH,CAAQC,WAAR,CAAoBL,OAApB,CAAZ,GAA2C,WAA5D;AACAL,iBAAO,kBAAmBwC,UAAnB,GAAiC,GAAjC,GAAwCxB,KAAxC,GAAiD,QAAxD;AACD,SAJD,MAIO;AACLhB,iBAAO,SAAP;AACA,cAAIwC,aAAa,YAAY3C,GAAGY,IAAH,CAAQC,WAAR,CAAoBL,OAApB,CAA7B;AACA,cAAIuB,SAAJ,EAAeY,cAAc,WAAd;AACf,cAAI,OAAOb,OAAP,IAAkB,UAAtB,EAAkC;AAChC3B,mBAAO,MAAOwC,UAAP,GAAqB,GAArB,GAA4BxB,KAA5B,GAAqC,IAA5C;AACD,WAFD,MAEO;AACLhB,mBAAO,MAAOwC,UAAP,GAAqB,QAArB,GAAiCxB,KAAjC,GAA0C,IAAjD;AACD;AACDhB,iBAAO,MAAP;AACD;AACF;AACD,UAAIyC,aAAaA,cAAc,EAA/B;AACAA,iBAAWC,IAAX,CAAgB1C,GAAhB;AACAA,YAAM,EAAN,CApGiE,CAoGvD;AACV,UAAIH,GAAG8C,YAAH,KAAoB,KAAxB,EAA+B;AAC7B3C,eAAO,mBAAoB,QAApB,GAAgC,sCAAhC,GAA0EH,GAAG+C,SAA7E,GAA0F,iBAA1F,GAA+G/C,GAAGY,IAAH,CAAQoC,cAAR,CAAuBlC,cAAvB,CAA/G,GAAyJ,wBAAhK;AACA,YAAIO,OAAJ,EAAa;AACXlB,iBAAO,KAAMmB,YAAb;AACD,SAFD,MAEO;AACLnB,iBAAO,KAAMH,GAAGY,IAAH,CAAQoC,cAAR,CAAuBxC,OAAvB,CAAb;AACD;AACDL,eAAO,MAAP;AACA,YAAIH,GAAGiB,IAAH,CAAQgC,QAAR,KAAqB,KAAzB,EAAgC;AAC9B9C,iBAAO,qCAAP;AACA,cAAIkB,OAAJ,EAAa;AACXlB,mBAAO,UAAWmB,YAAX,GAA2B,OAAlC;AACD,WAFD,MAEO;AACLnB,mBAAO,KAAMH,GAAGY,IAAH,CAAQsC,YAAR,CAAqB1C,OAArB,CAAb;AACD;AACDL,iBAAO,MAAP;AACD;AACD,YAAIH,GAAGiB,IAAH,CAAQkC,OAAZ,EAAqB;AACnBhD,iBAAO,cAAP;AACA,cAAIkB,OAAJ,EAAa;AACXlB,mBAAO,oBAAqBO,WAA5B;AACD,WAFD,MAEO;AACLP,mBAAO,KAAMH,GAAGY,IAAH,CAAQoC,cAAR,CAAuBxC,OAAvB,CAAb;AACD;AACDL,iBAAO,6CAA8CH,GAAGW,UAAjD,GAA+D,WAA/D,GAA8EQ,KAA9E,GAAuF,GAA9F;AACD;AACDhB,eAAO,KAAP;AACD,OA3BD,MA2BO;AACLA,eAAO,MAAP;AACD;AACD,UAAIiD,QAAQjD,GAAZ;AACAA,YAAMyC,WAAWS,GAAX,EAAN;AACA,UAAI,CAACrD,GAAGsD,aAAJ,IAAqBtC,aAAzB,EAAwC;AACtC;AACA,YAAIhB,GAAGiC,KAAP,EAAc;AACZ9B,iBAAO,iCAAkCiD,KAAlC,GAA2C,MAAlD;AACD,SAFD,MAEO;AACLjD,iBAAO,yBAA0BiD,KAA1B,GAAmC,mBAA1C;AACD;AACF,OAPD,MAOO;AACLjD,eAAO,gBAAiBiD,KAAjB,GAA0B,8EAAjC;AACD;AACDjD,aAAO,KAAP;AACA,UAAIa,aAAJ,EAAmB;AACjBb,eAAO,UAAP;AACD;AACD,aAAOA,GAAP;AACD,KApJD","file":"format.js","sourcesContent":["'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}