{"version":3,"sources":["index.js"],"names":["exports","__esModule","_getIterator2","require","_getIterator3","_interopRequireDefault","default","_ref","t","types","isString","node","isLiteral","value","buildBinaryExpression","left","right","binaryExpression","visitor","TaggedTemplateExpression","path","state","quasi","args","strings","raw","_iterator","quasis","_isArray","Array","isArray","_i","_ref2","length","next","done","elem","push","stringLiteral","cooked","arrayExpression","templateName","opts","loose","templateObject","file","addTemplateObject","concat","expressions","replaceWith","callExpression","tag","TemplateLiteral","nodes","get","_iterator2","_isArray2","_i2","_ref3","expr","shift","spec","isBaseType","identifier","filter","n","unshift","root","_iterator3","_isArray3","_i3","_ref4","obj","module"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function isString(node) {\n    return t.isLiteral(node) && typeof node.value === \"string\";\n  }\n\n  function buildBinaryExpression(left, right) {\n    return t.binaryExpression(\"+\", left, right);\n  }\n\n  return {\n    visitor: {\n      TaggedTemplateExpression: function TaggedTemplateExpression(path, state) {\n        var node = path.node;\n\n        var quasi = node.quasi;\n        var args = [];\n\n        var strings = [];\n        var raw = [];\n\n        for (var _iterator = quasi.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref2;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n          }\n\n          var elem = _ref2;\n\n          strings.push(t.stringLiteral(elem.value.cooked));\n          raw.push(t.stringLiteral(elem.value.raw));\n        }\n\n        strings = t.arrayExpression(strings);\n        raw = t.arrayExpression(raw);\n\n        var templateName = \"taggedTemplateLiteral\";\n        if (state.opts.loose) templateName += \"Loose\";\n\n        var templateObject = state.file.addTemplateObject(templateName, strings, raw);\n        args.push(templateObject);\n\n        args = args.concat(quasi.expressions);\n\n        path.replaceWith(t.callExpression(node.tag, args));\n      },\n      TemplateLiteral: function TemplateLiteral(path, state) {\n        var nodes = [];\n\n        var expressions = path.get(\"expressions\");\n\n        for (var _iterator2 = path.node.quasis, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n          var _ref3;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref3 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref3 = _i2.value;\n          }\n\n          var elem = _ref3;\n\n          nodes.push(t.stringLiteral(elem.value.cooked));\n\n          var expr = expressions.shift();\n          if (expr) {\n            if (state.opts.spec && !expr.isBaseType(\"string\") && !expr.isBaseType(\"number\")) {\n              nodes.push(t.callExpression(t.identifier(\"String\"), [expr.node]));\n            } else {\n              nodes.push(expr.node);\n            }\n          }\n        }\n\n        nodes = nodes.filter(function (n) {\n          return !t.isLiteral(n, { value: \"\" });\n        });\n\n        if (!isString(nodes[0]) && !isString(nodes[1])) {\n          nodes.unshift(t.stringLiteral(\"\"));\n        }\n\n        if (nodes.length > 1) {\n          var root = buildBinaryExpression(nodes.shift(), nodes.shift());\n\n          for (var _iterator3 = nodes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n            var _ref4;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref4 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref4 = _i3.value;\n            }\n\n            var node = _ref4;\n\n            root = buildBinaryExpression(root, node);\n          }\n\n          path.replaceWith(root);\n        } else {\n          path.replaceWith(nodes[0]);\n        }\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports[\"default\"];"]}