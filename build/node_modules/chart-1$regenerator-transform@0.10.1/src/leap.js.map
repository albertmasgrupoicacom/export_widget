{"version":3,"sources":["leap.js"],"names":["assert","t","inherits","Entry","ok","FunctionEntry","returnLoc","call","assertLiteral","exports","LoopEntry","breakLoc","continueLoc","label","assertIdentifier","SwitchEntry","TryEntry","firstLoc","catchEntry","finallyEntry","CatchEntry","FinallyEntry","paramId","afterLoc","LabeledEntry","LeapManager","emitter","Emitter","require","entryStack","finalLoc","LMp","prototype","withEntry","entry","callback","push","popped","pop","strictEqual","_findLeapLocation","property","i","length","loc","name","getBreakLoc","getContinueLoc"],"mappings":"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","file":"leap.js","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nimport assert from \"assert\";\nimport * as t from \"babel-types\";\nimport { inherits } from \"util\";\n\nfunction Entry() {\n  assert.ok(this instanceof Entry);\n}\n\nfunction FunctionEntry(returnLoc) {\n  Entry.call(this);\n  t.assertLiteral(returnLoc);\n  this.returnLoc = returnLoc;\n}\n\ninherits(FunctionEntry, Entry);\nexports.FunctionEntry = FunctionEntry;\n\nfunction LoopEntry(breakLoc, continueLoc, label) {\n  Entry.call(this);\n\n  t.assertLiteral(breakLoc);\n  t.assertLiteral(continueLoc);\n\n  if (label) {\n    t.assertIdentifier(label);\n  } else {\n    label = null;\n  }\n\n  this.breakLoc = breakLoc;\n  this.continueLoc = continueLoc;\n  this.label = label;\n}\n\ninherits(LoopEntry, Entry);\nexports.LoopEntry = LoopEntry;\n\nfunction SwitchEntry(breakLoc) {\n  Entry.call(this);\n  t.assertLiteral(breakLoc);\n  this.breakLoc = breakLoc;\n}\n\ninherits(SwitchEntry, Entry);\nexports.SwitchEntry = SwitchEntry;\n\nfunction TryEntry(firstLoc, catchEntry, finallyEntry) {\n  Entry.call(this);\n\n  t.assertLiteral(firstLoc);\n\n  if (catchEntry) {\n    assert.ok(catchEntry instanceof CatchEntry);\n  } else {\n    catchEntry = null;\n  }\n\n  if (finallyEntry) {\n    assert.ok(finallyEntry instanceof FinallyEntry);\n  } else {\n    finallyEntry = null;\n  }\n\n  // Have to have one or the other (or both).\n  assert.ok(catchEntry || finallyEntry);\n\n  this.firstLoc = firstLoc;\n  this.catchEntry = catchEntry;\n  this.finallyEntry = finallyEntry;\n}\n\ninherits(TryEntry, Entry);\nexports.TryEntry = TryEntry;\n\nfunction CatchEntry(firstLoc, paramId) {\n  Entry.call(this);\n\n  t.assertLiteral(firstLoc);\n  t.assertIdentifier(paramId);\n\n  this.firstLoc = firstLoc;\n  this.paramId = paramId;\n}\n\ninherits(CatchEntry, Entry);\nexports.CatchEntry = CatchEntry;\n\nfunction FinallyEntry(firstLoc, afterLoc) {\n  Entry.call(this);\n  t.assertLiteral(firstLoc);\n  t.assertLiteral(afterLoc);\n  this.firstLoc = firstLoc;\n  this.afterLoc = afterLoc;\n}\n\ninherits(FinallyEntry, Entry);\nexports.FinallyEntry = FinallyEntry;\n\nfunction LabeledEntry(breakLoc, label) {\n  Entry.call(this);\n\n  t.assertLiteral(breakLoc);\n  t.assertIdentifier(label);\n\n  this.breakLoc = breakLoc;\n  this.label = label;\n}\n\ninherits(LabeledEntry, Entry);\nexports.LabeledEntry = LabeledEntry;\n\nfunction LeapManager(emitter) {\n  assert.ok(this instanceof LeapManager);\n\n  let Emitter = require(\"./emit\").Emitter;\n  assert.ok(emitter instanceof Emitter);\n\n  this.emitter = emitter;\n  this.entryStack = [new FunctionEntry(emitter.finalLoc)];\n}\n\nlet LMp = LeapManager.prototype;\nexports.LeapManager = LeapManager;\n\nLMp.withEntry = function(entry, callback) {\n  assert.ok(entry instanceof Entry);\n  this.entryStack.push(entry);\n  try {\n    callback.call(this.emitter);\n  } finally {\n    let popped = this.entryStack.pop();\n    assert.strictEqual(popped, entry);\n  }\n};\n\nLMp._findLeapLocation = function(property, label) {\n  for (let i = this.entryStack.length - 1; i >= 0; --i) {\n    let entry = this.entryStack[i];\n    let loc = entry[property];\n    if (loc) {\n      if (label) {\n        if (entry.label &&\n            entry.label.name === label.name) {\n          return loc;\n        }\n      } else if (entry instanceof LabeledEntry) {\n        // Ignore LabeledEntry entries unless we are actually breaking to\n        // a label.\n      } else {\n        return loc;\n      }\n    }\n  }\n\n  return null;\n};\n\nLMp.getBreakLoc = function(label) {\n  return this._findLeapLocation(\"breakLoc\", label);\n};\n\nLMp.getContinueLoc = function(label) {\n  return this._findLeapLocation(\"continueLoc\", label);\n};\n"]}