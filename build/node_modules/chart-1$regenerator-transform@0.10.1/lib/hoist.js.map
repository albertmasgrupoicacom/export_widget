{"version":3,"sources":["hoist.js"],"names":["_keys","require","_keys2","_interopRequireDefault","_babelTypes","t","_interopRequireWildcard","_util","util","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","hasOwn","exports","hoist","funPath","assertFunction","node","vars","varDeclToExpr","vdec","includeIdentifiers","assertVariableDeclaration","exprs","declarations","forEach","dec","id","name","identifier","init","push","assignmentExpression","length","sequenceExpression","get","traverse","VariableDeclaration","exit","path","expr","remove","replaceWithOrRemove","expressionStatement","skip","ForStatement","isVariableDeclaration","ForXStatement","left","FunctionDeclaration","assignment","functionExpression","params","body","generator","expression","parentPath","isBlockStatement","unshiftContainer","FunctionExpression","paramNames","paramPath","param","isIdentifier","variableDeclarator","variableDeclaration"],"mappings":"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","file":"hoist.js","sourcesContent":["\"use strict\";\n\nvar _keys = require(\"babel-runtime/core-js/object/keys\");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _util = require(\"./util\");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\nexports.hoist = function (funPath) {\n  t.assertFunction(funPath.node);\n\n  var vars = {};\n\n  function varDeclToExpr(vdec, includeIdentifiers) {\n    t.assertVariableDeclaration(vdec);\n    // TODO assert.equal(vdec.kind, \"var\");\n    var exprs = [];\n\n    vdec.declarations.forEach(function (dec) {\n      // Note: We duplicate 'dec.id' here to ensure that the variable declaration IDs don't\n      // have the same 'loc' value, since that can make sourcemaps and retainLines behave poorly.\n      vars[dec.id.name] = t.identifier(dec.id.name);\n\n      if (dec.init) {\n        exprs.push(t.assignmentExpression(\"=\", dec.id, dec.init));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n\n    if (exprs.length === 0) return null;\n\n    if (exprs.length === 1) return exprs[0];\n\n    return t.sequenceExpression(exprs);\n  }\n\n  funPath.get(\"body\").traverse({\n    VariableDeclaration: {\n      exit: function exit(path) {\n        var expr = varDeclToExpr(path.node, false);\n        if (expr === null) {\n          path.remove();\n        } else {\n          // We don't need to traverse this expression any further because\n          // there can't be any new declarations inside an expression.\n          util.replaceWithOrRemove(path, t.expressionStatement(expr));\n        }\n\n        // Since the original node has been either removed or replaced,\n        // avoid traversing it any further.\n        path.skip();\n      }\n    },\n\n    ForStatement: function ForStatement(path) {\n      var init = path.node.init;\n      if (t.isVariableDeclaration(init)) {\n        util.replaceWithOrRemove(path.get(\"init\"), varDeclToExpr(init, false));\n      }\n    },\n\n    ForXStatement: function ForXStatement(path) {\n      var left = path.get(\"left\");\n      if (left.isVariableDeclaration()) {\n        util.replaceWithOrRemove(left, varDeclToExpr(left.node, true));\n      }\n    },\n\n    FunctionDeclaration: function FunctionDeclaration(path) {\n      var node = path.node;\n      vars[node.id.name] = node.id;\n\n      var assignment = t.expressionStatement(t.assignmentExpression(\"=\", node.id, t.functionExpression(node.id, node.params, node.body, node.generator, node.expression)));\n\n      if (path.parentPath.isBlockStatement()) {\n        // Insert the assignment form before the first statement in the\n        // enclosing block.\n        path.parentPath.unshiftContainer(\"body\", assignment);\n\n        // Remove the function declaration now that we've inserted the\n        // equivalent assignment form at the beginning of the block.\n        path.remove();\n      } else {\n        // If the parent node is not a block statement, then we can just\n        // replace the declaration with the equivalent assignment form\n        // without worrying about hoisting it.\n        util.replaceWithOrRemove(path, assignment);\n      }\n\n      // Don't hoist variables out of inner functions.\n      path.skip();\n    },\n\n    FunctionExpression: function FunctionExpression(path) {\n      // Don't descend into nested function expressions.\n      path.skip();\n    }\n  });\n\n  var paramNames = {};\n  funPath.get(\"params\").forEach(function (paramPath) {\n    var param = paramPath.node;\n    if (t.isIdentifier(param)) {\n      paramNames[param.name] = param;\n    } else {\n      // Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n\n  var declarations = [];\n\n  (0, _keys2.default)(vars).forEach(function (name) {\n    if (!hasOwn.call(paramNames, name)) {\n      declarations.push(t.variableDeclarator(vars[name], null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return t.variableDeclaration(\"var\", declarations);\n};"]}