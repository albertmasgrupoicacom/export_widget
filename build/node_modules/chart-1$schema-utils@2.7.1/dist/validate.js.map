{"version":3,"sources":["validate.js"],"names":["Object","defineProperty","exports","value","default","_absolutePath","_interopRequireDefault","require","_ValidationError","obj","__esModule","Ajv","ajvKeywords","ajv","allErrors","verbose","$data","validate","schema","options","configuration","errors","Array","isArray","from","nestedOptions","validateObject","forEach","list","idx","applyPrefix","error","dataPath","children","reduce","arr","items","push","length","compiledSchema","compile","valid","filterErrors","newErrors","filter","oldError","includes","concat","slice","undefined","ValidationError","ValidateError","_default"],"mappings":"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","file":"validate.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _absolutePath = _interopRequireDefault(require(\"./keywords/absolutePath\"));\n\nvar _ValidationError = _interopRequireDefault(require(\"./ValidationError\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Use CommonJS require for ajv libs so TypeScript consumers aren't locked into esModuleInterop (see #110).\nconst Ajv = require('ajv');\n\nconst ajvKeywords = require('ajv-keywords');\n/** @typedef {import(\"json-schema\").JSONSchema4} JSONSchema4 */\n\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n\n/** @typedef {import(\"ajv\").ErrorObject} ErrorObject */\n\n/**\n * @typedef {Object} Extend\n * @property {number=} formatMinimum\n * @property {number=} formatMaximum\n * @property {boolean=} formatExclusiveMinimum\n * @property {boolean=} formatExclusiveMaximum\n */\n\n/** @typedef {(JSONSchema4 | JSONSchema6 | JSONSchema7) & Extend} Schema */\n\n/** @typedef {ErrorObject & { children?: Array<ErrorObject>}} SchemaUtilErrorObject */\n\n/**\n * @callback PostFormatter\n * @param {string} formattedError\n * @param {SchemaUtilErrorObject} error\n * @returns {string}\n */\n\n/**\n * @typedef {Object} ValidationErrorConfiguration\n * @property {string=} name\n * @property {string=} baseDataPath\n * @property {PostFormatter=} postFormatter\n */\n\n\nconst ajv = new Ajv({\n  allErrors: true,\n  verbose: true,\n  $data: true\n});\najvKeywords(ajv, ['instanceof', 'formatMinimum', 'formatMaximum', 'patternRequired']); // Custom keywords\n\n(0, _absolutePath.default)(ajv);\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @param {ValidationErrorConfiguration=} configuration\n * @returns {void}\n */\n\nfunction validate(schema, options, configuration) {\n  let errors = [];\n\n  if (Array.isArray(options)) {\n    errors = Array.from(options, nestedOptions => validateObject(schema, nestedOptions));\n    errors.forEach((list, idx) => {\n      const applyPrefix =\n      /**\n       * @param {SchemaUtilErrorObject} error\n       */\n      error => {\n        // eslint-disable-next-line no-param-reassign\n        error.dataPath = `[${idx}]${error.dataPath}`;\n\n        if (error.children) {\n          error.children.forEach(applyPrefix);\n        }\n      };\n\n      list.forEach(applyPrefix);\n    });\n    errors = errors.reduce((arr, items) => {\n      arr.push(...items);\n      return arr;\n    }, []);\n  } else {\n    errors = validateObject(schema, options);\n  }\n\n  if (errors.length > 0) {\n    throw new _ValidationError.default(errors, schema, configuration);\n  }\n}\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction validateObject(schema, options) {\n  const compiledSchema = ajv.compile(schema);\n  const valid = compiledSchema(options);\n  if (valid) return [];\n  return compiledSchema.errors ? filterErrors(compiledSchema.errors) : [];\n}\n/**\n * @param {Array<ErrorObject>} errors\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction filterErrors(errors) {\n  /** @type {Array<SchemaUtilErrorObject>} */\n  let newErrors = [];\n\n  for (const error of\n  /** @type {Array<SchemaUtilErrorObject>} */\n  errors) {\n    const {\n      dataPath\n    } = error;\n    /** @type {Array<SchemaUtilErrorObject>} */\n\n    let children = [];\n    newErrors = newErrors.filter(oldError => {\n      if (oldError.dataPath.includes(dataPath)) {\n        if (oldError.children) {\n          children = children.concat(oldError.children.slice(0));\n        } // eslint-disable-next-line no-undefined, no-param-reassign\n\n\n        oldError.children = undefined;\n        children.push(oldError);\n        return false;\n      }\n\n      return true;\n    });\n\n    if (children.length) {\n      error.children = children;\n    }\n\n    newErrors.push(error);\n  }\n\n  return newErrors;\n} // TODO change after resolve https://github.com/microsoft/TypeScript/issues/34994\n\n\nvalidate.ValidationError = _ValidationError.default;\nvalidate.ValidateError = _ValidationError.default;\nvar _default = validate;\nexports.default = _default;"]}