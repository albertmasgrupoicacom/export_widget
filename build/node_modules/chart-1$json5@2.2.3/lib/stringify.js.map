{"version":3,"sources":["stringify.js"],"names":["util","require","module","exports","stringify","value","replacer","space","stack","indent","propertyList","replacerFunc","gap","quote","Array","isArray","v","item","String","Number","undefined","indexOf","push","Math","min","floor","substr","serializeProperty","key","holder","toJSON5","toJSON","call","Boolean","valueOf","quoteString","serializeArray","serializeObject","quotes","replacements","product","i","length","c","isDigit","hexString","charCodeAt","toString","substring","quoteChar","Object","keys","reduce","a","b","replace","RegExp","TypeError","stepback","partial","propertyString","member","serializeKey","final","properties","join","separator","pop","firstChar","fromCodePoint","codePointAt","isIdStartChar","isIdContinueChar"],"mappings":"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","file":"stringify.js","sourcesContent":["const util = require('./util')\n\nmodule.exports = function stringify (value, replacer, space) {\n    const stack = []\n    let indent = ''\n    let propertyList\n    let replacerFunc\n    let gap = ''\n    let quote\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space\n        quote = replacer.quote\n        replacer = replacer.replacer\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer\n    } else if (Array.isArray(replacer)) {\n        propertyList = []\n        for (const v of replacer) {\n            let item\n\n            if (typeof v === 'string') {\n                item = v\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v)\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item)\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space)\n    } else if (space instanceof String) {\n        space = String(space)\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space))\n            gap = '          '.substr(0, space)\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10)\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key]\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key)\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key)\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value)\n        }\n\n        if (value instanceof Number) {\n            value = Number(value)\n        } else if (value instanceof String) {\n            value = String(value)\n        } else if (value instanceof Boolean) {\n            value = value.valueOf()\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        }\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        }\n\n        let product = ''\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i]\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++\n                product += c\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00'\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c]\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16)\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length)\n                continue\n            }\n\n            product += c\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b)\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar])\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value)\n\n        let stepback = indent\n        indent = indent + gap\n\n        let keys = propertyList || Object.keys(value)\n        let partial = []\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value)\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':'\n                if (gap !== '') {\n                    member += ' '\n                }\n                member += propertyString\n                partial.push(member)\n            }\n        }\n\n        let final\n        if (partial.length === 0) {\n            final = '{}'\n        } else {\n            let properties\n            if (gap === '') {\n                properties = partial.join(',')\n                final = '{' + properties + '}'\n            } else {\n                let separator = ',\\n' + indent\n                properties = partial.join(separator)\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}'\n            }\n        }\n\n        stack.pop()\n        indent = stepback\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0))\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value)\n\n        let stepback = indent\n        indent = indent + gap\n\n        let partial = []\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value)\n            partial.push((propertyString !== undefined) ? propertyString : 'null')\n        }\n\n        let final\n        if (partial.length === 0) {\n            final = '[]'\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',')\n                final = '[' + properties + ']'\n            } else {\n                let separator = ',\\n' + indent\n                let properties = partial.join(separator)\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']'\n            }\n        }\n\n        stack.pop()\n        indent = stepback\n        return final\n    }\n}\n"]}