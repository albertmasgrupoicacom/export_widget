{"version":3,"sources":["util.js"],"names":["unicode","require","module","exports","isSpaceSeparator","c","Space_Separator","test","isIdStartChar","ID_Start","isIdContinueChar","ID_Continue","isDigit","isHexDigit"],"mappings":";;;;AAAA,cAAMA,UAAUC,QAAQ,gBAAR,CAAhB;;AAEAC,eAAOC,OAAP,GAAiB;AACbC,6BAAkBC,CAAlB,EAAqB;AACjB,uBAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBL,QAAQM,eAAR,CAAwBC,IAAxB,CAA6BF,CAA7B,CAAhC;AACH,aAHY;;AAKbG,0BAAeH,CAAf,EAAkB;AACd,uBAAO,OAAOA,CAAP,KAAa,QAAb,KACFA,KAAK,GAAL,IAAYA,KAAK,GAAlB,IACHA,KAAK,GAAL,IAAYA,KAAK,GADd,IAEHA,MAAM,GAFH,IAEYA,MAAM,GAFlB,IAGJL,QAAQS,QAAR,CAAiBF,IAAjB,CAAsBF,CAAtB,CAJO,CAAP;AAMH,aAZY;;AAcbK,6BAAkBL,CAAlB,EAAqB;AACjB,uBAAO,OAAOA,CAAP,KAAa,QAAb,KACFA,KAAK,GAAL,IAAYA,KAAK,GAAlB,IACHA,KAAK,GAAL,IAAYA,KAAK,GADd,IAEHA,KAAK,GAAL,IAAYA,KAAK,GAFd,IAGHA,MAAM,GAHH,IAGYA,MAAM,GAHlB,IAIHA,MAAM,QAJH,IAIiBA,MAAM,QAJvB,IAKJL,QAAQW,WAAR,CAAoBJ,IAApB,CAAyBF,CAAzB,CANO,CAAP;AAQH,aAvBY;;AAyBbO,oBAASP,CAAT,EAAY;AACR,uBAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,QAAQE,IAAR,CAAaF,CAAb,CAAhC;AACH,aA3BY;;AA6BbQ,uBAAYR,CAAZ,EAAe;AACX,uBAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,cAAcE,IAAd,CAAmBF,CAAnB,CAAhC;AACH;AA/BY,SAAjB","file":"util.js","sourcesContent":["const unicode = require('../lib/unicode')\n\nmodule.exports = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n}\n"]}