{"version":3,"sources":["_array-copy-within.js"],"names":["toObject","require","toAbsoluteIndex","toLength","module","exports","copyWithin","target","start","O","len","length","to","from","end","arguments","undefined","count","Math","min","inc"],"mappings":"AAAA;AACA;;;;;;AACA,QAAIA,WAAWC,QAAQ,cAAR,CAAf;AACA,QAAIC,kBAAkBD,QAAQ,sBAAR,CAAtB;AACA,QAAIE,WAAWF,QAAQ,cAAR,CAAf;;AAEAG,WAAOC,OAAP,GAAiB,GAAGC,UAAH,IAAiB,SAASA,UAAT,CAAoBC,MAApB,CAA2B,SAA3B,EAAsCC,KAAtC,CAA4C,wBAA5C,EAAsE;AACtG,UAAIC,IAAIT,SAAS,IAAT,CAAR;AACA,UAAIU,MAAMP,SAASM,EAAEE,MAAX,CAAV;AACA,UAAIC,KAAKV,gBAAgBK,MAAhB,EAAwBG,GAAxB,CAAT;AACA,UAAIG,OAAOX,gBAAgBM,KAAhB,EAAuBE,GAAvB,CAAX;AACA,UAAII,MAAMC,UAAUJ,MAAV,GAAmB,CAAnB,GAAuBI,UAAU,CAAV,CAAvB,GAAsCC,SAAhD;AACA,UAAIC,QAAQC,KAAKC,GAAL,CAAS,CAACL,QAAQE,SAAR,GAAoBN,GAApB,GAA0BR,gBAAgBY,GAAhB,EAAqBJ,GAArB,CAA3B,IAAwDG,IAAjE,EAAuEH,MAAME,EAA7E,CAAZ;AACA,UAAIQ,MAAM,CAAV;AACA,UAAIP,OAAOD,EAAP,IAAaA,KAAKC,OAAOI,KAA7B,EAAoC;AAClCG,cAAM,CAAC,CAAP;AACAP,gBAAQI,QAAQ,CAAhB;AACAL,cAAMK,QAAQ,CAAd;AACD;AACD,aAAOA,UAAU,CAAjB,EAAoB;AAClB,YAAIJ,QAAQJ,CAAZ,EAAeA,EAAEG,EAAF,IAAQH,EAAEI,IAAF,CAAR,CAAf,KACK,OAAOJ,EAAEG,EAAF,CAAP;AACLA,cAAMQ,GAAN;AACAP,gBAAQO,GAAR;AACD,OAAC,OAAOX,CAAP;AACH,KAnBD","file":"_array-copy-within.js","sourcesContent":["// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n"]}