{"version":3,"sources":["_collection-strong.js"],"names":["dP","require","f","create","redefineAll","ctx","anInstance","forOf","$iterDefine","step","setSpecies","DESCRIPTORS","fastKey","validate","SIZE","getEntry","that","key","index","entry","_i","_f","n","k","module","exports","getConstructor","wrapper","NAME","IS_MAP","ADDER","C","iterable","_t","undefined","_l","prototype","clear","data","r","p","i","next","prev","forEach","callbackfn","arguments","length","v","has","get","def","value","setStrong","iterated","kind","_k"],"mappings":"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","file":"_collection-strong.js","sourcesContent":["'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n"]}