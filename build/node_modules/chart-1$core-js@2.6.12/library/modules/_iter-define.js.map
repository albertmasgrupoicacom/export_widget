{"version":3,"sources":["_iter-define.js"],"names":["LIBRARY","require","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","values","entries","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","methods","key","IteratorPrototype","call","Object","name","P","F"],"mappings":"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","file":"_iter-define.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n"]}