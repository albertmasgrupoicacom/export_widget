{"version":3,"sources":["es6.number.to-fixed.js"],"names":["$export","require","toInteger","aNumberValue","repeat","$toFixed","toFixed","floor","Math","data","ERROR","ZERO","multiply","n","c","i","c2","divide","numToString","s","t","String","call","length","pow","x","acc","log","x2","P","F","fractionDigits","f","m","e","z","j","k","RangeError","slice"],"mappings":"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","file":"es6.number.to-fixed.js","sourcesContent":["'use strict';\nvar $export = require('./_export');\nvar toInteger = require('./_to-integer');\nvar aNumberValue = require('./_a-number-value');\nvar repeat = require('./_string-repeat');\nvar $toFixed = 1.0.toFixed;\nvar floor = Math.floor;\nvar data = [0, 0, 0, 0, 0, 0];\nvar ERROR = 'Number.toFixed: incorrect invocation!';\nvar ZERO = '0';\n\nvar multiply = function (n, c) {\n  var i = -1;\n  var c2 = c;\n  while (++i < 6) {\n    c2 += n * data[i];\n    data[i] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\nvar divide = function (n) {\n  var i = 6;\n  var c = 0;\n  while (--i >= 0) {\n    c += data[i];\n    data[i] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\nvar numToString = function () {\n  var i = 6;\n  var s = '';\n  while (--i >= 0) {\n    if (s !== '' || i === 0 || data[i] !== 0) {\n      var t = String(data[i]);\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\n    }\n  } return s;\n};\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\n$export($export.P + $export.F * (!!$toFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !require('./_fails')(function () {\n  // V8 ~ Android 4.3-\n  $toFixed.call({});\n})), 'Number', {\n  toFixed: function toFixed(fractionDigits) {\n    var x = aNumberValue(this, ERROR);\n    var f = toInteger(fractionDigits);\n    var s = '';\n    var m = ZERO;\n    var e, z, j, k;\n    if (f < 0 || f > 20) throw RangeError(ERROR);\n    // eslint-disable-next-line no-self-compare\n    if (x != x) return 'NaN';\n    if (x <= -1e21 || x >= 1e21) return String(x);\n    if (x < 0) {\n      s = '-';\n      x = -x;\n    }\n    if (x > 1e-21) {\n      e = log(x * pow(2, 69, 1)) - 69;\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = f;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        m = numToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        m = numToString() + repeat.call(ZERO, f);\n      }\n    }\n    if (f > 0) {\n      k = m.length;\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\n    } else {\n      m = s + m;\n    } return m;\n  }\n});\n"]}