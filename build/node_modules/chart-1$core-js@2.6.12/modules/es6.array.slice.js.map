{"version":3,"sources":["es6.array.slice.js"],"names":["$export","require","html","cof","toAbsoluteIndex","toLength","arraySlice","slice","P","F","call","begin","end","len","length","klass","undefined","start","upTo","size","cloned","Array","i","charAt"],"mappings":"AAAA;;;;;;AACA,QAAIA,UAAUC,QAAQ,WAAR,CAAd;AACA,QAAIC,OAAOD,QAAQ,SAAR,CAAX;AACA,QAAIE,MAAMF,QAAQ,QAAR,CAAV;AACA,QAAIG,kBAAkBH,QAAQ,sBAAR,CAAtB;AACA,QAAII,WAAWJ,QAAQ,cAAR,CAAf;AACA,QAAIK,aAAa,GAAGC,KAApB;;AAEA;AACAP,YAAQA,QAAQQ,CAAR,GAAYR,QAAQS,CAAR,GAAYR,QAAQ,UAAR,EAAoB,YAAY;AAC9D,UAAIC,IAAJ,EAAUI,WAAWI,IAAX,CAAgBR,IAAhB;AACX,KAF+B,CAAhC,EAEI,OAFJ,EAEa;AACXK,aAAO,SAASA,KAAT,CAAeI,KAAf,EAAsBC,GAAtB,EAA2B;AAChC,YAAIC,MAAMR,SAAS,KAAKS,MAAd,CAAV;AACA,YAAIC,QAAQZ,IAAI,IAAJ,CAAZ;AACAS,cAAMA,QAAQI,SAAR,GAAoBH,GAApB,GAA0BD,GAAhC;AACA,YAAIG,SAAS,OAAb,EAAsB,OAAOT,WAAWI,IAAX,CAAgB,IAAhB,EAAsBC,KAAtB,EAA6BC,GAA7B,CAAP;AACtB,YAAIK,QAAQb,gBAAgBO,KAAhB,EAAuBE,GAAvB,CAAZ;AACA,YAAIK,OAAOd,gBAAgBQ,GAAhB,EAAqBC,GAArB,CAAX;AACA,YAAIM,OAAOd,SAASa,OAAOD,KAAhB,CAAX;AACA,YAAIG,SAAS,IAAIC,KAAJ,CAAUF,IAAV,CAAb;AACA,YAAIG,IAAI,CAAR;AACA,eAAOA,IAAIH,IAAX,EAAiBG,GAAjB,EAAsBF,OAAOE,CAAP,IAAYP,SAAS,QAAT,GAC9B,KAAKQ,MAAL,CAAYN,QAAQK,CAApB,CAD8B,GAE9B,KAAKL,QAAQK,CAAb,CAFkB;AAGtB,eAAOF,MAAP;AACD;AAfU,KAFb","file":"es6.array.slice.js","sourcesContent":["'use strict';\nvar $export = require('./_export');\nvar html = require('./_html');\nvar cof = require('./_cof');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar arraySlice = [].slice;\n\n// fallback for not array-like ES3 strings and DOM objects\n$export($export.P + $export.F * require('./_fails')(function () {\n  if (html) arraySlice.call(html);\n}), 'Array', {\n  slice: function slice(begin, end) {\n    var len = toLength(this.length);\n    var klass = cof(this);\n    end = end === undefined ? len : end;\n    if (klass == 'Array') return arraySlice.call(this, begin, end);\n    var start = toAbsoluteIndex(begin, len);\n    var upTo = toAbsoluteIndex(end, len);\n    var size = toLength(upTo - start);\n    var cloned = new Array(size);\n    var i = 0;\n    for (; i < size; i++) cloned[i] = klass == 'String'\n      ? this.charAt(start + i)\n      : this[start + i];\n    return cloned;\n  }\n});\n"]}