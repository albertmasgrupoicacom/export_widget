{"version":3,"sources":["_to-primitive.js"],"names":["isObject","require","module","exports","it","S","fn","val","toString","call","valueOf","TypeError"],"mappings":";;;;AAAA;AACA,QAAIA,WAAWC,QAAQ,cAAR,CAAf;AACA;AACA;AACAC,WAAOC,OAAP,GAAiB,UAAUC,EAAV,EAAcC,CAAd,EAAiB;AAChC,UAAI,CAACL,SAASI,EAAT,CAAL,EAAmB,OAAOA,EAAP;AACnB,UAAIE,EAAJ,EAAQC,GAAR;AACA,UAAIF,KAAK,QAAQC,KAAKF,GAAGI,QAAhB,KAA6B,UAAlC,IAAgD,CAACR,SAASO,MAAMD,GAAGG,IAAH,CAAQL,EAAR,CAAf,CAArD,EAAkF,OAAOG,GAAP;AAClF,UAAI,QAAQD,KAAKF,GAAGM,OAAhB,KAA4B,UAA5B,IAA0C,CAACV,SAASO,MAAMD,GAAGG,IAAH,CAAQL,EAAR,CAAf,CAA/C,EAA4E,OAAOG,GAAP;AAC5E,UAAI,CAACF,CAAD,IAAM,QAAQC,KAAKF,GAAGI,QAAhB,KAA6B,UAAnC,IAAiD,CAACR,SAASO,MAAMD,GAAGG,IAAH,CAAQL,EAAR,CAAf,CAAtD,EAAmF,OAAOG,GAAP;AACnF,YAAMI,UAAU,yCAAV,CAAN;AACD,KAPD","file":"_to-primitive.js","sourcesContent":["// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n"]}