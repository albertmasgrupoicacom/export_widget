{"version":3,"sources":["_microtask.js"],"names":["global","require","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","Promise","isNode","module","exports","head","last","notify","flush","parent","fn","domain","exit","next","e","undefined","enter","nextTick","navigator","standalone","toggle","node","document","createTextNode","observe","characterData","data","resolve","promise","then","call","task"],"mappings":";;;;AAAA,QAAIA,SAASC,QAAQ,WAAR,CAAb;AACA,QAAIC,YAAYD,QAAQ,SAAR,EAAmBE,GAAnC;AACA,QAAIC,WAAWJ,OAAOK,gBAAP,IAA2BL,OAAOM,sBAAjD;AACA,QAAIC,UAAUP,OAAOO,OAArB;AACA,QAAIC,UAAUR,OAAOQ,OAArB;AACA,QAAIC,SAASR,QAAQ,QAAR,EAAkBM,OAAlB,KAA8B,SAA3C;;AAEAG,WAAOC,OAAP,GAAiB,YAAY;AAC3B,UAAIC,IAAJ,EAAUC,IAAV,EAAgBC,MAAhB;;AAEA,UAAIC,QAAQ,YAAY;AACtB,YAAIC,MAAJ,EAAYC,EAAZ;AACA,YAAIR,WAAWO,SAAST,QAAQW,MAA5B,CAAJ,EAAyCF,OAAOG,IAAP;AACzC,eAAOP,IAAP,EAAa;AACXK,eAAKL,KAAKK,EAAV;AACAL,iBAAOA,KAAKQ,IAAZ;AACA,cAAI;AACFH;AACD,WAFD,CAEE,OAAOI,CAAP,EAAU;AACV,gBAAIT,IAAJ,EAAUE,SAAV,KACKD,OAAOS,SAAP;AACL,kBAAMD,CAAN;AACD;AACF,SAACR,OAAOS,SAAP;AACF,YAAIN,MAAJ,EAAYA,OAAOO,KAAP;AACb,OAfD;;AAiBA;AACA,UAAId,MAAJ,EAAY;AACVK,iBAAS,YAAY;AACnBP,kBAAQiB,QAAR,CAAiBT,KAAjB;AACD,SAFD;AAGF;AACC,OALD,MAKO,IAAIX,YAAY,EAAEJ,OAAOyB,SAAP,IAAoBzB,OAAOyB,SAAP,CAAiBC,UAAvC,CAAhB,EAAoE;AACzE,YAAIC,SAAS,IAAb;AACA,YAAIC,OAAOC,SAASC,cAAT,CAAwB,EAAxB,CAAX;AACA,YAAI1B,QAAJ,CAAaW,KAAb,EAAoBgB,OAApB,CAA4BH,IAA5B,EAAkC,EAAEI,eAAe,IAAjB,EAAlC,EAHyE,CAGb;AAC5DlB,iBAAS,YAAY;AACnBc,eAAKK,IAAL,GAAYN,SAAS,CAACA,MAAtB;AACD,SAFD;AAGF;AACC,OARM,MAQA,IAAInB,WAAWA,QAAQ0B,OAAvB,EAAgC;AACrC;AACA,YAAIC,UAAU3B,QAAQ0B,OAAR,CAAgBZ,SAAhB,CAAd;AACAR,iBAAS,YAAY;AACnBqB,kBAAQC,IAAR,CAAarB,KAAb;AACD,SAFD;AAGF;AACA;AACA;AACA;AACA;AACA;AACC,OAZM,MAYA;AACLD,iBAAS,YAAY;AACnB;AACAZ,oBAAUmC,IAAV,CAAerC,MAAf,EAAuBe,KAAvB;AACD,SAHD;AAID;;AAED,aAAO,UAAUE,EAAV,EAAc;AACnB,YAAIqB,OAAO,EAAErB,IAAIA,EAAN,EAAUG,MAAME,SAAhB,EAAX;AACA,YAAIT,IAAJ,EAAUA,KAAKO,IAAL,GAAYkB,IAAZ;AACV,YAAI,CAAC1B,IAAL,EAAW;AACTA,iBAAO0B,IAAP;AACAxB;AACD,SAACD,OAAOyB,IAAP;AACH,OAPD;AAQD,KA7DD","file":"_microtask.js","sourcesContent":["var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n"]}