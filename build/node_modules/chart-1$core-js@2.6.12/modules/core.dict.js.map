{"version":3,"sources":["core.dict.js"],"names":["ctx","require","$export","createDesc","assign","create","getPrototypeOf","getKeys","dP","keyOf","aFunction","forOf","isIterable","$iterCreate","step","isObject","toIObject","DESCRIPTORS","has","createDictMethod","TYPE","IS_MAP","IS_EVERY","object","callbackfn","that","f","O","result","Dict","undefined","key","val","res","findKey","createDictIter","kind","it","DictIterator","iterated","_t","_a","_i","_k","keys","length","iterable","dict","value","prototype","reduce","mapfn","init","i","memo","arguments","TypeError","Object","includes","el","get","set","isDict","G","F","S","values","entries","forEach","map","filter","some","every","find","mapPairs"],"mappings":"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","file":"core.dict.js","sourcesContent":["'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar assign = require('./_object-assign');\nvar create = require('./_object-create');\nvar getPrototypeOf = require('./_object-gpo');\nvar getKeys = require('./_object-keys');\nvar dP = require('./_object-dp');\nvar keyOf = require('./_keyof');\nvar aFunction = require('./_a-function');\nvar forOf = require('./_for-of');\nvar isIterable = require('./core.is-iterable');\nvar $iterCreate = require('./_iter-create');\nvar step = require('./_iter-step');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar DESCRIPTORS = require('./_descriptors');\nvar has = require('./_has');\n\n// 0 -> Dict.forEach\n// 1 -> Dict.map\n// 2 -> Dict.filter\n// 3 -> Dict.some\n// 4 -> Dict.every\n// 5 -> Dict.find\n// 6 -> Dict.findKey\n// 7 -> Dict.mapPairs\nvar createDictMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_EVERY = TYPE == 4;\n  return function (object, callbackfn, that /* = undefined */) {\n    var f = ctx(callbackfn, that, 3);\n    var O = toIObject(object);\n    var result = IS_MAP || TYPE == 7 || TYPE == 2\n          ? new (typeof this == 'function' ? this : Dict)() : undefined;\n    var key, val, res;\n    for (key in O) if (has(O, key)) {\n      val = O[key];\n      res = f(val, key, object);\n      if (TYPE) {\n        if (IS_MAP) result[key] = res;          // map\n        else if (res) switch (TYPE) {\n          case 2: result[key] = val; break;     // filter\n          case 3: return true;                  // some\n          case 5: return val;                   // find\n          case 6: return key;                   // findKey\n          case 7: result[res[0]] = res[1];      // mapPairs\n        } else if (IS_EVERY) return false;      // every\n      }\n    }\n    return TYPE == 3 || IS_EVERY ? IS_EVERY : result;\n  };\n};\nvar findKey = createDictMethod(6);\n\nvar createDictIter = function (kind) {\n  return function (it) {\n    return new DictIterator(it, kind);\n  };\n};\nvar DictIterator = function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._a = getKeys(iterated);   // keys\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n};\n$iterCreate(DictIterator, 'Dict', function () {\n  var that = this;\n  var O = that._t;\n  var keys = that._a;\n  var kind = that._k;\n  var key;\n  do {\n    if (that._i >= keys.length) {\n      that._t = undefined;\n      return step(1);\n    }\n  } while (!has(O, key = keys[that._i++]));\n  if (kind == 'keys') return step(0, key);\n  if (kind == 'values') return step(0, O[key]);\n  return step(0, [key, O[key]]);\n});\n\nfunction Dict(iterable) {\n  var dict = create(null);\n  if (iterable != undefined) {\n    if (isIterable(iterable)) {\n      forOf(iterable, true, function (key, value) {\n        dict[key] = value;\n      });\n    } else assign(dict, iterable);\n  }\n  return dict;\n}\nDict.prototype = null;\n\nfunction reduce(object, mapfn, init) {\n  aFunction(mapfn);\n  var O = toIObject(object);\n  var keys = getKeys(O);\n  var length = keys.length;\n  var i = 0;\n  var memo, key;\n  if (arguments.length < 3) {\n    if (!length) throw TypeError('Reduce of empty object with no initial value');\n    memo = O[keys[i++]];\n  } else memo = Object(init);\n  while (length > i) if (has(O, key = keys[i++])) {\n    memo = mapfn(memo, O[key], key, object);\n  }\n  return memo;\n}\n\nfunction includes(object, el) {\n  // eslint-disable-next-line no-self-compare\n  return (el == el ? keyOf(object, el) : findKey(object, function (it) {\n    // eslint-disable-next-line no-self-compare\n    return it != it;\n  })) !== undefined;\n}\n\nfunction get(object, key) {\n  if (has(object, key)) return object[key];\n}\nfunction set(object, key, value) {\n  if (DESCRIPTORS && key in Object) dP.f(object, key, createDesc(0, value));\n  else object[key] = value;\n  return object;\n}\n\nfunction isDict(it) {\n  return isObject(it) && getPrototypeOf(it) === Dict.prototype;\n}\n\n$export($export.G + $export.F, { Dict: Dict });\n\n$export($export.S, 'Dict', {\n  keys: createDictIter('keys'),\n  values: createDictIter('values'),\n  entries: createDictIter('entries'),\n  forEach: createDictMethod(0),\n  map: createDictMethod(1),\n  filter: createDictMethod(2),\n  some: createDictMethod(3),\n  every: createDictMethod(4),\n  find: createDictMethod(5),\n  findKey: findKey,\n  mapPairs: createDictMethod(7),\n  reduce: reduce,\n  keyOf: keyOf,\n  includes: includes,\n  has: has,\n  get: get,\n  set: set,\n  isDict: isDict\n});\n"]}