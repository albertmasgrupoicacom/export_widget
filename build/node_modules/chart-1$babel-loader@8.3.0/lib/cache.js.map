{"version":3,"sources":["cache.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","fs","require","os","path","zlib","crypto","findCacheDir","promisify","transform","defaultCacheDirectory","hashType","createHash","readFile","writeFile","gunzip","gzip","makeDir","read","_ref","filename","compress","data","content","JSON","parse","toString","_x","_x2","write","_ref2","result","stringify","_x3","_x4","_x5","source","identifier","options","hash","contents","update","digest","handleCache","_ref3","directory","params","cacheIdentifier","cacheDirectory","cacheCompression","file","join","fallback","tmpdir","externalDependencies","length","_x6","_x7","module","exports","_ref4","name","_x8"],"mappings":"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","file":"cache.js","sourcesContent":["\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n/**\n * Filesystem Cache\n *\n * Given a file and a transform function, cache the result into files\n * or retrieve the previously cached files if the given file is already known.\n *\n * @see https://github.com/babel/babel-loader/issues/34\n * @see https://github.com/babel/babel-loader/pull/41\n */\nconst fs = require(\"fs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst zlib = require(\"zlib\");\nconst crypto = require(\"crypto\");\nconst findCacheDir = require(\"find-cache-dir\");\nconst {\n  promisify\n} = require(\"util\");\nconst transform = require(\"./transform\");\n// Lazily instantiated when needed\nlet defaultCacheDirectory = null;\nlet hashType = \"sha256\";\n// use md5 hashing if sha256 is not available\ntry {\n  crypto.createHash(hashType);\n} catch (err) {\n  hashType = \"md5\";\n}\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\nconst gunzip = promisify(zlib.gunzip);\nconst gzip = promisify(zlib.gzip);\nconst makeDir = require(\"make-dir\");\n\n/**\n * Read the contents from the compressed file.\n *\n * @async\n * @params {String} filename\n * @params {Boolean} compress\n */\nconst read = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (filename, compress) {\n    const data = yield readFile(filename + (compress ? \".gz\" : \"\"));\n    const content = compress ? yield gunzip(data) : data;\n    return JSON.parse(content.toString());\n  });\n  return function read(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/**\n * Write contents into a compressed file.\n *\n * @async\n * @params {String} filename\n * @params {Boolean} compress\n * @params {String} result\n */\nconst write = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (filename, compress, result) {\n    const content = JSON.stringify(result);\n    const data = compress ? yield gzip(content) : content;\n    return yield writeFile(filename + (compress ? \".gz\" : \"\"), data);\n  });\n  return function write(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n/**\n * Build the filename for the cached file\n *\n * @params {String} source  File source code\n * @params {Object} options Options used\n *\n * @return {String}\n */\nconst filename = function (source, identifier, options) {\n  const hash = crypto.createHash(hashType);\n  const contents = JSON.stringify({\n    source,\n    options,\n    identifier\n  });\n  hash.update(contents);\n  return hash.digest(\"hex\") + \".json\";\n};\n\n/**\n * Handle the cache\n *\n * @params {String} directory\n * @params {Object} params\n */\nconst handleCache = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (directory, params) {\n    const {\n      source,\n      options = {},\n      cacheIdentifier,\n      cacheDirectory,\n      cacheCompression\n    } = params;\n    const file = path.join(directory, filename(source, cacheIdentifier, options));\n    try {\n      // No errors mean that the file was previously cached\n      // we just need to return it\n      return yield read(file, cacheCompression);\n    } catch (err) {}\n    const fallback = typeof cacheDirectory !== \"string\" && directory !== os.tmpdir();\n\n    // Make sure the directory exists.\n    try {\n      yield makeDir(directory);\n    } catch (err) {\n      if (fallback) {\n        return handleCache(os.tmpdir(), params);\n      }\n      throw err;\n    }\n\n    // Otherwise just transform the file\n    // return it to the user asap and write it in cache\n    const result = yield transform(source, options);\n\n    // Do not cache if there are external dependencies,\n    // since they might change and we cannot control it.\n    if (!result.externalDependencies.length) {\n      try {\n        yield write(file, cacheCompression, result);\n      } catch (err) {\n        if (fallback) {\n          // Fallback to tmpdir if node_modules folder not writable\n          return handleCache(os.tmpdir(), params);\n        }\n        throw err;\n      }\n    }\n    return result;\n  });\n  return function handleCache(_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n/**\n * Retrieve file from cache, or create a new one for future reads\n *\n * @async\n * @param  {Object}   params\n * @param  {String}   params.cacheDirectory   Directory to store cached files\n * @param  {String}   params.cacheIdentifier  Unique identifier to bust cache\n * @param  {Boolean}  params.cacheCompression Whether compressing cached files\n * @param  {String}   params.source   Original contents of the file to be cached\n * @param  {Object}   params.options  Options to be given to the transform fn\n *\n * @example\n *\n *   const result = await cache({\n *     cacheDirectory: '.tmp/cache',\n *     cacheIdentifier: 'babel-loader-cachefile',\n *     cacheCompression: false,\n *     source: *source code from file*,\n *     options: {\n *       experimental: true,\n *       runtime: true\n *     },\n *   });\n */\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (params) {\n    let directory;\n    if (typeof params.cacheDirectory === \"string\") {\n      directory = params.cacheDirectory;\n    } else {\n      if (defaultCacheDirectory === null) {\n        defaultCacheDirectory = findCacheDir({\n          name: \"babel-loader\"\n        }) || os.tmpdir();\n      }\n      directory = defaultCacheDirectory;\n    }\n    return yield handleCache(directory, params);\n  });\n  return function (_x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();"]}