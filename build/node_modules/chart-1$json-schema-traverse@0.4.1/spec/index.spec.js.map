{"version":3,"sources":["index.spec.js"],"names":["traverse","require","assert","describe","calls","beforeEach","it","schema","expectedCalls","cb","callback","deepStrictEqual","someObject","minimum","maximum","undefined","allKeys","schema2","const","foo","enum","required","another","patternProperties","dependencies","properties","smaller","type","larger","$data","name","age","pre","post","push","Array","prototype","slice","call","arguments","concat"],"mappings":"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","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar traverse = require('../index');\nvar assert = require('assert');\n\ndescribe('json-schema-traverse', function() {\n  var calls;\n\n  beforeEach(function() {\n    calls = [];\n  });\n\n  it('should traverse all keywords containing schemas recursively', function() {\n    var schema = require('./fixtures/schema').schema;\n    var expectedCalls = require('./fixtures/schema').expectedCalls;\n\n    traverse(schema, {cb: callback});\n    assert.deepStrictEqual(calls, expectedCalls);\n  });\n\n  describe('Legacy v0.3.1 API', function() {\n    it('should traverse all keywords containing schemas recursively', function() {\n      var schema = require('./fixtures/schema').schema;\n      var expectedCalls = require('./fixtures/schema').expectedCalls;\n\n      traverse(schema, callback);\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n\n    it('should work when an options object is provided', function() {\n      // schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex\n      var schema = require('./fixtures/schema').schema;\n      var expectedCalls = require('./fixtures/schema').expectedCalls;\n\n      traverse(schema, {}, callback);\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n  });\n\n\n  describe('allKeys option', function() {\n    var schema = {\n      someObject: {\n        minimum: 1,\n        maximum: 2\n      }\n    };\n\n    it('should traverse objects with allKeys: true option', function() {\n      // schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex\n      var expectedCalls = [\n        [schema, '', schema, undefined, undefined, undefined, undefined],\n        [schema.someObject, '/someObject', schema, '', 'someObject', schema, undefined]\n      ];\n\n      traverse(schema, {allKeys: true, cb: callback});\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n\n\n    it('should NOT traverse objects with allKeys: false option', function() {\n      // schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex\n      var expectedCalls = [\n        [schema, '', schema, undefined, undefined, undefined, undefined]\n      ];\n\n      traverse(schema, {allKeys: false, cb: callback});\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n\n\n    it('should NOT traverse objects without allKeys option', function() {\n      // schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex\n      var expectedCalls = [\n        [schema, '', schema, undefined, undefined, undefined, undefined]\n      ];\n\n      traverse(schema, {cb: callback});\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n\n\n    it('should NOT travers objects in standard keywords which value is not a schema', function() {\n      var schema2 = {\n        const: {foo: 'bar'},\n        enum: ['a', 'b'],\n        required: ['foo'],\n        another: {\n\n        },\n        patternProperties: {}, // will not traverse - no properties\n        dependencies: true, // will not traverse - invalid\n        properties: {\n          smaller: {\n            type: 'number'\n          },\n          larger: {\n            type: 'number',\n            minimum: {$data: '1/smaller'}\n          }\n        }\n      };\n\n      // schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex\n      var expectedCalls = [\n        [schema2, '', schema2, undefined, undefined, undefined, undefined],\n        [schema2.another, '/another', schema2, '', 'another', schema2, undefined],\n        [schema2.properties.smaller, '/properties/smaller', schema2, '', 'properties', schema2, 'smaller'],\n        [schema2.properties.larger, '/properties/larger', schema2, '', 'properties', schema2, 'larger'],\n      ];\n\n      traverse(schema2, {allKeys: true, cb: callback});\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n  });\n\n  describe('pre and post', function() {\n    var schema = {\n      type: 'object',\n      properties: {\n        name: {type: 'string'},\n        age: {type: 'number'}\n      }\n    };\n\n    it('should traverse schema in pre-order', function() {\n      traverse(schema, {cb: {pre}});\n      var expectedCalls = [\n        ['pre', schema, '', schema, undefined, undefined, undefined, undefined],\n        ['pre', schema.properties.name, '/properties/name', schema, '', 'properties', schema, 'name'],\n        ['pre', schema.properties.age, '/properties/age', schema, '', 'properties', schema, 'age'],\n      ];\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n\n    it('should traverse schema in post-order', function() {\n      traverse(schema, {cb: {post}});\n      var expectedCalls = [\n        ['post', schema.properties.name, '/properties/name', schema, '', 'properties', schema, 'name'],\n        ['post', schema.properties.age, '/properties/age', schema, '', 'properties', schema, 'age'],\n        ['post', schema, '', schema, undefined, undefined, undefined, undefined],\n      ];\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n\n    it('should traverse schema in pre- and post-order at the same time', function() {\n      traverse(schema, {cb: {pre, post}});\n      var expectedCalls = [\n        ['pre', schema, '', schema, undefined, undefined, undefined, undefined],\n        ['pre', schema.properties.name, '/properties/name', schema, '', 'properties', schema, 'name'],\n        ['post', schema.properties.name, '/properties/name', schema, '', 'properties', schema, 'name'],\n        ['pre', schema.properties.age, '/properties/age', schema, '', 'properties', schema, 'age'],\n        ['post', schema.properties.age, '/properties/age', schema, '', 'properties', schema, 'age'],\n        ['post', schema, '', schema, undefined, undefined, undefined, undefined],\n      ];\n      assert.deepStrictEqual(calls, expectedCalls);\n    });\n  });\n\n  function callback() {\n    calls.push(Array.prototype.slice.call(arguments));\n  }\n\n  function pre() {\n    calls.push(['pre'].concat(Array.prototype.slice.call(arguments)));\n  }\n\n  function post() {\n    calls.push(['post'].concat(Array.prototype.slice.call(arguments)));\n  }\n});\n"]}