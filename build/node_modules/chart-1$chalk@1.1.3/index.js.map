{"version":3,"sources":["index.js"],"names":["escapeStringRegexp","require","ansiStyles","stripAnsi","hasAnsi","supportsColor","defineProps","Object","defineProperties","isSimpleWindowsTerm","process","platform","test","env","TERM","Chalk","options","enabled","undefined","blue","open","styles","ret","keys","forEach","key","closeRe","RegExp","close","get","build","call","_styles","concat","proto","chalk","builder","applyStyle","apply","arguments","__proto__","args","argsLen","length","str","String","a","nestedStyles","i","originalDim","dim","indexOf","code","replace","init","name","prototype","module","exports","hasColor","stripColor"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n"]}