{"version":3,"sources":["evaluation.js"],"names":["exports","__esModule","_typeof2","require","_typeof3","_interopRequireDefault","_getIterator2","_getIterator3","_map","_map2","evaluateTruthy","evaluate","obj","default","VALID_CALLEES","INVALID_METHODS","res","confident","value","deoptPath","seen","deopt","path","undefined","node","has","existing","get","resolved","item","set","val","_evaluate","isSequenceExpression","exprs","length","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","isTemplateLiteral","str","i","_exprs","_iterator","quasis","_isArray","Array","isArray","_i","_ref","next","done","elem","cooked","expr","String","isConditionalExpression","testResult","isExpressionWrapper","isMemberExpression","parentPath","isCallExpression","callee","property","object","isLiteral","isIdentifier","_value","type","name","isReferencedIdentifier","binding","scope","getBinding","constantViolations","start","end","hasValue","Infinity","NaN","resolve","isUnaryExpression","prefix","operator","argument","isFunction","isClass","arg","isArrayExpression","arr","elems","_iterator2","_isArray2","_i2","_ref2","_elem","push","isObjectExpression","props","_iterator3","_isArray3","_i3","_ref3","prop","isObjectMethod","isSpreadProperty","keyPath","key","computed","valuePath","_value2","isLogicalExpression","wasConfident","left","leftConfident","right","rightConfident","isBinaryExpression","_left","_right","Math","pow","context","func","indexOf","global","_object","_property","_type","args","map","apply"],"mappings":"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","file":"evaluation.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nvar INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  var res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction evaluate() {\n  var confident = true;\n  var deoptPath = void 0;\n  var seen = new _map2.default();\n\n  function deopt(path) {\n    if (!confident) return;\n    deoptPath = path;\n    confident = false;\n  }\n\n  var value = evaluate(this);\n  if (!confident) value = undefined;\n  return {\n    confident: confident,\n    deopt: deoptPath,\n    value: value\n  };\n\n  function evaluate(path) {\n    var node = path.node;\n\n\n    if (seen.has(node)) {\n      var existing = seen.get(node);\n      if (existing.resolved) {\n        return existing.value;\n      } else {\n        deopt(path);\n        return;\n      }\n    } else {\n      var item = { resolved: false };\n      seen.set(node, item);\n\n      var val = _evaluate(path);\n      if (confident) {\n        item.resolved = true;\n        item.value = val;\n      }\n      return val;\n    }\n  }\n\n  function _evaluate(path) {\n    if (!confident) return;\n\n    var node = path.node;\n\n\n    if (path.isSequenceExpression()) {\n      var exprs = path.get(\"expressions\");\n      return evaluate(exprs[exprs.length - 1]);\n    }\n\n    if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n      return node.value;\n    }\n\n    if (path.isNullLiteral()) {\n      return null;\n    }\n\n    if (path.isTemplateLiteral()) {\n      var str = \"\";\n\n      var i = 0;\n      var _exprs = path.get(\"expressions\");\n\n      for (var _iterator = node.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var elem = _ref;\n\n        if (!confident) break;\n\n        str += elem.value.cooked;\n\n        var expr = _exprs[i++];\n        if (expr) str += String(evaluate(expr));\n      }\n\n      if (!confident) return;\n      return str;\n    }\n\n    if (path.isConditionalExpression()) {\n      var testResult = evaluate(path.get(\"test\"));\n      if (!confident) return;\n      if (testResult) {\n        return evaluate(path.get(\"consequent\"));\n      } else {\n        return evaluate(path.get(\"alternate\"));\n      }\n    }\n\n    if (path.isExpressionWrapper()) {\n      return evaluate(path.get(\"expression\"));\n    }\n\n    if (path.isMemberExpression() && !path.parentPath.isCallExpression({ callee: node })) {\n      var property = path.get(\"property\");\n      var object = path.get(\"object\");\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        var _value = object.node.value;\n        var type = typeof _value === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(_value);\n        if (type === \"number\" || type === \"string\") {\n          return _value[property.node.name];\n        }\n      }\n    }\n\n    if (path.isReferencedIdentifier()) {\n      var binding = path.scope.getBinding(node.name);\n\n      if (binding && binding.constantViolations.length > 0) {\n        return deopt(binding.path);\n      }\n\n      if (binding && path.node.start < binding.path.node.end) {\n        return deopt(binding.path);\n      }\n\n      if (binding && binding.hasValue) {\n        return binding.value;\n      } else {\n        if (node.name === \"undefined\") {\n          return binding ? deopt(binding.path) : undefined;\n        } else if (node.name === \"Infinity\") {\n          return binding ? deopt(binding.path) : Infinity;\n        } else if (node.name === \"NaN\") {\n          return binding ? deopt(binding.path) : NaN;\n        }\n\n        var resolved = path.resolve();\n        if (resolved === path) {\n          return deopt(path);\n        } else {\n          return evaluate(resolved);\n        }\n      }\n    }\n\n    if (path.isUnaryExpression({ prefix: true })) {\n      if (node.operator === \"void\") {\n        return undefined;\n      }\n\n      var argument = path.get(\"argument\");\n      if (node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n        return \"function\";\n      }\n\n      var arg = evaluate(argument);\n      if (!confident) return;\n      switch (node.operator) {\n        case \"!\":\n          return !arg;\n        case \"+\":\n          return +arg;\n        case \"-\":\n          return -arg;\n        case \"~\":\n          return ~arg;\n        case \"typeof\":\n          return typeof arg === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(arg);\n      }\n    }\n\n    if (path.isArrayExpression()) {\n      var arr = [];\n      var elems = path.get(\"elements\");\n      for (var _iterator2 = elems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var _elem = _ref2;\n\n        _elem = _elem.evaluate();\n\n        if (_elem.confident) {\n          arr.push(_elem.value);\n        } else {\n          return deopt(_elem);\n        }\n      }\n      return arr;\n    }\n\n    if (path.isObjectExpression()) {\n      var obj = {};\n      var props = path.get(\"properties\");\n      for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var prop = _ref3;\n\n        if (prop.isObjectMethod() || prop.isSpreadProperty()) {\n          return deopt(prop);\n        }\n        var keyPath = prop.get(\"key\");\n        var key = keyPath;\n        if (prop.node.computed) {\n          key = key.evaluate();\n          if (!key.confident) {\n            return deopt(keyPath);\n          }\n          key = key.value;\n        } else if (key.isIdentifier()) {\n          key = key.node.name;\n        } else {\n          key = key.node.value;\n        }\n        var valuePath = prop.get(\"value\");\n        var _value2 = valuePath.evaluate();\n        if (!_value2.confident) {\n          return deopt(valuePath);\n        }\n        _value2 = _value2.value;\n        obj[key] = _value2;\n      }\n      return obj;\n    }\n\n    if (path.isLogicalExpression()) {\n      var wasConfident = confident;\n      var left = evaluate(path.get(\"left\"));\n      var leftConfident = confident;\n      confident = wasConfident;\n      var right = evaluate(path.get(\"right\"));\n      var rightConfident = confident;\n      confident = leftConfident && rightConfident;\n\n      switch (node.operator) {\n        case \"||\":\n          if (left && leftConfident) {\n            confident = true;\n            return left;\n          }\n\n          if (!confident) return;\n\n          return left || right;\n        case \"&&\":\n          if (!left && leftConfident || !right && rightConfident) {\n            confident = true;\n          }\n\n          if (!confident) return;\n\n          return left && right;\n      }\n    }\n\n    if (path.isBinaryExpression()) {\n      var _left = evaluate(path.get(\"left\"));\n      if (!confident) return;\n      var _right = evaluate(path.get(\"right\"));\n      if (!confident) return;\n\n      switch (node.operator) {\n        case \"-\":\n          return _left - _right;\n        case \"+\":\n          return _left + _right;\n        case \"/\":\n          return _left / _right;\n        case \"*\":\n          return _left * _right;\n        case \"%\":\n          return _left % _right;\n        case \"**\":\n          return Math.pow(_left, _right);\n        case \"<\":\n          return _left < _right;\n        case \">\":\n          return _left > _right;\n        case \"<=\":\n          return _left <= _right;\n        case \">=\":\n          return _left >= _right;\n        case \"==\":\n          return _left == _right;\n        case \"!=\":\n          return _left != _right;\n        case \"===\":\n          return _left === _right;\n        case \"!==\":\n          return _left !== _right;\n        case \"|\":\n          return _left | _right;\n        case \"&\":\n          return _left & _right;\n        case \"^\":\n          return _left ^ _right;\n        case \"<<\":\n          return _left << _right;\n        case \">>\":\n          return _left >> _right;\n        case \">>>\":\n          return _left >>> _right;\n      }\n    }\n\n    if (path.isCallExpression()) {\n      var callee = path.get(\"callee\");\n      var context = void 0;\n      var func = void 0;\n\n      if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name, true) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n        func = global[node.callee.name];\n      }\n\n      if (callee.isMemberExpression()) {\n        var _object = callee.get(\"object\");\n        var _property = callee.get(\"property\");\n\n        if (_object.isIdentifier() && _property.isIdentifier() && VALID_CALLEES.indexOf(_object.node.name) >= 0 && INVALID_METHODS.indexOf(_property.node.name) < 0) {\n          context = global[_object.node.name];\n          func = context[_property.node.name];\n        }\n\n        if (_object.isLiteral() && _property.isIdentifier()) {\n          var _type = (0, _typeof3.default)(_object.node.value);\n          if (_type === \"string\" || _type === \"number\") {\n            context = _object.node.value;\n            func = context[_property.node.name];\n          }\n        }\n      }\n\n      if (func) {\n        var args = path.get(\"arguments\").map(evaluate);\n        if (!confident) return;\n\n        return func.apply(context, args);\n      }\n    }\n\n    deopt(path);\n  }\n}"]}