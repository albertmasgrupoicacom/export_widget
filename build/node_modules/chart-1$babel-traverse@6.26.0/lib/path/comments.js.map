{"version":3,"sources":["comments.js"],"names":["exports","__esModule","shareCommentsWithSiblings","addComment","addComments","key","node","trailing","trailingComments","leading","leadingComments","prev","getSibling","next","type","content","line","value","comments","concat"],"mappings":"AAAA;;;;;;AAEAA,YAAQC,UAAR,GAAqB,IAArB;AACAD,YAAQE,yBAAR,GAAoCA,yBAApC;AACAF,YAAQG,UAAR,GAAqBA,UAArB;AACAH,YAAQI,WAAR,GAAsBA,WAAtB;AACA,aAASF,yBAAT,GAAqC;AACnC,UAAI,OAAO,KAAKG,GAAZ,KAAoB,QAAxB,EAAkC;;AAElC,UAAIC,OAAO,KAAKA,IAAhB;AACA,UAAI,CAACA,IAAL,EAAW;;AAEX,UAAIC,WAAWD,KAAKE,gBAApB;AACA,UAAIC,UAAUH,KAAKI,eAAnB;AACA,UAAI,CAACH,QAAD,IAAa,CAACE,OAAlB,EAA2B;;AAE3B,UAAIE,OAAO,KAAKC,UAAL,CAAgB,KAAKP,GAAL,GAAW,CAA3B,CAAX;AACA,UAAIQ,OAAO,KAAKD,UAAL,CAAgB,KAAKP,GAAL,GAAW,CAA3B,CAAX;;AAEA,UAAI,CAACM,KAAKL,IAAV,EAAgBK,OAAOE,IAAP;AAChB,UAAI,CAACA,KAAKP,IAAV,EAAgBO,OAAOF,IAAP;;AAEhBA,WAAKP,WAAL,CAAiB,UAAjB,EAA6BK,OAA7B;AACAI,WAAKT,WAAL,CAAiB,SAAjB,EAA4BG,QAA5B;AACD;;AAED,aAASJ,UAAT,CAAoBW,IAApB,EAA0BC,OAA1B,EAAmCC,IAAnC,EAAyC;AACvC,WAAKZ,WAAL,CAAiBU,IAAjB,EAAuB,CAAC;AACtBA,cAAME,OAAO,aAAP,GAAuB,cADP;AAEtBC,eAAOF;AAFe,OAAD,CAAvB;AAID;;AAED,aAASX,WAAT,CAAqBU,IAArB,EAA2BI,QAA3B,EAAqC;AACnC,UAAI,CAACA,QAAL,EAAe;;AAEf,UAAIZ,OAAO,KAAKA,IAAhB;AACA,UAAI,CAACA,IAAL,EAAW;;AAEX,UAAID,MAAMS,OAAO,UAAjB;;AAEA,UAAIR,KAAKD,GAAL,CAAJ,EAAe;AACbC,aAAKD,GAAL,IAAYC,KAAKD,GAAL,EAAUc,MAAV,CAAiBD,QAAjB,CAAZ;AACD,OAFD,MAEO;AACLZ,aAAKD,GAAL,IAAYa,QAAZ;AACD;AACF","file":"comments.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var trailing = node.trailingComments;\n  var leading = node.leadingComments;\n  if (!trailing && !leading) return;\n\n  var prev = this.getSibling(this.key - 1);\n  var next = this.getSibling(this.key + 1);\n\n  if (!prev.node) prev = next;\n  if (!next.node) next = prev;\n\n  prev.addComments(\"trailing\", leading);\n  next.addComments(\"leading\", trailing);\n}\n\nfunction addComment(type, content, line) {\n  this.addComments(type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}\n\nfunction addComments(type, comments) {\n  if (!comments) return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var key = type + \"Comments\";\n\n  if (node[key]) {\n    node[key] = node[key].concat(comments);\n  } else {\n    node[key] = comments;\n  }\n}"]}