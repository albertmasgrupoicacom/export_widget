{"version":3,"sources":["flow.js"],"names":["exports","__esModule","createUnionTypeAnnotation","removeTypeDuplicates","createTypeAnnotationBasedOnTypeof","_index","require","t","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","types","flattened","length","unionTypeAnnotation","nodes","generics","bases","typeGroups","i","node","indexOf","isAnyTypeAnnotation","isFlowBaseAnnotation","type","isUnionTypeAnnotation","concat","push","isGenericTypeAnnotation","name","id","existing","typeParameters","params","_name","stringTypeAnnotation","numberTypeAnnotation","voidTypeAnnotation","booleanTypeAnnotation","genericTypeAnnotation","identifier","Error"],"mappings":"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","file":"flow.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.createUnionTypeAnnotation = createUnionTypeAnnotation;\nexports.removeTypeDuplicates = removeTypeDuplicates;\nexports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction createUnionTypeAnnotation(types) {\n  var flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return t.unionTypeAnnotation(flattened);\n  }\n}\n\nfunction removeTypeDuplicates(nodes) {\n  var generics = {};\n  var bases = {};\n\n  var typeGroups = [];\n\n  var types = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if (t.isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (t.isFlowBaseAnnotation(node)) {\n      bases[node.type] = node;\n      continue;\n    }\n\n    if (t.isUnionTypeAnnotation(node)) {\n      if (typeGroups.indexOf(node.types) < 0) {\n        nodes = nodes.concat(node.types);\n        typeGroups.push(node.types);\n      }\n      continue;\n    }\n\n    if (t.isGenericTypeAnnotation(node)) {\n      var name = node.id.name;\n\n      if (generics[name]) {\n        var existing = generics[name];\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics[name] = node;\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (var type in bases) {\n    types.push(bases[type]);\n  }\n\n  for (var _name in generics) {\n    types.push(generics[_name]);\n  }\n\n  return types;\n}\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  if (type === \"string\") {\n    return t.stringTypeAnnotation();\n  } else if (type === \"number\") {\n    return t.numberTypeAnnotation();\n  } else if (type === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (type === \"boolean\") {\n    return t.booleanTypeAnnotation();\n  } else if (type === \"function\") {\n    return t.genericTypeAnnotation(t.identifier(\"Function\"));\n  } else if (type === \"object\") {\n    return t.genericTypeAnnotation(t.identifier(\"Object\"));\n  } else if (type === \"symbol\") {\n    return t.genericTypeAnnotation(t.identifier(\"Symbol\"));\n  } else {\n    throw new Error(\"Invalid typeof value\");\n  }\n}"]}