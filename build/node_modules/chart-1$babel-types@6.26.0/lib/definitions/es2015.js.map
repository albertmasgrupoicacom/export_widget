{"version":3,"sources":["es2015.js"],"names":["_index","require","_index2","_interopRequireDefault","obj","__esModule","default","visitor","aliases","fields","left","validate","assertNodeType","right","decorators","chain","assertValueType","assertEach","elements","builder","params","body","async","id","superClass","optional","inherits","source","declaration","specifiers","local","exported","imported","importKind","assertOneOf","meta","property","kind","computed","static","key","node","val","expectedTypes","apply","undefined","generator","properties","argument","tag","quasi","value","tail","quasis","expressions","delegate"],"mappings":"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","file":"es2015.js","sourcesContent":["\"use strict\";\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    left: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    },\n    right: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    elements: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\")))\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: {\n    params: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"LVal\")))\n    },\n    body: {\n      validate: (0, _index.assertNodeType)(\"BlockStatement\", \"Expression\")\n    },\n    async: {\n      validate: (0, _index.assertValueType)(\"boolean\"),\n      default: false\n    }\n  }\n});\n\n(0, _index2.default)(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"ClassMethod\", \"ClassProperty\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"ClassDeclaration\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\"id\", \"body\", \"superClass\", \"mixins\", \"typeParameters\", \"superTypeParameters\", \"implements\", \"decorators\"],\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\", \"Pureish\"],\n  fields: {\n    id: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"ClassExpression\", {\n  inherits: \"ClassDeclaration\",\n  aliases: [\"Scopable\", \"Class\", \"Expression\", \"Pureish\"],\n  fields: {\n    id: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"ExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    source: {\n      validate: (0, _index.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: (0, _index.assertNodeType)(\"FunctionDeclaration\", \"ClassDeclaration\", \"Expression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ExportNamedDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: (0, _index.assertNodeType)(\"Declaration\"),\n      optional: true\n    },\n    specifiers: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"ExportSpecifier\")))\n    },\n    source: {\n      validate: (0, _index.assertNodeType)(\"StringLiteral\"),\n      optional: true\n    }\n  }\n});\n\n(0, _index2.default)(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    },\n    exported: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: (0, _index.assertNodeType)(\"VariableDeclaration\", \"LVal\")\n    },\n    right: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ImportDeclaration\", {\n  visitor: [\"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\n  fields: {\n    specifiers: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"ImportSpecifier\", \"ImportDefaultSpecifier\", \"ImportNamespaceSpecifier\")))\n    },\n    source: {\n      validate: (0, _index.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    },\n    imported: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    },\n    importKind: {\n      validate: (0, _index.assertOneOf)(null, \"type\", \"typeof\")\n    }\n  }\n});\n\n(0, _index2.default)(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate: (0, _index.assertValueType)(\"string\")\n    },\n    property: {\n      validate: (0, _index.assertValueType)(\"string\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  fields: {\n    kind: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"string\"), (0, _index.assertOneOf)(\"get\", \"set\", \"method\", \"constructor\")),\n      default: \"method\"\n    },\n    computed: {\n      default: false,\n      validate: (0, _index.assertValueType)(\"boolean\")\n    },\n    static: {\n      default: false,\n      validate: (0, _index.assertValueType)(\"boolean\")\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\n        _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    params: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"LVal\")))\n    },\n    body: {\n      validate: (0, _index.assertNodeType)(\"BlockStatement\")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index.assertValueType)(\"boolean\")\n    },\n    async: {\n      default: false,\n      validate: (0, _index.assertValueType)(\"boolean\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ObjectPattern\", {\n  visitor: [\"properties\", \"typeAnnotation\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    properties: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"RestProperty\", \"Property\")))\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"Super\", {\n  aliases: [\"Expression\"]\n});\n\n(0, _index2.default)(\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    },\n    quasi: {\n      validate: (0, _index.assertNodeType)(\"TemplateLiteral\")\n    }\n  }\n});\n\n(0, _index2.default)(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {},\n    tail: {\n      validate: (0, _index.assertValueType)(\"boolean\"),\n      default: false\n    }\n  }\n});\n\n(0, _index2.default)(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"TemplateElement\")))\n    },\n    expressions: {\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Expression\")))\n    }\n  }\n});\n\n(0, _index2.default)(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: (0, _index.assertValueType)(\"boolean\"),\n      default: false\n    },\n    argument: {\n      optional: true,\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});"]}