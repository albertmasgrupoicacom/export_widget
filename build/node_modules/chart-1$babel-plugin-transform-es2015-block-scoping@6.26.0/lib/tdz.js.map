{"version":3,"sources":["tdz.js"],"names":["exports","__esModule","visitor","undefined","_babelTypes","require","t","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","getTDZStatus","refPath","bindingPath","executionStatus","_guessExecutionStatusRelativeTo","buildTDZAssert","node","file","callExpression","addHelper","stringLiteral","name","isReference","scope","state","declared","letReferences","getBindingIdentifier","ReferencedIdentifier","path","opts","tdz","parent","parentPath","isFor","left","getBinding","status","assert","_tdzThis","skip","isUpdateExpression","_ignoreBlockScopingTDZ","replaceWith","sequenceExpression","throwStatement","inherits","newExpression","identifier","AssignmentExpression","exit","nodes","ids","getBindingIdentifiers","id","push","length","replaceWithMultiple","map","expressionStatement"],"mappings":"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","file":"tdz.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.visitor = undefined;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction getTDZStatus(refPath, bindingPath) {\n  var executionStatus = bindingPath._guessExecutionStatusRelativeTo(refPath);\n\n  if (executionStatus === \"before\") {\n    return \"inside\";\n  } else if (executionStatus === \"after\") {\n    return \"outside\";\n  } else {\n    return \"maybe\";\n  }\n}\n\nfunction buildTDZAssert(node, file) {\n  return t.callExpression(file.addHelper(\"temporalRef\"), [node, t.stringLiteral(node.name), file.addHelper(\"temporalUndefined\")]);\n}\n\nfunction isReference(node, scope, state) {\n  var declared = state.letReferences[node.name];\n  if (!declared) return false;\n\n  return scope.getBindingIdentifier(node.name) === declared;\n}\n\nvar visitor = exports.visitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    if (!this.file.opts.tdz) return;\n\n    var node = path.node,\n        parent = path.parent,\n        scope = path.scope;\n\n\n    if (path.parentPath.isFor({ left: node })) return;\n    if (!isReference(node, scope, state)) return;\n\n    var bindingPath = scope.getBinding(node.name).path;\n\n    var status = getTDZStatus(path, bindingPath);\n    if (status === \"inside\") return;\n\n    if (status === \"maybe\") {\n      var assert = buildTDZAssert(node, state.file);\n\n      bindingPath.parent._tdzThis = true;\n\n      path.skip();\n\n      if (path.parentPath.isUpdateExpression()) {\n        if (parent._ignoreBlockScopingTDZ) return;\n        path.parentPath.replaceWith(t.sequenceExpression([assert, parent]));\n      } else {\n        path.replaceWith(assert);\n      }\n    } else if (status === \"outside\") {\n      path.replaceWith(t.throwStatement(t.inherits(t.newExpression(t.identifier(\"ReferenceError\"), [t.stringLiteral(node.name + \" is not defined - temporal dead zone\")]), node)));\n    }\n  },\n\n\n  AssignmentExpression: {\n    exit: function exit(path, state) {\n      if (!this.file.opts.tdz) return;\n\n      var node = path.node;\n\n      if (node._ignoreBlockScopingTDZ) return;\n\n      var nodes = [];\n      var ids = path.getBindingIdentifiers();\n\n      for (var name in ids) {\n        var id = ids[name];\n\n        if (isReference(id, path.scope, state)) {\n          nodes.push(buildTDZAssert(id, state.file));\n        }\n      }\n\n      if (nodes.length) {\n        node._ignoreBlockScopingTDZ = true;\n        nodes.push(node);\n        path.replaceWithMultiple(nodes.map(t.expressionStatement));\n      }\n    }\n  }\n};"]}