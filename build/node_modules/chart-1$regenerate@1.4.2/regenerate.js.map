{"version":3,"sources":["regenerate.js"],"names":["root","freeExports","exports","freeModule","module","freeGlobal","global","window","ERRORS","HIGH_SURROGATE_MIN","HIGH_SURROGATE_MAX","LOW_SURROGATE_MIN","LOW_SURROGATE_MAX","regexNull","object","hasOwnProperty","forEach","array","callback","index","length","toString","isArray","value","call","isNumber","pad","number","totalCharacters","string","String","slice","hex","Number","toUpperCase","dataFromCodePoints","codePoints","result","isStart","tmp","previous","push","dataRemove","data","codePoint","start","end","splice","dataRemoveRange","rangeStart","rangeEnd","Error","rangeOrder","dataAdd","lastIndex","RangeError","codePointRange","dataAddData","dataA","dataB","dataAddRange","dataRemoveData","added","dataContains","dataIntersection","dataIsEmpty","dataIsSingleton","dataToArray","floor","Math","highSurrogate","parseInt","lowSurrogate","stringFromCharCode","fromCharCode","codePointToString","codePointToStringUnicode","symbolToCodePoint","symbol","first","charCodeAt","second","createBMPCharacterClasses","createUnicodeCharacterClasses","splitAtBMP","loneHighSurrogates","loneLowSurrogates","bmp","astral","optimizeSurrogateMappings","surrogateMappings","tmpLow","addLow","mapping","nextMapping","highSurrogates","lowSurrogates","nextHighSurrogates","nextLowSurrogates","optimizeByLowSurrogates","innerIndex","lowSurrogateStart","lowSurrogateEnd","otherMapping","otherLowSurrogates","otherLowSurrogateStart","otherLowSurrogateEnd","surrogateSet","startHigh","startLow","endHigh","endLow","startsWithLowestLowSurrogate","endsWithHighestLowSurrogate","complete","createSurrogateCharacterClasses","surrogateMapping","join","createCharacterClassesFromData","bmpOnly","hasUnicodeFlag","parts","hasLoneHighSurrogates","hasLoneLowSurrogates","regenerate","arguments","add","version","proto","prototype","destination","source","key","$this","item","remove","startCodePoint","endCodePoint","argument","set","options","replace","flags","pattern","indexOf","RegExp","toArray","valueOf","define","amd","nodeType"],"mappings":"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","file":"regenerate.js","sourcesContent":["/*! https://mths.be/regenerate v1.4.2 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js/io.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar ERRORS = {\n\t\t'rangeOrder': 'A range\\u2019s `stop` value must be greater than or equal ' +\n\t\t\t'to the `start` value.',\n\t\t'codePointRange': 'Invalid code point value. Code points range from ' +\n\t\t\t'U+000000 to U+10FFFF.'\n\t};\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n\tvar HIGH_SURROGATE_MIN = 0xD800;\n\tvar HIGH_SURROGATE_MAX = 0xDBFF;\n\tvar LOW_SURROGATE_MIN = 0xDC00;\n\tvar LOW_SURROGATE_MAX = 0xDFFF;\n\n\t// In Regenerate output, `\\0` is never preceded by `\\` because we sort by\n\t// code point value, so let’s keep this regular expression simple.\n\tvar regexNull = /\\\\x00([^0123456789]|$)/g;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar extend = function(destination, source) {\n\t\tvar key;\n\t\tfor (key in source) {\n\t\t\tif (hasOwnProperty.call(source, key)) {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index], index);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\n\t// This assumes that `number` is a positive integer that `toString()`s nicely\n\t// (which is the case for all code point values).\n\tvar zeroes = '0000';\n\tvar pad = function(number, totalCharacters) {\n\t\tvar string = String(number);\n\t\treturn string.length < totalCharacters\n\t\t\t? (zeroes + string).slice(-totalCharacters)\n\t\t\t: string;\n\t};\n\n\tvar hex = function(number) {\n\t\treturn Number(number).toString(16).toUpperCase();\n\t};\n\n\tvar slice = [].slice;\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar dataFromCodePoints = function(codePoints) {\n\t\tvar index = -1;\n\t\tvar length = codePoints.length;\n\t\tvar max = length - 1;\n\t\tvar result = [];\n\t\tvar isStart = true;\n\t\tvar tmp;\n\t\tvar previous = 0;\n\t\twhile (++index < length) {\n\t\t\ttmp = codePoints[index];\n\t\t\tif (isStart) {\n\t\t\t\tresult.push(tmp);\n\t\t\t\tprevious = tmp;\n\t\t\t\tisStart = false;\n\t\t\t} else {\n\t\t\t\tif (tmp == previous + 1) {\n\t\t\t\t\tif (index != max) {\n\t\t\t\t\t\tprevious = tmp;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisStart = true;\n\t\t\t\t\t\tresult.push(tmp + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// End the previous range and start a new one.\n\t\t\t\t\tresult.push(previous + 1, tmp);\n\t\t\t\t\tprevious = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isStart) {\n\t\t\tresult.push(tmp + 1);\n\t\t}\n\t\treturn result;\n\t};\n\n\tvar dataRemove = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\t// Modify this pair.\n\t\t\t\tif (codePoint == start) {\n\t\t\t\t\tif (end == start + 1) {\n\t\t\t\t\t\t// Just remove `start` and `end`.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\t\t\tdata[index] = codePoint + 1;\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t} else if (codePoint == end - 1) {\n\t\t\t\t\t// Just replace `end` with a new value.\n\t\t\t\t\tdata[index + 1] = codePoint;\n\t\t\t\t\treturn data;\n\t\t\t\t} else {\n\t\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\t\tdata.splice(index, 2, start, codePoint, codePoint + 1, end);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\twhile (index < data.length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\t// Exit as soon as no more matching pairs can be found.\n\t\t\tif (start > rangeEnd) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if this range pair is equal to, or forms a subset of, the range\n\t\t\t// to be removed.\n\t\t\t// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n\t\t\t// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n\t\t\tif (rangeStart <= start && rangeEnd >= end) {\n\t\t\t\t// Remove this pair.\n\t\t\t\tdata.splice(index, 2);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if both `rangeStart` and `rangeEnd` are within the bounds of\n\t\t\t// this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n\t\t\tif (rangeStart >= start && rangeEnd < end) {\n\t\t\t\tif (rangeStart == start) {\n\t\t\t\t\t// Replace `[start, end]` with `[startB, endB]`.\n\t\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\t\tdata[index + 1] = end + 1;\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\tdata.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if only `rangeStart` is within the bounds of this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n\t\t\tif (rangeStart >= start && rangeStart <= end) {\n\t\t\t\t// Replace `end` with `rangeStart`.\n\t\t\t\tdata[index + 1] = rangeStart;\n\t\t\t\t// Note: we cannot `return` just yet, in case any following pairs still\n\t\t\t\t// contain matching code points.\n\t\t\t\t// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n\t\t\t\t// → `[0, 4, 21, 31]`.\n\t\t\t}\n\n\t\t\t// Check if only `rangeEnd` is within the bounds of this pair.\n\t\t\t// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n\t\t\telse if (rangeEnd >= start && rangeEnd <= end) {\n\t\t\t\t// Just replace `start`.\n\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\t var dataAdd = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar lastIndex = null;\n\t\tvar length = data.length;\n\t\tif (codePoint < 0x0 || codePoint > 0x10FFFF) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\t// Check if the code point is already in the set.\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == start - 1) {\n\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\tdata[index] = codePoint;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// At this point, if `start` is `greater` than `codePoint`, insert a new\n\t\t\t// `[start, end]` pair before the current pair, or after the current pair\n\t\t\t// if there is a known `lastIndex`.\n\t\t\tif (start > codePoint) {\n\t\t\t\tdata.splice(\n\t\t\t\t\tlastIndex != null ? lastIndex + 2 : 0,\n\t\t\t\t\t0,\n\t\t\t\t\tcodePoint,\n\t\t\t\t\tcodePoint + 1\n\t\t\t\t);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == end) {\n\t\t\t\t// Check if adding this code point causes two separate ranges to become\n\t\t\t\t// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n\t\t\t\tif (codePoint + 1 == data[index + 2]) {\n\t\t\t\t\tdata.splice(index, 4, start, data[index + 3]);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Else, just replace `end` with a new value.\n\t\t\t\tdata[index + 1] = codePoint + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\tlastIndex = index;\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished; add the new pair to the end of the data set.\n\t\tdata.push(codePoint, codePoint + 1);\n\t\treturn data;\n\t};\n\n\tvar dataAddData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataAdd(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataAddRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataRemove(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataRemoveRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataAddRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\tif (\n\t\t\trangeStart < 0x0 || rangeStart > 0x10FFFF ||\n\t\t\trangeEnd < 0x0 || rangeEnd > 0x10FFFF\n\t\t) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar added = false;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\tif (added) {\n\t\t\t\t// The range has already been added to the set; at this point, we just\n\t\t\t\t// need to get rid of the following ranges in case they overlap.\n\n\t\t\t\t// Check if this range can be combined with the previous range.\n\t\t\t\tif (start == rangeEnd + 1) {\n\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Exit as soon as no more possibly overlapping pairs can be found.\n\t\t\t\tif (start > rangeEnd) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n\t\t\t\t// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n\t\t\t\t// `0,16` range that was previously added.\n\t\t\t\tif (start >= rangeStart && start <= rangeEnd) {\n\t\t\t\t\t// `start` lies within the range that was previously added.\n\n\t\t\t\t\tif (end > rangeStart && end - 1 <= rangeEnd) {\n\t\t\t\t\t\t// `end` lies within the range that was previously added as well,\n\t\t\t\t\t\t// so remove this pair.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t\t// Note: we cannot `return` just yet, as there may still be other\n\t\t\t\t\t\t// overlapping pairs.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `start` lies within the range that was previously added, but\n\t\t\t\t\t\t// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n\t\t\t\t\t\t// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n\t\t\t\t\t\t// Remove the previously added `end` and the current `start`.\n\t\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: we cannot return yet.\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\telse if (start == rangeEnd + 1 || start == rangeEnd) {\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if a new pair must be inserted *before* the current one.\n\t\t\telse if (start > rangeEnd) {\n\t\t\t\tdata.splice(index, 0, rangeStart, rangeEnd + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n\t\t\t\t// The new range lies entirely within an existing range pair. No action\n\t\t\t\t// needed.\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (\n\t\t\t\t// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n\t\t\t\t(rangeStart >= start && rangeStart < end) ||\n\t\t\t\t// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n\t\t\t\tend == rangeStart\n\t\t\t) {\n\t\t\t\t// Replace `end` with the new value.\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\t// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n\t\t\t\t// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n\t\t\t\tadded = true;\n\t\t\t\t// Note: we cannot `return` just yet.\n\t\t\t}\n\n\t\t\telse if (rangeStart <= start && rangeEnd + 1 >= end) {\n\t\t\t\t// The new range is a superset of the old range.\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\tadded = true;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished without doing anything; add the new pair to the end\n\t\t// of the data set.\n\t\tif (!added) {\n\t\t\tdata.push(rangeStart, rangeEnd + 1);\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataContains = function(data, codePoint) {\n\t\tvar index = 0;\n\t\tvar length = data.length;\n\t\t// Exit early if `codePoint` is not within `data`’s overall range.\n\t\tvar start = data[index];\n\t\tvar end = data[length - 1];\n\t\tif (length >= 2) {\n\t\t\tif (codePoint < start || codePoint > end) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar dataIntersection = function(data, codePoints) {\n\t\tvar index = 0;\n\t\tvar length = codePoints.length;\n\t\tvar codePoint;\n\t\tvar result = [];\n\t\twhile (index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tif (dataContains(data, codePoint)) {\n\t\t\t\tresult.push(codePoint);\n\t\t\t}\n\t\t\t++index;\n\t\t}\n\t\treturn dataFromCodePoints(result);\n\t};\n\n\tvar dataIsEmpty = function(data) {\n\t\treturn !data.length;\n\t};\n\n\tvar dataIsSingleton = function(data) {\n\t\t// Check if the set only represents a single code point.\n\t\treturn data.length == 2 && data[0] + 1 == data[1];\n\t};\n\n\tvar dataToArray = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar result = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\twhile (start < end) {\n\t\t\t\tresult.push(start);\n\t\t\t\t++start;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar floor = Math.floor;\n\tvar highSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\tfloor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar lowSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\t(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar stringFromCharCode = String.fromCharCode;\n\tvar codePointToString = function(codePoint) {\n\t\tvar string;\n\t\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\t\t// Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n\t\t// different meaning in regular expressions (word boundary), so it cannot\n\t\t// be used here.\n\t\tif (codePoint == 0x09) {\n\t\t\tstring = '\\\\t';\n\t\t}\n\t\t// Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n\t\t// else if (codePoint == 0x0B) {\n\t\t// \tstring = '\\\\v';\n\t\t// }\n\t\telse if (codePoint == 0x0A) {\n\t\t\tstring = '\\\\n';\n\t\t}\n\t\telse if (codePoint == 0x0C) {\n\t\t\tstring = '\\\\f';\n\t\t}\n\t\telse if (codePoint == 0x0D) {\n\t\t\tstring = '\\\\r';\n\t\t}\n\t\telse if (codePoint == 0x2D) {\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n\t\t\t// Note: `-` (U+002D HYPHEN-MINUS) is escaped in this way rather\n\t\t\t// than by backslash-escaping, in case the output is used outside\n\t\t\t// of a character class in a `u` RegExp. /\\-/u throws, but\n\t\t\t// /\\x2D/u is fine.\n\t\t\tstring = '\\\\x2D';\n\t\t}\n\t\telse if (codePoint == 0x5C) {\n\t\t\tstring = '\\\\\\\\';\n\t\t}\n\t\telse if (\n\t\t\tcodePoint == 0x24 ||\n\t\t\t(codePoint >= 0x28 && codePoint <= 0x2B) ||\n\t\t\tcodePoint == 0x2E || codePoint == 0x2F ||\n\t\t\tcodePoint == 0x3F ||\n\t\t\t(codePoint >= 0x5B && codePoint <= 0x5E) ||\n\t\t\t(codePoint >= 0x7B && codePoint <= 0x7D)\n\t\t) {\n\t\t\t// The code point maps to an unsafe printable ASCII character;\n\t\t\t// backslash-escape it. Here’s the list of those symbols:\n\t\t\t//\n\t\t\t//     $()*+./?[\\]^{|}\n\t\t\t//\n\t\t\t// This matches SyntaxCharacters as well as `/` (U+002F SOLIDUS).\n\t\t\t// https://tc39.github.io/ecma262/#prod-SyntaxCharacter\n\t\t\tstring = '\\\\' + stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint >= 0x20 && codePoint <= 0x7E) {\n\t\t\t// The code point maps to one of these printable ASCII symbols\n\t\t\t// (including the space character):\n\t\t\t//\n\t\t\t//      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n\t\t\t//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n\t\t\t//\n\t\t\t// These can safely be used directly.\n\t\t\tstring = stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint <= 0xFF) {\n\t\t\tstring = '\\\\x' + pad(hex(codePoint), 2);\n\t\t}\n\t\telse { // `codePoint <= 0xFFFF` holds true.\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#unicode\n\t\t\tstring = '\\\\u' + pad(hex(codePoint), 4);\n\t\t}\n\n\t\t// There’s no need to account for astral symbols / surrogate pairs here,\n\t\t// since `codePointToString` is private and only used for BMP code points.\n\t\t// But if that’s what you need, just add an `else` block with this code:\n\t\t//\n\t\t//     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n\t\t//     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n\t\treturn string;\n\t};\n\n\tvar codePointToStringUnicode = function(codePoint) {\n\t\tif (codePoint <= 0xFFFF) {\n\t\t\treturn codePointToString(codePoint);\n\t\t}\n\t\treturn '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n\t};\n\n\tvar symbolToCodePoint = function(symbol) {\n\t\tvar length = symbol.length;\n\t\tvar first = symbol.charCodeAt(0);\n\t\tvar second;\n\t\tif (\n\t\t\tfirst >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&\n\t\t\tlength > 1 // There is a next code unit.\n\t\t) {\n\t\t\t// `first` is a high surrogate, and there is a next character. Assume\n\t\t\t// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n\t\t\tsecond = symbol.charCodeAt(1);\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 +\n\t\t\t\tsecond - LOW_SURROGATE_MIN + 0x10000;\n\t\t}\n\t\treturn first;\n\t};\n\n\tvar createBMPCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToString(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToString(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToString(start) + codePointToString(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToString(start) + '-' + codePointToString(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar createUnicodeCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToStringUnicode(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToStringUnicode(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToStringUnicode(start) + codePointToStringUnicode(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar splitAtBMP = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar loneHighSurrogates = [];\n\t\tvar loneLowSurrogates = [];\n\t\tvar bmp = [];\n\t\tvar astral = [];\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\tif (start < HIGH_SURROGATE_MIN) {\n\n\t\t\t\t// The range starts and ends before the high surrogate range.\n\t\t\t\t// E.g. (0, 0x10).\n\t\t\t\tif (end < HIGH_SURROGATE_MIN) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends within it.\n\t\t\t\t// E.g. (0, 0xD855).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends after the\n\t\t\t\t// low surrogate range. E.g. (0, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the high surrogate range.\n\t\t\t\t// E.g. (0xD855, 0xD866).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the low surrogate range.\n\t\t\t\t// E.g. (0xDCFF, 0xDDFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the low surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xDCFF, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {\n\n\t\t\t\t// The range starts and ends after the low surrogate range.\n\t\t\t\t// E.g. (0xFFAA, 0x10FFFF).\n\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t} else {\n\t\t\t\t\tbmp.push(start, 0xFFFF + 1);\n\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The range starts and ends in the astral range.\n\t\t\t\tastral.push(start, end + 1);\n\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn {\n\t\t\t'loneHighSurrogates': loneHighSurrogates,\n\t\t\t'loneLowSurrogates': loneLowSurrogates,\n\t\t\t'bmp': bmp,\n\t\t\t'astral': astral\n\t\t};\n\t};\n\n\tvar optimizeSurrogateMappings = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tvar tmpLow = [];\n\t\tvar addLow = false;\n\t\tvar mapping;\n\t\tvar nextMapping;\n\t\tvar highSurrogates;\n\t\tvar lowSurrogates;\n\t\tvar nextHighSurrogates;\n\t\tvar nextLowSurrogates;\n\t\tvar index = -1;\n\t\tvar length = surrogateMappings.length;\n\t\twhile (++index < length) {\n\t\t\tmapping = surrogateMappings[index];\n\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\tif (!nextMapping) {\n\t\t\t\tresult.push(mapping);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thighSurrogates = mapping[0];\n\t\t\tlowSurrogates = mapping[1];\n\t\t\tnextHighSurrogates = nextMapping[0];\n\t\t\tnextLowSurrogates = nextMapping[1];\n\n\t\t\t// Check for identical high surrogate ranges.\n\t\t\ttmpLow = lowSurrogates;\n\t\t\twhile (\n\t\t\t\tnextHighSurrogates &&\n\t\t\t\thighSurrogates[0] == nextHighSurrogates[0] &&\n\t\t\t\thighSurrogates[1] == nextHighSurrogates[1]\n\t\t\t) {\n\t\t\t\t// Merge with the next item.\n\t\t\t\tif (dataIsSingleton(nextLowSurrogates)) {\n\t\t\t\t\ttmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n\t\t\t\t} else {\n\t\t\t\t\ttmpLow = dataAddRange(\n\t\t\t\t\t\ttmpLow,\n\t\t\t\t\t\tnextLowSurrogates[0],\n\t\t\t\t\t\tnextLowSurrogates[1] - 1\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t++index;\n\t\t\t\tmapping = surrogateMappings[index];\n\t\t\t\thighSurrogates = mapping[0];\n\t\t\t\tlowSurrogates = mapping[1];\n\t\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\t\tnextHighSurrogates = nextMapping && nextMapping[0];\n\t\t\t\tnextLowSurrogates = nextMapping && nextMapping[1];\n\t\t\t\taddLow = true;\n\t\t\t}\n\t\t\tresult.push([\n\t\t\t\thighSurrogates,\n\t\t\t\taddLow ? tmpLow : lowSurrogates\n\t\t\t]);\n\t\t\taddLow = false;\n\t\t}\n\t\treturn optimizeByLowSurrogates(result);\n\t};\n\n\tvar optimizeByLowSurrogates = function(surrogateMappings) {\n\t\tif (surrogateMappings.length == 1) {\n\t\t\treturn surrogateMappings;\n\t\t}\n\t\tvar index = -1;\n\t\tvar innerIndex = -1;\n\t\twhile (++index < surrogateMappings.length) {\n\t\t\tvar mapping = surrogateMappings[index];\n\t\t\tvar lowSurrogates = mapping[1];\n\t\t\tvar lowSurrogateStart = lowSurrogates[0];\n\t\t\tvar lowSurrogateEnd = lowSurrogates[1];\n\t\t\tinnerIndex = index; // Note: the loop starts at the next index.\n\t\t\twhile (++innerIndex < surrogateMappings.length) {\n\t\t\t\tvar otherMapping = surrogateMappings[innerIndex];\n\t\t\t\tvar otherLowSurrogates = otherMapping[1];\n\t\t\t\tvar otherLowSurrogateStart = otherLowSurrogates[0];\n\t\t\t\tvar otherLowSurrogateEnd = otherLowSurrogates[1];\n\t\t\t\tif (\n\t\t\t\t\tlowSurrogateStart == otherLowSurrogateStart &&\n\t\t\t\t\tlowSurrogateEnd == otherLowSurrogateEnd &&\n\t\t\t\t\totherLowSurrogates.length === 2\n\t\t\t\t) {\n\t\t\t\t\t// Add the code points in the other item to this one.\n\t\t\t\t\tif (dataIsSingleton(otherMapping[0])) {\n\t\t\t\t\t\tmapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmapping[0] = dataAddRange(\n\t\t\t\t\t\t\tmapping[0],\n\t\t\t\t\t\t\totherMapping[0][0],\n\t\t\t\t\t\t\totherMapping[0][1] - 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Remove the other, now redundant, item.\n\t\t\t\t\tsurrogateMappings.splice(innerIndex, 1);\n\t\t\t\t\t--innerIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn surrogateMappings;\n\t};\n\n\tvar surrogateSet = function(data) {\n\t\t// Exit early if `data` is an empty set.\n\t\tif (!data.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar startHigh;\n\t\tvar startLow;\n\t\tvar endHigh;\n\t\tvar endLow;\n\t\tvar surrogateMappings = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1;\n\n\t\t\tstartHigh = highSurrogate(start);\n\t\t\tstartLow = lowSurrogate(start);\n\t\t\tendHigh = highSurrogate(end);\n\t\t\tendLow = lowSurrogate(end);\n\n\t\t\tvar startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n\t\t\tvar endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n\t\t\tvar complete = false;\n\n\t\t\t// Append the previous high-surrogate-to-low-surrogate mappings.\n\t\t\t// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n\t\t\tif (\n\t\t\t\tstartHigh == endHigh ||\n\t\t\t\tstartsWithLowestLowSurrogate && endsWithHighestLowSurrogate\n\t\t\t) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, endHigh + 1],\n\t\t\t\t\t[startLow, endLow + 1]\n\t\t\t\t]);\n\t\t\t\tcomplete = true;\n\t\t\t} else {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, startHigh + 1],\n\t\t\t\t\t[startLow, LOW_SURROGATE_MAX + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n\t\t\t// `(endHigh - 1, LOW_SURROGATE_MAX)`.\n\t\t\tif (!complete && startHigh + 1 < endHigh) {\n\t\t\t\tif (endsWithHighestLowSurrogate) {\n\t\t\t\t\t// Combine step 2 and step 3.\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh + 1],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t\t]);\n\t\t\t\t\tcomplete = true;\n\t\t\t\t} else {\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n\t\t\tif (!complete) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[endHigh, endHigh + 1],\n\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\n\t\t// The format of `surrogateMappings` is as follows:\n\t\t//\n\t\t//     [ surrogateMapping1, surrogateMapping2 ]\n\t\t//\n\t\t// i.e.:\n\t\t//\n\t\t//     [\n\t\t//       [ highSurrogates1, lowSurrogates1 ],\n\t\t//       [ highSurrogates2, lowSurrogates2 ]\n\t\t//     ]\n\t\treturn optimizeSurrogateMappings(surrogateMappings);\n\t};\n\n\tvar createSurrogateCharacterClasses = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tforEach(surrogateMappings, function(surrogateMapping) {\n\t\t\tvar highSurrogates = surrogateMapping[0];\n\t\t\tvar lowSurrogates = surrogateMapping[1];\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(highSurrogates) +\n\t\t\t\tcreateBMPCharacterClasses(lowSurrogates)\n\t\t\t);\n\t\t});\n\t\treturn result.join('|');\n\t};\n\n\tvar createCharacterClassesFromData = function(data, bmpOnly, hasUnicodeFlag) {\n\t\tif (hasUnicodeFlag) {\n\t\t\treturn createUnicodeCharacterClasses(data);\n\t\t}\n\t\tvar result = [];\n\n\t\tvar parts = splitAtBMP(data);\n\t\tvar loneHighSurrogates = parts.loneHighSurrogates;\n\t\tvar loneLowSurrogates = parts.loneLowSurrogates;\n\t\tvar bmp = parts.bmp;\n\t\tvar astral = parts.astral;\n\t\tvar hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);\n\t\tvar hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);\n\n\t\tvar surrogateMappings = surrogateSet(astral);\n\n\t\tif (bmpOnly) {\n\t\t\tbmp = dataAddData(bmp, loneHighSurrogates);\n\t\t\thasLoneHighSurrogates = false;\n\t\t\tbmp = dataAddData(bmp, loneLowSurrogates);\n\t\t\thasLoneLowSurrogates = false;\n\t\t}\n\n\t\tif (!dataIsEmpty(bmp)) {\n\t\t\t// The data set contains BMP code points that are not high surrogates\n\t\t\t// needed for astral code points in the set.\n\t\t\tresult.push(createBMPCharacterClasses(bmp));\n\t\t}\n\t\tif (surrogateMappings.length) {\n\t\t\t// The data set contains astral code points; append character classes\n\t\t\t// based on their surrogate pairs.\n\t\t\tresult.push(createSurrogateCharacterClasses(surrogateMappings));\n\t\t}\n\t\t// https://gist.github.com/mathiasbynens/bbe7f870208abcfec860\n\t\tif (hasLoneHighSurrogates) {\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(loneHighSurrogates) +\n\t\t\t\t// Make sure the high surrogates aren’t part of a surrogate pair.\n\t\t\t\t'(?![\\\\uDC00-\\\\uDFFF])'\n\t\t\t);\n\t\t}\n\t\tif (hasLoneLowSurrogates) {\n\t\t\tresult.push(\n\t\t\t\t// It is not possible to accurately assert the low surrogates aren’t\n\t\t\t\t// part of a surrogate pair, since JavaScript regular expressions do\n\t\t\t\t// not support lookbehind.\n\t\t\t\t'(?:[^\\\\uD800-\\\\uDBFF]|^)' +\n\t\t\t\tcreateBMPCharacterClasses(loneLowSurrogates)\n\t\t\t);\n\t\t}\n\t\treturn result.join('|');\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// `regenerate` can be used as a constructor (and new methods can be added to\n\t// its prototype) but also as a regular function, the latter of which is the\n\t// documented and most common usage. For that reason, it’s not capitalized.\n\tvar regenerate = function(value) {\n\t\tif (arguments.length > 1) {\n\t\t\tvalue = slice.call(arguments);\n\t\t}\n\t\tif (this instanceof regenerate) {\n\t\t\tthis.data = [];\n\t\t\treturn value ? this.add(value) : this;\n\t\t}\n\t\treturn (new regenerate).add(value);\n\t};\n\n\tregenerate.version = '1.4.2';\n\n\tvar proto = regenerate.prototype;\n\textend(proto, {\n\t\t'add': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataAddData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.add(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataAdd(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'remove': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataRemoveData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.remove(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataRemove(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'addRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\t$this.data = dataAddRange($this.data,\n\t\t\t\tisNumber(start) ? start : symbolToCodePoint(start),\n\t\t\t\tisNumber(end) ? end : symbolToCodePoint(end)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'removeRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\tvar startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n\t\t\tvar endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n\t\t\t$this.data = dataRemoveRange(\n\t\t\t\t$this.data,\n\t\t\t\tstartCodePoint,\n\t\t\t\tendCodePoint\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'intersection': function(argument) {\n\t\t\tvar $this = this;\n\t\t\t// Allow passing other Regenerate instances.\n\t\t\t// TODO: Optimize this by writing and using `dataIntersectionData()`.\n\t\t\tvar array = argument instanceof regenerate ?\n\t\t\t\tdataToArray(argument.data) :\n\t\t\t\targument;\n\t\t\t$this.data = dataIntersection($this.data, array);\n\t\t\treturn $this;\n\t\t},\n\t\t'contains': function(codePoint) {\n\t\t\treturn dataContains(\n\t\t\t\tthis.data,\n\t\t\t\tisNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)\n\t\t\t);\n\t\t},\n\t\t'clone': function() {\n\t\t\tvar set = new regenerate;\n\t\t\tset.data = this.data.slice(0);\n\t\t\treturn set;\n\t\t},\n\t\t'toString': function(options) {\n\t\t\tvar result = createCharacterClassesFromData(\n\t\t\t\tthis.data,\n\t\t\t\toptions ? options.bmpOnly : false,\n\t\t\t\toptions ? options.hasUnicodeFlag : false\n\t\t\t);\n\t\t\tif (!result) {\n\t\t\t\t// For an empty set, return something that can be inserted `/here/` to\n\t\t\t\t// form a valid regular expression. Avoid `(?:)` since that matches the\n\t\t\t\t// empty string.\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\t// Use `\\0` instead of `\\x00` where possible.\n\t\t\treturn result.replace(regexNull, '\\\\0$1');\n\t\t},\n\t\t'toRegExp': function(flags) {\n\t\t\tvar pattern = this.toString(\n\t\t\t\tflags && flags.indexOf('u') != -1 ?\n\t\t\t\t\t{ 'hasUnicodeFlag': true } :\n\t\t\t\t\tnull\n\t\t\t);\n\t\t\treturn RegExp(pattern, flags || '');\n\t\t},\n\t\t'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.\n\t\t\treturn dataToArray(this.data);\n\t\t}\n\t});\n\n\tproto.toArray = proto.valueOf;\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn regenerate;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = regenerate;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.regenerate = regenerate;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.regenerate = regenerate;\n\t}\n\n}(this));\n"]}